{"version":3,"sources":["webpack:///../node_modules/.pnpm/fontkit@2.0.2/node_modules/fontkit/dist/browser.cjs"],"names":["$gfJaN$restructure","$gfJaN$swchelperslib_define_propertyjs","$gfJaN$swchelperslib_ts_decoratejs","$gfJaN$fastdeepequal","$gfJaN$unicodeproperties","$gfJaN$unicodetrie","$gfJaN$dfa","$gfJaN$clone","$gfJaN$tinyinflate","$gfJaN$brotlidecompressjs","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","$59aa4ed98453e1d4$exports","$59aa4ed98453e1d4$export$bd5c5d8b8dcafd78","$59aa4ed98453e1d4$export$36b2f24e97d43be","$59aa4ed98453e1d4$export$185802fd694ee1f5","$59aa4ed98453e1d4$export$42940898df819940","$59aa4ed98453e1d4$export$5157e7780d44cc36","$59aa4ed98453e1d4$var$formats","format","push","buffer","postscriptName","i","length","probe","font","DecodeStream","getFont","Error","lang","$3bda6911913b43f0$export$69a3209f1a06c04d","target","key1","descriptor","value","call","this","fn","cache1","Map","memoized","args","key","has","result","apply","$e4ae0436c91af89f$var$SubHeader","Struct","firstCode","uint16","entryCount","idDelta","int16","idRangeOffset","$e4ae0436c91af89f$var$CmapGroup","startCharCode","uint32","endCharCode","glyphID","$e4ae0436c91af89f$var$UnicodeValueRange","startUnicodeValue","uint24","additionalCount","uint8","$e4ae0436c91af89f$var$UVSMapping","unicodeValue","$e4ae0436c91af89f$var$DefaultUVS","Array","$e4ae0436c91af89f$var$NonDefaultUVS","$e4ae0436c91af89f$var$VarSelectorRecord","varSelector","defaultUVS","Pointer","type","nonDefaultUVS","$e4ae0436c91af89f$var$CmapSubtable","VersionedStruct","0","language","codeMap","LazyArray","2","subHeaderKeys","subHeaderCount","t","Math","max","subHeaders","glyphIndexArray","4","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCode","reservedPad","Reserved","startCode","_currentOffset","6","glyphIndices","8","reserved","is32","nGroups","groups","10","12","13","14","numRecords","varSelectors","$e4ae0436c91af89f$var$CmapEntry","platformID","encodingID","table","lazy","$e4ae0436c91af89f$export$2e2bcd8739ae039","version","numSubtables","tables","$55a60976afb7c261$export$2e2bcd8739ae039","int32","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","Bitfield","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","$dde72b7b5b650596$export$2e2bcd8739ae039","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","$a7c40184072c9a5b$var$HmtxEntry","advance","bearing","$a7c40184072c9a5b$export$2e2bcd8739ae039","metrics","parent","hhea","bearings","maxp","numGlyphs","$521197722369f691$export$2e2bcd8739ae039","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","$e2613b812f052cbe$export$badc544e0651b6b1","languageID","$e2613b812f052cbe$export$479e671907f486d1","$e2613b812f052cbe$export$6fef87b7618bdf0b","$e2613b812f052cbe$var$SINGLE_BYTE_ENCODINGS","Set","$e2613b812f052cbe$var$MAC_ENCODINGS","$e2613b812f052cbe$var$encodingCache","$e2613b812f052cbe$export$1dceb3c14ed68bee","encoding","cached","mapping","res","charCodeAt","decoder","TextDecoder","Uint8Array","decode","i1","15","17","18","24","25","26","27","28","30","37","38","39","40","143","146","$e2613b812f052cbe$export$2092376fd002e13","60","90","1","31","61","91","32","62","92","3","33","63","93","34","64","94","5","35","65","128","36","66","129","7","67","130","68","131","9","69","132","70","133","11","41","71","134","42","72","135","43","73","136","44","74","137","45","75","138","16","46","76","139","47","77","140","48","78","141","19","49","79","142","20","50","80","21","51","81","144","22","52","82","145","23","53","83","54","84","147","55","85","148","56","86","149","57","87","150","58","88","151","29","59","89","$51a9f4feb3a3b2b1$var$NameRecord","nameID","string","String","relativeTo","ctx","stringOffset","allowNull","$51a9f4feb3a3b2b1$var$LangTagRecord","tag","$51a9f4feb3a3b2b1$var$NameTable","count","records","langTagCount","langTags","$51a9f4feb3a3b2b1$export$2e2bcd8739ae039","$51a9f4feb3a3b2b1$var$NAMES","process","stream","record","obj","preEncode","isArray","val","indexOf","en","size","$114ea85db469b435$var$OS2","header","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulCharRange","vendorID","fsSelection","usFirstCharIndex","usLastCharIndex","typoAscender","typoDescender","typoLineGap","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContent","usLowerOpticalPointSize","usUpperOpticalPointSize","$114ea85db469b435$var$versions","versions","$114ea85db469b435$export$2e2bcd8739ae039","$f93b30299e1ea0f5$export$2e2bcd8739ae039","fixed32","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","names","2.5","offsets","map","$8fb09b0f473d61a0$export$2e2bcd8739ae039","controlValues","$873d79fea57d3161$export$2e2bcd8739ae039","instructions","$83c4155666d50c37$var$loca","_processed","$83c4155666d50c37$export$2e2bcd8739ae039","$b12598db7cdf7042$export$2e2bcd8739ae039","controlValueProgram","$7707bdf21a3d89cc$export$2e2bcd8739ae039","Buffer","$9eaea3754914a290$export$2e2bcd8739ae039","hdrSize","getCFFVersion","readUInt32BE","readUInt16BE","offsetType","offSize","readUInt8","pos","ret","startPos","start","end","offset","arr","item","writeUInt16BE","sizes","writeUInt8","encode","item1","$f77b592c17132d70$var$FLOAT_LOOKUP","$f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP","$f77b592c17132d70$export$2e2bcd8739ae039","readInt16BE","readInt32BE","str","b","n1","n2","parseFloat","forceLarge","ceil","Number","writeInt32BE","writeInt16BE","c1","c2","$f77b592c17132d70$var$FLOAT_EOF","$efe622f40a9c35bd$export$2e2bcd8739ae039","operands","op","decodeOperands","encodeOperands","defineProperties","_startOffset","fields","field","PropertyDescriptor","dict","includePointers","pointerSize","startOffset","len","k","pointers","pointerOffset","ops","op1","ptr","$4aa1b0749c2770f8$export$2e2bcd8739ae039","super","$4aa1b0749c2770f8$var$Ptr","options","$15a0cbb3d09cf7ee$export$2e2bcd8739ae039","numBlends","pop","$860d3574d7fa3a51$export$2e2bcd8739ae039","$c4ffe47cba1d7f36$export$dee0027060fa13bd","$1e7c7c16984e4427$export$c33b50336c234f16","$b6dd765146ad212a$var$LangSysTable","reqFeatureIndex","featureCount","featureIndexes","$b6dd765146ad212a$var$LangSysRecord","langSys","$b6dd765146ad212a$var$Script","defaultLangSys","langSysRecords","$b6dd765146ad212a$var$ScriptRecord","script","$b6dd765146ad212a$export$3e15fc05ce864229","$b6dd765146ad212a$var$FeatureParams","$b6dd765146ad212a$export$6e91cf7616333d5","featureParams","lookupCount","lookupListIndexes","$b6dd765146ad212a$var$FeatureRecord","feature","$b6dd765146ad212a$export$aa18130def4b6cb4","$b6dd765146ad212a$var$LookupFlags","markAttachmentType","$b6dd765146ad212a$export$df0008c6ff2da22a","SubTable","Lookup","lookupType","subTableCount","subTables","markFilteringSet","Optional","useMarkFilteringSet","$b6dd765146ad212a$var$RangeRecord","startCoverageIndex","$b6dd765146ad212a$export$17608c3f81a6111","glyphCount","glyphs","rangeCount","rangeRecords","$b6dd765146ad212a$var$ClassRangeRecord","class","$b6dd765146ad212a$export$843d551fbbafef71","startGlyph","classValueArray","classRangeCount","classRangeRecord","$b6dd765146ad212a$export$8215d14a63d9fb10","deltaFormat","$b6dd765146ad212a$var$LookupRecord","sequenceIndex","lookupListIndex","$b6dd765146ad212a$var$Rule","input","lookupRecords","$b6dd765146ad212a$var$RuleSet","$b6dd765146ad212a$var$ClassRule","classes","$b6dd765146ad212a$var$ClassSet","$b6dd765146ad212a$export$841858b892ce1f4c","coverage","ruleSetCount","ruleSets","classDef","classSetCnt","classSet","coverages","$b6dd765146ad212a$var$ChainRule","backtrackGlyphCount","backtrack","inputGlyphCount","lookaheadGlyphCount","lookahead","$b6dd765146ad212a$var$ChainRuleSet","$b6dd765146ad212a$export$5e6d09e6861162f6","chainCount","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","backtrackCoverage","inputCoverage","lookaheadCoverage","$2e4adcda047b3383$var$F2DOT14","Fixed","$2e4adcda047b3383$var$RegionAxisCoordinates","startCoord","peakCoord","endCoord","$2e4adcda047b3383$var$VariationRegionList","axisCount","regionCount","variationRegions","$2e4adcda047b3383$var$DeltaSet","shortDeltas","shortDeltaCount","regionDeltas","int8","regionIndexCount","deltas","concat","$2e4adcda047b3383$var$ItemVariationData","itemCount","regionIndexes","deltaSets","$2e4adcda047b3383$export$fe1b122a2710f241","variationRegionList","variationDataCount","itemVariationData","$2e4adcda047b3383$var$ConditionTable","axisIndex","filterRangeMinValue","filterRangeMaxValue","$2e4adcda047b3383$var$ConditionSet","conditionCount","conditionTable","$2e4adcda047b3383$var$FeatureTableSubstitutionRecord","featureIndex","alternateFeatureTable","$2e4adcda047b3383$var$FeatureTableSubstitution","substitutionCount","substitutions","$2e4adcda047b3383$var$FeatureVariationRecord","conditionSet","featureTableSubstitution","$2e4adcda047b3383$export$441b70b7971dd419","majorVersion","minorVersion","featureVariationRecordCount","featureVariationRecords","$5b547cf9e5da519b$var$PredefinedOp","predefinedOps","index","$5b547cf9e5da519b$var$CFFEncodingVersion","$5b547cf9e5da519b$var$Range1","first","nLeft","$5b547cf9e5da519b$var$Range2","$5b547cf9e5da519b$var$CFFEncoding","nCodes","codes","nRanges","ranges","$5b547cf9e5da519b$var$RangeArray","resolveLength","range","$5b547cf9e5da519b$var$CFFCharset","CharStrings","$5b547cf9e5da519b$var$FDRange3","fd","$5b547cf9e5da519b$var$FDRange4","$5b547cf9e5da519b$var$FDSelect","fds","sentinel","$5b547cf9e5da519b$var$ptr","$5b547cf9e5da519b$var$CFFPrivateOp","$5b547cf9e5da519b$var$FontDict","$5b547cf9e5da519b$var$CFFTopDict","$5b547cf9e5da519b$var$VariationStore","itemVariationStore","$5b547cf9e5da519b$var$CFF2TopDict","$5b547cf9e5da519b$export$2e2bcd8739ae039","fixed16","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","$f717432b360040c7$var$CFFFont","top","isCIDFont","ROS","sid","FullName","FamilyName","glyph","readBuffer","gid","charset","FDSelect","low","high","mid","fdForGlyph","FDArray","Private","$f717432b360040c7$export$2e2bcd8739ae039","$8cb7ae73ed7aa7d8$var$VerticalOrigin","glyphIndex","vertOriginY","$8cb7ae73ed7aa7d8$export$2e2bcd8739ae039","defaultVertOriginY","numVertOriginYMetrics","$20e0c7bbecb76d75$export$16b227cb15d716a0","height","width","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","$20e0c7bbecb76d75$export$62c53e75f69bfe12","bearingX","bearingY","$20e0c7bbecb76d75$var$EBDTComponent","xOffset","yOffset","$20e0c7bbecb76d75$var$ByteAligned","$20e0c7bbecb76d75$var$BitAligned","data","pad","numComponents","components","dataLen","$035bb95c0cdb1f6d$var$SBitLineMetrics","ascender","descender","widthMax","caretSlopeNumerator","caretSlopeDenominator","minOriginSB","minAdvanceSB","maxBeforeBL","minAfterBL","$035bb95c0cdb1f6d$var$CodeOffsetPair","glyphCode","$035bb95c0cdb1f6d$var$IndexSubtable","imageFormat","imageDataOffset","offsetArray","lastGlyphIndex","firstGlyphIndex","imageSize","bigMetrics","glyphArray","glyphCodeArray","$035bb95c0cdb1f6d$var$IndexSubtableArray","subtable","$035bb95c0cdb1f6d$var$BitmapSizeTable","indexSubTableArray","indexTablesSize","numberOfIndexSubTables","colorRef","hori","vert","startGlyphIndex","endGlyphIndex","ppemX","ppemY","bitDepth","$035bb95c0cdb1f6d$export$2e2bcd8739ae039","numSizes","$73d13900b55a3c0c$var$ImageTable","ppem","resolution","imageOffsets","$73d13900b55a3c0c$export$2e2bcd8739ae039","numImgTables","imageTables","$97f6b8be3a347a8f$var$LayerRecord","paletteIndex","$97f6b8be3a347a8f$var$BaseGlyphRecord","firstLayerIndex","numLayers","$97f6b8be3a347a8f$export$2e2bcd8739ae039","numBaseGlyphRecords","baseGlyphRecord","layerRecords","numLayerRecords","$16ca60ecbdee30ea$var$ColorRecord","blue","green","red","alpha","$16ca60ecbdee30ea$export$2e2bcd8739ae039","numPaletteEntries","numPalettes","numColorRecords","colorRecords","colorRecordIndices","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","$7327e41706f9d5c7$var$BaseCoord","coordinate","referenceGlyph","baseCoordPoint","deviceTable","$7327e41706f9d5c7$var$BaseValues","defaultIndex","baseCoordCount","baseCoords","$7327e41706f9d5c7$var$FeatMinMaxRecord","minCoord","maxCoord","$7327e41706f9d5c7$var$MinMax","featMinMaxCount","featMinMaxRecords","$7327e41706f9d5c7$var$BaseLangSysRecord","minMax","$7327e41706f9d5c7$var$BaseScript","baseValues","defaultMinMax","baseLangSysCount","baseLangSysRecords","$7327e41706f9d5c7$var$BaseScriptRecord","$7327e41706f9d5c7$var$BaseScriptList","$7327e41706f9d5c7$var$BaseTagList","$7327e41706f9d5c7$var$Axis","baseTagList","baseScriptList","$7327e41706f9d5c7$export$2e2bcd8739ae039","horizAxis","vertAxis","$7e48bbe9e5345664$var$AttachPoint","$7e48bbe9e5345664$var$AttachList","attachPoints","$7e48bbe9e5345664$var$CaretValue","caretValuePoint","$7e48bbe9e5345664$var$LigGlyph","$7e48bbe9e5345664$var$LigCaretList","ligGlyphCount","ligGlyphs","$7e48bbe9e5345664$var$MarkGlyphSetsDef","markSetTableFormat","markSetCount","$7e48bbe9e5345664$export$2e2bcd8739ae039","glyphClassDef","attachList","ligCaretList","markAttachClassDef","markGlyphSetsDef","$b687332511a4da75$var$ValueFormat","$b687332511a4da75$var$types","xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","rel","yPlaDevice","xAdvDevice","yAdvDevice","$b687332511a4da75$var$ValueRecord","struct","buildStruct","$b687332511a4da75$var$PairValueRecord","secondGlyph","value1","value2","$b687332511a4da75$var$PairSet","$b687332511a4da75$var$Class2Record","$b687332511a4da75$var$Anchor","xCoordinate","yCoordinate","anchorPoint","xDeviceTable","yDeviceTable","$b687332511a4da75$var$EntryExitRecord","entryAnchor","exitAnchor","$b687332511a4da75$var$MarkRecord","markAnchor","$b687332511a4da75$var$MarkArray","$b687332511a4da75$var$BaseRecord","classCount","$b687332511a4da75$var$BaseArray","$b687332511a4da75$var$ComponentRecord","$b687332511a4da75$var$LigatureAttach","$b687332511a4da75$var$LigatureArray","$b687332511a4da75$export$73a8cfb19cd43a0f","valueFormat","valueCount","values","valueFormat1","valueFormat2","pairSetCount","pairSets","classDef1","classDef2","class1Count","class2Count","classRecords","entryExitCount","entryExitRecords","markCoverage","baseCoverage","markArray","baseArray","ligatureCoverage","ligatureArray","mark1Coverage","mark2Coverage","mark1Array","mark2Array","posFormat","extension","$b687332511a4da75$export$2e2bcd8739ae039","scriptList","featureList","lookupList","featureVariations","$99ccad60b96f92fb$var$Sequence","$99ccad60b96f92fb$var$AlternateSet","$99ccad60b96f92fb$var$Ligature","compCount","$99ccad60b96f92fb$var$LigatureSet","$99ccad60b96f92fb$var$GSUBLookup","deltaGlyphID","substitute","substFormat","sequences","alternateSet","ligatureSets","substitutes","$99ccad60b96f92fb$export$2e2bcd8739ae039","$573d5042c76c4940$var$JstfGSUBModList","$573d5042c76c4940$var$JstfPriority","shrinkageEnableGSUB","shrinkageDisableGSUB","shrinkageEnableGPOS","shrinkageDisableGPOS","shrinkageJstfMax","extensionEnableGSUB","extensionDisableGSUB","extensionEnableGPOS","extensionDisableGPOS","extensionJstfMax","$573d5042c76c4940$var$JstfLangSys","$573d5042c76c4940$var$JstfLangSysRecord","jstfLangSys","$573d5042c76c4940$var$JstfScript","extenderGlyphs","langSysCount","$573d5042c76c4940$var$JstfScriptRecord","$573d5042c76c4940$export$2e2bcd8739ae039","scriptCount","$a5875b80d6087f61$var$MapDataEntry","entry","readUInt24BE","_size","entryFormat","outerIndex","innerIndex","$a5875b80d6087f61$var$DeltaSetIndexMap","mapCount","mapData","$a5875b80d6087f61$export$2e2bcd8739ae039","advanceWidthMapping","LSBMapping","RSBMapping","$4423bc1ac09bbbd1$var$Signature","$4423bc1ac09bbbd1$var$SignatureBlock","cbSignature","signature","$4423bc1ac09bbbd1$export$2e2bcd8739ae039","ulVersion","usNumSigs","usFlag","signatures","signatureBlocks","$7b50e3f8d83263de$var$GaspRange","rangeMaxPPEM","rangeGaspBehavior","$7b50e3f8d83263de$export$2e2bcd8739ae039","numRanges","gaspRanges","$7bf92ec372cd2307$var$DeviceRecord","pixelSize","maximumWidth","widths","$7bf92ec372cd2307$export$2e2bcd8739ae039","sizeDeviceRecord","$a3f544bcf76542d1$var$KernPair","left","right","$a3f544bcf76542d1$var$ClassTable","firstGlyph","nGlyphs","$a3f544bcf76542d1$var$Kern2Array","off","leftTable","rowWidth","$a3f544bcf76542d1$var$KernSubtable","nPairs","pairs","rightTable","array","kernValueCount","leftClassCount","rightClassCount","kernValue","leftClass","rightClass","kernIndex","$a3f544bcf76542d1$var$KernTable","subVersion","padding","tupleIndex","$a3f544bcf76542d1$export$2e2bcd8739ae039","nTables","$86687befb45925d0$export$2e2bcd8739ae039","yPels","$91429006e51e0fe8$export$2e2bcd8739ae039","fontNumber","pitch","style","typeFamily","symbolSet","typeface","characterComplement","fileName","strokeWeight","widthType","serifStyle","$627850fc9deed59a$var$Ratio","bCharSet","xRatio","yStartRatio","yEndRatio","$627850fc9deed59a$var$vTable","yPelHeight","$627850fc9deed59a$var$VdmxGroup","recs","startsz","endsz","entries","$627850fc9deed59a$export$2e2bcd8739ae039","numRecs","numRatios","ratioRanges","$65c33f5f068fc77f$export$2e2bcd8739ae039","advanceHeightMax","minTopSideBearing","minBottomSideBearing","yMaxExtent","$597d739523b65bb3$var$VmtxEntry","$597d739523b65bb3$export$2e2bcd8739ae039","vhea","$35aa0c87d9c3d3a0$var$shortFrac","$35aa0c87d9c3d3a0$var$Correspondence","fromCoord","toCoord","$35aa0c87d9c3d3a0$var$Segment","pairCount","correspondence","$35aa0c87d9c3d3a0$export$2e2bcd8739ae039","segment","$22801616bd931ca3$var$UnboundedArrayAccessor","_items","base","constructor","name","$22801616bd931ca3$export$c5af1eebc882e39a","$22801616bd931ca3$export$8351f8c2ae2f103c","ValueType","BinarySearchHeader","unitSize","nUnits","LookupSegmentSingle","lastGlyph","LookupSegmentArray","LookupSingle","binarySearchHeader","segments","$22801616bd931ca3$export$79f7d93d790934ba","entryData","assign","newState","Entry","StateArray","nClasses","classTable","stateArray","entryTable","$3a5ca96d3e3aaf20$var$BslnSubtable","mappingData","standardGlyph","controlPoints","$3a5ca96d3e3aaf20$export$2e2bcd8739ae039","defaultBaseline","$8d4241d96b2b0589$var$Setting","setting","fontFeatures","$8d4241d96b2b0589$var$FeatureName","nSettings","settingTable","featureFlags","defaultSetting","$8d4241d96b2b0589$export$2e2bcd8739ae039","featureNameCount","reserved1","reserved2","featureNames","$a79cd5132b1cf476$var$Axis","axisTag","minValue","defaultValue","maxValue","$a79cd5132b1cf476$var$Instance","coord","postscriptNameID","instanceSize","$a79cd5132b1cf476$export$2e2bcd8739ae039","offsetToData","countSizePairs","axisSize","instanceCount","axis","instance","$3f36f1a5e6989457$var$shortFrac","$3f36f1a5e6989457$export$2e2bcd8739ae039","globalCoordCount","globalCoords","$0bd8fe7a6d1d9fb4$var$ClassTable","subFeatureFlags","stateTable","ClassLookupTable","newStateOffset","$0bd8fe7a6d1d9fb4$var$WidthDeltaRecord","justClass","beforeGrowLimit","beforeShrinkLimit","afterGrowLimit","afterShrinkLimit","growFlags","shrinkFlags","$0bd8fe7a6d1d9fb4$var$WidthDeltaCluster","$0bd8fe7a6d1d9fb4$var$ActionData","lowerLimit","upperLimit","order","addGlyph","substThreshold","substGlyph","variationAxis","minimumLimit","noStretchValue","maximumLimit","$0bd8fe7a6d1d9fb4$var$Action","actionClass","actionType","actionLength","actionData","$0bd8fe7a6d1d9fb4$var$PostcompensationAction","$0bd8fe7a6d1d9fb4$var$PostCompensationTable","lookupTable","$0bd8fe7a6d1d9fb4$var$JustificationTable","wdcOffset","postCompensationTable","widthDeltaClusters","$0bd8fe7a6d1d9fb4$export$2e2bcd8739ae039","horizontal","vertical","$ef40c6dc80fd50a2$var$LigatureData","action","$ef40c6dc80fd50a2$var$ContextualData","markIndex","currentIndex","$ef40c6dc80fd50a2$var$InsertionData","currentInsertIndex","markedInsertIndex","$ef40c6dc80fd50a2$var$SubstitutionTable","items","$ef40c6dc80fd50a2$var$SubtableData","substitutionTable","ligatureActions","ligatureList","insertionActions","$ef40c6dc80fd50a2$var$Subtable","$ef40c6dc80fd50a2$var$FeatureEntry","featureType","featureSetting","enableFlags","disableFlags","$ef40c6dc80fd50a2$var$MorxChain","defaultFlags","chainLength","nFeatureEntries","nSubtables","features","subtables","$ef40c6dc80fd50a2$export$2e2bcd8739ae039","unused","nChains","chains","$ab24dea08b58a7cc$var$OpticalBounds","bottom","$ab24dea08b58a7cc$export$2e2bcd8739ae039","$5825c04ce8f7102d$var$tables","$5825c04ce8f7102d$export$2e2bcd8739ae039","cmap","head","hmtx","post","fpgm","loca","prep","glyf","VORG","EBLC","CBLC","sbix","COLR","CPAL","BASE","GDEF","GPOS","GSUB","JSTF","HVAR","DSIG","gasp","hdmx","kern","LTSH","PCLT","VDMX","vmtx","avar","bsln","feat","fvar","gvar","just","morx","opbd","$df50e1efe10a1247$var$TableEntry","checkSum","$df50e1efe10a1247$var$Directory","numTables","VoidPointer","maxExponentFor2","floor","log","LN2","maxPowerOf2","pow","$df50e1efe10a1247$export$2e2bcd8739ae039","$66a5b9fb5318558a$export$2e0ae67339d5f1ac","cmp","min","$66a5b9fb5318558a$export$d02631cccf789723","range1","$66a5b9fb5318558a$export$3d28c1996ced1f14","$66a5b9fb5318558a$var$LOOKUP","$66a5b9fb5318558a$export$94fdf11bafc8de6b","base64","bufferLength","bytes","p","encoded1","encoded2","encoded3","encoded4","$0d6e160064c86e50$export$2e2bcd8739ae039","cmapTable","codepoint","variationSelector","getVariationSelector","rangeOffset","group","uvs","selectors","toArray","x","sel","endCodes","tail","delta","c","g","findSubtable","prototype","$4646d52c2a559cdb$export$2e2bcd8739ae039","positions","id","getKerning","crossStream","variation","pairIdx","pair","leftOffset","rightOffset","override","$a57a26817cd35108$export$2e2bcd8739ae039","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","copy","codePoints","minX","yGap","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","codePoint","$0e2da1c4ce69e8ad$export$2e2bcd8739ae039","y","abs","Infinity","$e38a1a895f6aeb54$var$UNICODE_SCRIPTS","Caucasian_Albanian","Arabic","Imperial_Aramaic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bopomofo","Brahmi","Braille","Buginese","Buhid","Chakma","Canadian_Aboriginal","Carian","Cham","Cherokee","Coptic","Cypriot","Cyrillic","Devanagari","Deseret","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gurmukhi","Hangul","Han","Hanunoo","Hebrew","Hiragana","Pahawh_Hmong","Katakana_Or_Hiragana","Old_Italic","Javanese","Kayah_Li","Katakana","Kharoshthi","Khmer","Khojki","Kannada","Kaithi","Tai_Tham","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Mandaic","Manichaean","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Malayalam","Modi","Mongolian","Mro","Meetei_Mayek","Myanmar","Old_North_Arabian","Nabataean","Nko","Ogham","Ol_Chiki","Old_Turkic","Oriya","Osmanya","Palmyrene","Pau_Cin_Hau","Old_Permic","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Miao","Inscriptional_Parthian","Rejang","Runic","Samaritan","Old_South_Arabian","Saurashtra","Shavian","Sharada","Siddham","Khudawadi","Sinhala","Sora_Sompeng","Sundanese","Syloti_Nagri","Syriac","Tagbanwa","Takri","Tai_Le","New_Tai_Lue","Tamil","Tai_Viet","Telugu","Tifinagh","Tagalog","Thaana","Thai","Tibetan","Tirhuta","Ugaritic","Vai","Warang_Citi","Old_Persian","Cuneiform","Yi","Inherited","Common","Unknown","$e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS","$e38a1a895f6aeb54$var$RTL","arab","hebr","syrc","thaa","cprt","khar","phnx","lydi","avst","armi","phli","prti","sarb","orkh","samr","mand","merc","mero","mani","mend","nbat","narb","palm","phlp","$e38a1a895f6aeb54$export$9fddb9d0dd7d8a54","script4","$b19c79ec7a94fa39$export$2e2bcd8739ae039","bbox","addPoint","direction","$9195cf1266c12ea5$export$2e2bcd8739ae039","$2b7f887ebcb5888a$var$features","allTypographicFeatures","code","exclusive","allTypeFeatures","ligatures","requiredLigatures","commonLigatures","rareLigatures","rebusPictures","diphthongLigatures","squaredLigatures","abbrevSquaredLigatures","symbolLigatures","contextualLigatures","historicalLigatures","cursiveConnection","unconnected","partiallyConnected","cursive","letterCase","verticalSubstitution","substituteVerticalForms","linguisticRearrangement","numberSpacing","monospacedNumbers","proportionalNumbers","thirdWidthNumbers","quarterWidthNumbers","smartSwash","wordInitialSwashes","wordFinalSwashes","nonFinalSwashes","diacritics","showDiacritics","hideDiacritics","decomposeDiacritics","verticalPosition","normalPosition","superiors","inferiors","ordinals","scientificInferiors","fractions","noFractions","verticalFractions","diagonalFractions","overlappingCharacters","preventOverlap","typographicExtras","slashedZero","mathematicalExtras","mathematicalGreek","ornamentSets","noOrnaments","dingbats","piCharacters","fleurons","decorativeBorders","internationalSymbols","mathSymbols","characterAlternatives","noAlternates","designComplexity","designLevel1","designLevel2","designLevel3","designLevel4","designLevel5","styleOptions","noStyleOptions","displayText","engravedText","illuminatedCaps","titlingCaps","tallCaps","characterShape","traditionalCharacters","simplifiedCharacters","JIS1978Characters","JIS1983Characters","JIS1990Characters","traditionalAltOne","traditionalAltTwo","traditionalAltThree","traditionalAltFour","traditionalAltFive","expertCharacters","JIS2004Characters","hojoCharacters","NLCCharacters","traditionalNamesCharacters","numberCase","lowerCaseNumbers","upperCaseNumbers","textSpacing","proportionalText","monospacedText","halfWidthText","thirdWidthText","quarterWidthText","altProportionalText","altHalfWidthText","transliteration","noTransliteration","annotation","noAnnotation","boxAnnotation","roundedBoxAnnotation","circleAnnotation","invertedCircleAnnotation","parenthesisAnnotation","periodAnnotation","romanNumeralAnnotation","diamondAnnotation","invertedBoxAnnotation","invertedRoundedBoxAnnotation","kanaSpacing","fullWidthKana","proportionalKana","ideographicSpacing","fullWidthIdeographs","proportionalIdeographs","halfWidthIdeographs","unicodeDecomposition","canonicalComposition","compatibilityComposition","transcodingComposition","rubyKana","CJKSymbolAlternatives","noCJKSymbolAlternatives","CJKSymbolAltOne","CJKSymbolAltTwo","CJKSymbolAltThree","CJKSymbolAltFour","CJKSymbolAltFive","ideographicAlternatives","noIdeographicAlternatives","ideographicAltOne","ideographicAltTwo","ideographicAltThree","ideographicAltFour","ideographicAltFive","CJKVerticalRomanPlacement","CJKVerticalRomanCentered","CJKVerticalRomanHBaseline","italicCJKRoman","CJKItalicRoman","caseSensitiveLayout","caseSensitiveSpacing","alternateKana","alternateHorizKana","alternateVertKana","stylisticAlternatives","noStylisticAlternates","stylisticAltOne","stylisticAltTwo","stylisticAltThree","stylisticAltFour","stylisticAltFive","stylisticAltSix","stylisticAltSeven","stylisticAltEight","stylisticAltNine","stylisticAltTen","stylisticAltEleven","stylisticAltTwelve","stylisticAltThirteen","stylisticAltFourteen","stylisticAltFifteen","stylisticAltSixteen","stylisticAltSeventeen","stylisticAltEighteen","stylisticAltNineteen","stylisticAltTwenty","contextualAlternates","swashAlternates","contextualSwashAlternates","lowerCase","defaultLowerCase","lowerCaseSmallCaps","lowerCasePetiteCaps","upperCase","defaultUpperCase","upperCaseSmallCaps","upperCasePetiteCaps","languageTag","CJKRomanSpacing","halfWidthCJKRoman","proportionalCJKRoman","defaultCJKRoman","fullWidthCJKRoman","$2b7f887ebcb5888a$var$feature","selector","$2b7f887ebcb5888a$var$OTMapping","rlig","clig","dlig","hlig","liga","hist","smcp","pcap","frac","dnom","numr","afrc","case","ccmp","cpct","valt","swsh","cswh","curs","c2pc","c2sc","init","fin2","medi","med2","fin3","fina","pkna","half","halt","hkna","vkna","ital","lnum","onum","mgrk","calt","vrt2","tnum","pnum","sups","subs","ordn","pwid","hwid","qwid","twid","fwid","palt","trad","smpl","jp78","jp83","jp90","jp04","expt","hojo","nlck","tnam","ruby","titl","zero","ss01","ss02","ss03","ss04","ss05","ss06","ss07","ss08","ss09","ss10","ss11","ss12","ss13","ss14","ss15","ss16","ss17","ss18","ss19","ss20","slice","$2b7f887ebcb5888a$var$AATMapping","ot","aat","$2b7f887ebcb5888a$var$mapFeatureStrings","f","isNaN","typeCode","settingCode","$f3d63ae925545400$export$2e2bcd8739ae039","getItem","seg","classValue","segment1","$860c6347bb941b91$export$2e2bcd8739ae039","reverse","processEntry","currentState","dir","classCode","shouldAdvance","lookup","entryIndex","opts","state","visited","add","row","glyphsForValue","enter","traverse","exit","$99be642f82069918$export$2e2bcd8739ae039","chain","processSubtable","splice","processNoncontextualSubstitutions","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","processIndicRearragement","processContextualSubstitution","processLigature","processGlyphInsertion","verb","$99be642f82069918$var$swap","$99be642f82069918$var$reorderGlyphs","subsitutions","getGlyph","actions","actionIndex","last","ligatureIndex","ligatureGlyphs","componentGlyph","unshift","store","ligatureEntry","insertionActionIndex","isBefore","insertions","_insertGlyphs","inputCache","generateInputCache","generateInputsForSubtable","stack","g1","found","bind","rangeA","rangeB","reverseA","reverseB","$860fcbd64bc12fbc$export$2e2bcd8739ae039","glyphRun","morxProcessor","features1","r","$2b7f887ebcb5888a$export$b813f7d2a1677c16","features2","feature1","keys","$2b7f887ebcb5888a$export$bd6df347a4f391c4","getSupportedFeatures","glyphStrings","generateInputs","_addStrings","strings","_cmapProcessor","codePointsForGlyph","fromCodePoint","fallbackPosition","$d7e93cca3cf8ce8a$export$2e2bcd8739ae039","global","stageIndex","stages","stage","allFeatures","globalFeatures","arg","_addFeatures","local","processor","applyFeatures","$d28fb665ee343afc$var$VARIATION_FEATURES","$d28fb665ee343afc$var$COMMON_FEATURES","$d28fb665ee343afc$var$FRACTIONAL_FEATURES","$d28fb665ee343afc$var$HORIZONTAL_FEATURES","$d28fb665ee343afc$var$DIRECTIONAL_FEATURES","ltr","rtl","$d28fb665ee343afc$export$2e2bcd8739ae039","plan","planPreprocessing","planFeatures","planPostprocessing","assignGlobalFeatures","assignFeatures","userFeatures","setFeatureOverrides","isDigit","$17ba6019f27bfcf9$var$trie","$17ba6019f27bfcf9$var$FEATURES","$17ba6019f27bfcf9$var$ShapingClasses","$17ba6019f27bfcf9$var$STATE_TABLE","$17ba6019f27bfcf9$export$2e2bcd8739ae039","addStage","prev","curAction","prevAction","$17ba6019f27bfcf9$var$getShapingClass","category","getCategory","$d6368085223f631e$export$2e2bcd8739ae039","ignoreMarks","ignoreBaseGlyphs","isBase","ignoreLigatures","isLigature","shouldIgnore","move","idx","increment","reset","$7b226e6bbeadedeb$var$DEFAULT_SCRIPTS","$7b226e6bbeadedeb$export$2e2bcd8739ae039","changed","scriptTag","findScript","repeat","substituteFeature","substituteFeatureForVariations","exclude","lookups","lookupIndex","sort","variationsIndex","substitution","coords","variations","conditions","variationConditionsMatch","every","condition","advances","lookupsForFeatures","applyLookups","glyphIterator","currentFeature","cur","applyLookup","next","lookupRecord","sequence","matched","match","component","coverageIndex","classID","getClassID","rule","sequenceMatches","applyLookupList","rule1","classSequenceMatches","coverageSequenceMatches","rules","rule2","_variationProcessor","findVariationsIndex","normalizedCoords","selectScript","ligatureID","$f22bb23c9fd478d8$export$2e2bcd8739ae039","_id","substituted","_font","ligatureComponent","isLigated","cursiveAttachment","markAttachment","shaperInfo","isMultiplied","$fa1d9fd80dd7279e$export$2e2bcd8739ae039","$fa1d9fd80dd7279e$var$getType","$fa1d9fd80dd7279e$var$STATE_TABLE","$fa1d9fd80dd7279e$var$DECOMPOSE","hasGlyphForCodePoint","$fa1d9fd80dd7279e$var$decompose","$fa1d9fd80dd7279e$var$COMPOSE","$fa1d9fd80dd7279e$var$compose","$fa1d9fd80dd7279e$var$TONE_MARK","$fa1d9fd80dd7279e$var$reorderToneMark","$fa1d9fd80dd7279e$var$INVALID","$fa1d9fd80dd7279e$var$insertDottedCircle","$fa1d9fd80dd7279e$var$isL","$fa1d9fd80dd7279e$var$isV","$fa1d9fd80dd7279e$var$isT","$fa1d9fd80dd7279e$var$HANGUL_END","$fa1d9fd80dd7279e$var$isLV","$fa1d9fd80dd7279e$var$isLVT","$fa1d9fd80dd7279e$var$isTone","$fa1d9fd80dd7279e$var$getGlyph","glyphForCodePoint","l","ljmo","vjmo","insert","tjmo","lv","prevType","$fa1d9fd80dd7279e$var$L_BASE","$fa1d9fd80dd7279e$var$isCombiningL","$fa1d9fd80dd7279e$var$V_BASE","$fa1d9fd80dd7279e$var$isCombiningV","$fa1d9fd80dd7279e$var$T_BASE","$fa1d9fd80dd7279e$var$isCombiningT","del","advanceWidth","$fa1d9fd80dd7279e$var$getLength","dottedCircle","$d22b56f2cf15e5ba$exports","JSON","parse","$79781f8c452881c2$exports","$79e3b6f2c331d0bf$export$a513ea61a7bee91c","X","C","V","N","H","ZWNJ","ZWJ","M","SM","VD","A","Placeholder","Dotted_Circle","RS","Coeng","Repha","Ra","CM","Symbol","$79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0","Start","Ra_To_Become_Reph","Pre_M","Pre_C","Base_C","After_Main","Above_C","Before_Sub","Below_C","After_Sub","Before_Post","Post_C","After_Post","Final_C","SMVD","End","$79e3b6f2c331d0bf$export$8519deaa7de2b07","$79e3b6f2c331d0bf$export$bbcd928767338e0d","$79e3b6f2c331d0bf$export$ca9599b2a300afc","$79e3b6f2c331d0bf$export$e99d119da76a0fc5","Default","hasOldSpec","virama","basePos","rephPos","rephMode","blwfMode","$79e3b6f2c331d0bf$export$f647c9cfdd77d95a","decompositions","$d203e6b9523d0071$var$decompositions","$d203e6b9523d0071$var$trie","$d203e6b9523d0071$var$stateMachine","$d203e6b9523d0071$export$2e2bcd8739ae039","$d203e6b9523d0071$var$setupSyllables","$d203e6b9523d0071$var$initialReordering","$d203e6b9523d0071$var$finalReordering","unicodeScript","indicConfig","isOldSpec","d","decomposed","$d203e6b9523d0071$var$indicCategory","$d203e6b9523d0071$var$indicPosition","$d203e6b9523d0071$var$IndicInfo","syllableType","syllable","tags","$d203e6b9523d0071$var$isConsonant","$d203e6b9523d0071$var$isJoiner","$d203e6b9523d0071$var$isHalantOrCoeng","$d203e6b9523d0071$var$wouldSubstitute","_layoutEngine","engine","GSUBProcessor","$d203e6b9523d0071$var$consonantPosition","consonant","info","$d203e6b9523d0071$var$nextSyllable","limit","hasReph","rphf","seenBelow","i2","j","disallowDoubleHalants","lastPos","i3","i4","i5","i6","blwf","i7","i8","abvf","pstf","prefLen","pref","i9","cfar","i10","nonJoiner","tryPref","BASE_C","newPos","oldPos","tmp","newRephPos","reph","test","categories","$9b772791ccede8a5$var$categories","$9b772791ccede8a5$var$decompositions","$9b772791ccede8a5$var$trie","$9b772791ccede8a5$var$stateMachine","$9b772791ccede8a5$export$2e2bcd8739ae039","$9b772791ccede8a5$var$setupSyllables","$9b772791ccede8a5$var$clearSubstitutionFlags","$9b772791ccede8a5$var$recordRphf","$9b772791ccede8a5$var$recordPref","$9b772791ccede8a5$var$reorder","$9b772791ccede8a5$var$useCategory","$9b772791ccede8a5$var$USEInfo","$9b772791ccede8a5$var$nextSyllable","$9b772791ccede8a5$var$isBase","$9b772791ccede8a5$var$isHalant","$fdb4471fc82bc2c2$var$SHAPERS","mong","phag","hang","bng2","beng","dev2","deva","gjr2","gujr","guru","gur2","knda","knd2","mlm2","mlym","ory2","orya","taml","tml2","telu","tel2","khmr","bali","batk","brah","bugi","buhd","cakm","cham","dupl","egyp","gran","hano","java","kthi","kali","khoj","sind","lepc","limb","mahj","mtei","modi","hmng","rjng","saur","shrd","sidd","sinh","sund","sylo","tglg","tagb","tale","lana","tavt","takr","tibt","tfng","tirh","latn","DFLT","$86bc1883359e094a$export$2e2bcd8739ae039","curGlyph","replacement","undefined","USER_INDEX","ligature","sequenceMatchIndices","characters","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","matchIndex","applyContext","applyChainingContext","$79ea6270f0a90256$export$2e2bcd8739ae039","peekIndex","variationProcessor","variationStore","getDelta","applyPositionValue","nextGlyph","peek","class1","class2","pair1","nextIndex","curRecord","nextRecord","getAnchor","rightToLeft","baseGlyphIndex","baseIndex","markRecord","baseAnchor","applyAnchor","ligIndex","ligAttach","markGlyph","ligGlyph","compIndex","mark1Index","prevIndex","good","mark2Index","markCoords","markPos","anchor","fixCursiveAttachment","fixMarkAttachment","k1","$b2f26a32cb9ab2fa$export$2e2bcd8739ae039","glyphInfos","GPOSProcessor","shaper","$fdb4471fc82bc2c2$export$7877a478dd30fd3d","glyphInfo","zeroMarkWidths","zeroMarkAdvances","$9d641258c9d7180d$export$2e2bcd8739ae039","script2","getScript","$e38a1a895f6aeb54$export$e5cb25e204fb8450","glyphsForString","script3","$e38a1a895f6aeb54$export$16fab0757cfc223d","setup","hideDefaultIgnorables","cleanup","positioned","unicodeLayoutEngine","positionGlyphs","kernProcessor","space","isDefaultIgnorable","ch","plane","getAvailableFeatures","stringsForGlyph","from","$67ee4828d81adb28$var$SVG_COMMANDS","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath","$67ee4828d81adb28$export$2e2bcd8739ae039","commands","forEach","command","round","join","_cbox","command1","freeze","_bbox","cx","cy","p0","p1","p2","p3","qp1x","qp1y","p3x","p3y","cp1x","cp1y","cp2x","cp2y","b2ac","t1","sqrt","t2","path","m0","m1","m2","m3","m4","m5","mapPoints","transform","angle","cos","sin","scaleX","scaleY","$85e16e40023cfb0f$export$2e2bcd8739ae039","$0e4f52d7996e478b$export$2e2bcd8739ae039","metric","_metrics","leftBearing","_getTableMetrics","advanceHeight","topBearing","os2","getAdvanceAdjustment","_getCBox","_getBBox","_getPath","scale","_getMetrics","fromCharCode","_getName","save","toFunction","fill","restore","$f680320fa07ef53d$var$GlyfHeader","numberOfContours","$f680320fa07ef53d$export$baf26146a414f24a","onCurve","endContour","$f680320fa07ef53d$var$Component","dx","dy","scale01","scale10","$f680320fa07ef53d$export$2e2bcd8739ae039","internal","_getTableStream","short","same","glyfPos","_decodeSimple","_decodeComposite","points","endPtsOfContours","numCoords","flag","point","px","_parseGlyphCoord","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","readInt8","_decode","contours","_getContours","contour","directory","firstPt","lastPt","curvePt","pt","prevPt","midX","midY","$7ee0705195f3b047$export$2e2bcd8739ae039","CFF2","getGlyphName","cff","usedGsubrs","usedSubrs","trans","nStems","x1","y1","open","_usedGsubrs","_usedSubrs","gsubrs","gsubrsBias","bias","privateDict","privateDictForGlyph","subrs","Subrs","subrsBias","vstore","vsindex","checkWidth","shift","nominalWidthX","parseStems","subr","phase","c1x","c1y","c2x","c2y","blendVector","getBlendVector","numOperands","sum","s1","s2","v1","v2","random","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","$55855d6d316b015e$var$SBIXImage","originX","originY","buflen","$55855d6d316b015e$export$2e2bcd8739ae039","img","getImageForSize","image","renderOutlines","render","$42d9dbd2de9ee2d8$var$COLRLayer","color","$42d9dbd2de9ee2d8$export$2e2bcd8739ae039","layers","cpal","colr","rec","baseLayer","_getBaseGlyph","fillColor","$7586bb9ea67c41d8$export$2e2bcd8739ae039","normalized","EPSILON","glyphPoints","tupleCount","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleCoords","startCoords","endCoords","a1","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","Uint16Array","run","runCount","readUInt16","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","out","ref","itemStore","varData","deltaSet","netAdjustment","master","blendVectors","scalar","regionIndex","axes","axisScalar","normalizeCoords","Promise","resolve","$a8ac370803cb82cf$export$2e2bcd8739ae039","includeGlyph","$2784eedf0b35a048$var$Point","$2784eedf0b35a048$var$Glyf","xPoints","yPoints","$2784eedf0b35a048$export$2e2bcd8739ae039","lastX","lastY","lastFlag","pointCount","_encodePoint","EncodeStream","shortFlag","sameFlag","diff","$fe042f4b88f46896$export$2e2bcd8739ae039","curOffset","nextOffset","view","DataView","setUint16","glyphEncoder","encodeSimple","_addGlyph","toBuffer","$ec40f80c07a4e08a$export$2e2bcd8739ae039","charstrings","getCharString","subsetSubrs","used","used_fds","used_subrs","fd_select","FontName","subsetCharstrings","Encoding","addString","CIDCount","subsetFontdict","createCIDFontdict","$0a8ef2660a6ce4b6$export$2e2bcd8739ae039","defaultLanguage","_tables","_decodeTable","console","error","getName","getCharacterSet","nextState","layout","_glyphs","trim","settings","namedVariations","_directoryPos","variationCoords","getVariation","_decodeDirectory","_getTable","$89f72d2d7c9afc0d$var$WOFFDirectoryEntry","compLength","origChecksum","$89f72d2d7c9afc0d$var$WOFFDirectory","flavor","totalSfntSize","metaOffset","metaLength","metaOrigLength","privOffset","privLength","tables1","$89f72d2d7c9afc0d$export$2e2bcd8739ae039","$44b9edca0e403d6d$export$2e2bcd8739ae039","_transformedGlyphs","$2f0bfd9a5c1d7b58$var$Base128","$2f0bfd9a5c1d7b58$var$knownTags","$2f0bfd9a5c1d7b58$var$WOFF2DirectoryEntry","customTag","transformVersion","transformed","transformLength","$2f0bfd9a5c1d7b58$var$WOFF2Directory","totalCompressedSize","$2f0bfd9a5c1d7b58$export$2e2bcd8739ae039","$333fb94547d9fb5c$var$Substream","_buf","$333fb94547d9fb5c$var$GlyfTable","indexFormat","nContourStreamSize","nPointsStreamSize","flagStreamSize","glyphStreamSize","compositeStreamSize","bboxStreamSize","instructionStreamSize","nContours","composites","bboxes","$333fb94547d9fb5c$var$read255UInt16","$333fb94547d9fb5c$var$LOWEST_U_CODE","$333fb94547d9fb5c$var$withSign","baseval","$333fb94547d9fb5c$var$decodeTriplet","b0","b2","$e0b2de9958441c02$var$TTCHeader","numFonts","dsigTag","dsigLength","dsigOffset","$d0fe640dc6c78783$var$DFontName","$d0fe640dc6c78783$var$Ref","buf","nameOffset","attr","dataOffset","handle","$d0fe640dc6c78783$var$Type","maxTypeIndex","refList","$d0fe640dc6c78783$var$TypeList","types","$d0fe640dc6c78783$var$DFontMap","typeList","nameListOffset","$d0fe640dc6c78783$var$DFontHeader","dataLength","mapLength","dest","source","outBuffer","_dataPos","_decompressed","decompressedSize","decompressed","_decompress","_transformGlyfTable","totalPoints","fonts","readString","sfnt","module","exports","hasOwnProperty"],"mappings":"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,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,iBACA,UACA,UACA,UACA,UACA,QACA,OACA,OACA,QACA,SACA,UACA,QACA,YAIJ,IAAIC,GAA4C,CAC5C,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,GACA,SACA,SACA,YACA,iBACA,GACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,GACA,eACA,GACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,GACA,OACA,UACA,GACA,eACA,SACA,QACA,SACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,cACA,GACA,GACA,GACA,GACA,SACA,SACA,KACA,eACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,GACA,GACA,WACA,GACA,GACA,SACA,SACA,KACA,cAqQAC,GAA4C,CAC5C,UACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,UAyQAC,GAAqC,IAAIre,EAAmB6D,OAAO,CACnEwD,SAAU,IAAIrH,EAAmB+G,SAAS/G,EAAmB+D,QAC7Dua,gBAAiBte,EAAmB+D,OACpCwa,aAAcve,EAAmB+D,OACjCya,eAAgB,IAAIxe,EAAmBiF,MAAMjF,EAAmB+D,OAAQ,kBAExE0a,GAAsC,IAAIze,EAAmB6D,OAAO,CACpE8Q,IAAK,IAAI3U,EAAmBqU,OAAO,GACnCqK,QAAS,IAAI1e,EAAmBsF,QAAQtF,EAAmB+D,OAAQsa,GAAoC,CACnG9Y,KAAM,aAGVoZ,GAA+B,IAAI3e,EAAmB6D,OAAO,CAC7D+a,eAAgB,IAAI5e,EAAmBsF,QAAQtF,EAAmB+D,OAAQsa,IAC1ExJ,MAAO7U,EAAmB+D,OAC1B8a,eAAgB,IAAI7e,EAAmBiF,MAAMwZ,GAAqC,WAElFK,GAAqC,IAAI9e,EAAmB6D,OAAO,CACnE8Q,IAAK,IAAI3U,EAAmBqU,OAAO,GA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ACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,GACA,YACA,YACA,eACA,YACA,YACA,GACA,GACA,YACA,GACA,GACA,YACA,YACA,YACA,YACA,GACA,GACA,YACA,YACA,YACA,GACA,KACA,KACA,KACA,MACA,MACA,oBACA,GACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,kBACA,eACA,cACA,GACA,GACA,cACA,cACA,gBACA,aACA,aACA,GACA,iBACA,GACA,GACA,cACA,GACA,GACA,aACA,iBACA,GACA,GACA,cACA,YACA,eACA,GACA,GACA,GACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,GACA,GACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,mBAsyBD,IAAQR,GAbmC,IAAI3d,EAAmB0F,gBAAgB,IAAI+gB,GAA4C,CACjI9gB,EAAG,CACCohB,OAAQ/mB,EAAmB6E,MAC3BmiB,MAAO,IAAIhnB,EAAmBiF,MAAMjF,EAAmB6E,MAAO,WAElEwJ,EAAG,CACC4Y,QAASjnB,EAAmB6E,MAC5BqiB,OAAQ,IAAIlnB,EAAmBiF,MAAMyhB,GAA8B,cAMmB,CAC1Fve,MAAM,KAIV,MAAMgf,WAAyCnnB,EAAmBiF,MAC9D,OAAOmQ,EAAQvK,GACX,IAAIxI,GAAS,EAAIrC,EAAmBonB,eAAelkB,KAAKb,OAAQ+S,EAAQvK,GACpEgK,EAAQ,EACRjI,EAAM,GACV,KAAMiI,EAAQxS,GAAO,CACjB,IAAIglB,EAAQnkB,KAAKqC,KAAK0H,OAAOmI,EAAQvK,GACrCwc,EAAMzM,OAAS/F,EACfA,GAASwS,EAAMT,MAAQ,EACvBha,EAAI3K,KAAKolB,GAEb,OAAOza,GAGf,IAWI0a,GAAmC,IAAIhB,GAAmC,CACtElI,GA1lBwC,CAC5C,UACA,QACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,KACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,kBAE4C,CAC5C,UACA,QACA,iBACA,iBACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,KACA,KACA,MACA,MACA,oBACA,qBACA,iBACA,gBACA,YACA,SACA,eACA,aACA,iBACA,aACA,UACA,gBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,kBA8VD,IAAQT,GAfkC,IAAI3d,EAAmB0F,gBAAgB1F,EAAmB6E,MAAO,CAC1Gc,EAAG,CACC6a,OAAQ,IAAIxgB,EAAmBiF,MAAMjF,EAAmB+D,OAASmC,GAAIA,EAAE2E,OAAO0c,YAAYllB,OAAS,IAEvGgM,EAAG,CACC6Y,OAAQ,IAAIC,GAAiCT,GAA+BxgB,GAAIA,EAAE2E,OAAO0c,YAAYllB,OAAS,IAElH0D,EAAG,CACCmhB,OAAQ,IAAIC,GAAiCN,GAA+B3gB,GAAIA,EAAE2E,OAAO0c,YAAYllB,OAAS,MAOzB,CACzF8F,MAAM,KAENqf,GAAiC,IAAIxnB,EAAmB6D,OAAO,CAC/D8iB,MAAO3mB,EAAmB+D,OAC1B0jB,GAAIznB,EAAmB6E,QAEvB6iB,GAAiC,IAAI1nB,EAAmB6D,OAAO,CAC/D8iB,MAAO3mB,EAAmBsE,OAC1BmjB,GAAIznB,EAAmB+D,SAEvB4jB,GAAiC,IAAI3nB,EAAmB0F,gBAAgB1F,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,KAAKoqE,MAAQ,KAC1BpqE,KAAK+pE,SAAShrE,KAAK,CACfkrE,QAASA,GACT5pE,KAAMA,IAEHL,MAKX,IAAIwsE,GAA2C,CAC3C,UACA,QACA,mBACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,cACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,YACA,QACA,WACA,SACA,SACA,YACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,OACA,WACA,UACA,SACA,YACA,aACA,aACA,YACA,YACA,QACA,WACA,WACA,KACA,SACA,WACA,YACA,YACA,eACA,MACA,KACA,cACA,YACA,UACA,KACA,WACA,cACA,eACA,QACA,KACA,SACA,eACA,aACA,aACA,UACA,SACA,cACA,QACA,gBACA,iBACA,WACA,mBACA,SACA,SACA,SACA,KACA,KACA,SACA,SACA,eACA,gBACA,YACA,aACA,SACA,UACA,YACA,YACA,WACA,WACA,gBACA,iBACA,KACA,KACA,YACA,iBACA,iBACA,eACA,cACA,cACA,cACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,QACA,SACA,SACA,cACA,SACA,WACA,aACA,QACA,SACA,QACA,YACA,OACA,UACA,eACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,YACA,MACA,MACA,SACA,SACA,QACA,QACA,QACA,WACA,cACA,cACA,gBACA,UACA,aACA,gBACA,QACA,SACA,SACA,aACA,WACA,WACA,SACA,SACA,SACA,SACA,UAIJ,MAAMC,GACF,WACI,OAAO,IAAQ3C,GAEnB,WACI,OAAO9pE,KAAK0rE,KAAKh/B,KAErB,WACI,OAAO1sC,KAAK0rE,KAAKj0B,KAErB,iBAAiBzyC,GACb,GAAIhF,KAAK2rC,GAAK3mC,EAAM0C,QAAQvI,OAAQ,OAAO6F,EAAM0C,QAAQ3J,IAAIiC,KAAK2rC,IAClE,IAAI+gC,EAAS1nE,EAAM0C,QAAQ3J,IAAIiH,EAAM0C,QAAQvI,OAAS,GAKtD,MAJU,CACNoI,QAASmlE,EAASA,EAAOnlE,QAAU,EACnCC,QAASxC,EAAM6C,SAAS9J,IAAIiC,KAAK2rC,GAAK3mC,EAAM0C,QAAQvI,SAAW,GAIvE,YAAYutC,GACR,GAAI1sC,KAAK2sE,SAAU,OAAO3sE,KAAK2sE,SAC/B,IAAMplE,QAAS4wD,EAAe3wD,QAASolE,GAAiB5sE,KAAK6sE,iBAAiB7sE,KAAKy1D,MAAMjvB,MAEzF,GAAIxmC,KAAKy1D,MAAMxtB,KAAM,IAAM1gC,QAASulE,EAAgBtlE,QAASulE,GAAgB/sE,KAAK6sE,iBAAiB7sE,KAAKy1D,MAAMxtB,UACzG,CACD,IAAI+kC,EAEJ,GADI,MAAOtgC,KAA0CA,KAAMA,GAAU1sC,OAChEgtE,EAAMhtE,KAAKy1D,MAAM,UAAYuX,EAAI7nE,QAAU,EACxC2nE,EAAgB7pE,KAAKyqC,IAAIs/B,EAAI94D,aAAe84D,EAAI74D,eAChD44D,EAAaC,EAAI94D,aAAew4B,EAAKY,SACtC,CACH,IAAM1lC,KAAMA,GAAU5H,KAAKy1D,MAC3B,IAAIqX,EAAgB7pE,KAAKyqC,IAAI9lC,EAAKlB,OAASkB,EAAKjB,SAC5ComE,EAAanlE,EAAKlB,OAASgmC,EAAKY,MAI5C,OADIttC,KAAKy1D,MAAMR,qBAAuBj1D,KAAKy1D,MAAMhuB,OAAM0wB,GAAgBn4D,KAAKy1D,MAAMR,oBAAoBgY,qBAAqBjtE,KAAK2rC,GAAI3rC,KAAKy1D,MAAMhuB,OACxIznC,KAAK2sE,SAAW,CACnBxU,aAAcA,EACd2U,cAAeA,EACfF,YAAaA,EACbG,WAAYA,GAalB,WACE,OAAO/sE,KAAKktE,WAMd,WACE,OAAOltE,KAAKmtE,WAKd,WAGE,OAAOntE,KAAKotE,WAMd,cAAc16D,GACZ,IAAI26D,EAAQ,EAAIrtE,KAAKy1D,MAAM7vD,WAAa8M,EACxC,OAAO1S,KAAK0rE,KAAK2B,MAAMA,GAKzB,mBACE,OAAOrtE,KAAKstE,cAAcnV,aAK5B,oBACE,OAAOn4D,KAAKstE,cAAcR,cAE9B,8BACA,WACI,IAAMrmC,KAAMA,GAAUzmC,KAAKy1D,MAC3B,IAAKhvB,EAAM,OAAO,KAClB,OAAOA,EAAKthC,SACR,KAAK,EACD,OAAWqnE,GAA0CxsE,KAAK2rC,IAC9D,KAAK,EACD,IAAIA,EAAKlF,EAAK5wB,eAAe7V,KAAK2rC,IAClC,OAAIA,EAAS6gC,GAA0CrtE,OAAmBqtE,GAA0C7gC,GAC7GlF,EAAK3wB,MAAM61B,EAAS6gC,GAA0CrtE,QACzE,KAAK,IACD,OAAWqtE,GAA0CxsE,KAAK2rC,GAAKlF,EAAKzwB,QAAQhW,KAAK2rC,KACrF,KAAK,EACD,OAAOx6B,OAAOo8D,aAAa9mC,EAAKxwB,IAAIjW,KAAK2rC,MAMnD,WACE,OAAO3rC,KAAKwtE,WAMd,OAAOn8D,EAAKqB,GACVrB,EAAIo8D,OACJ,IAAIJ,EAAQ,EAAIrtE,KAAKy1D,MAAMlvB,KAAK3gC,WAAa8M,EAC7CrB,EAAIg8D,MAAMA,EAAOA,GACRrtE,KAAK0rE,KAAKgC,YACnBztE,CAAGoR,GACHA,EAAIs8D,OACJt8D,EAAIu8D,UAER,YAAYjiC,EAAIiB,EAAYvtC,GAIxBW,KAAK2rC,GAAKA,EAMV3rC,KAAK4sC,WAAaA,EAClB5sC,KAAKy1D,MAAQp2D,EAEbW,KAAKusC,OAASvsC,KAAK4sC,WAAWztC,OAAS,GAAKa,KAAK4sC,WAAW2mB,MAAUr2D,EAAyBqvC,QAC/FvsC,KAAK+xD,WAAa/xD,KAAK4sC,WAAWztC,OAAS,GAG9ChB,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL+sE,GAAyCjhC,UAAW,OAAQ,MAC1DrtC,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL+sE,GAAyCjhC,UAAW,OAAQ,MAC1DrtC,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL+sE,GAAyCjhC,UAAW,OAAQ,MAC1DrtC,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL+sE,GAAyCjhC,UAAW,eAAgB,MAClErtC,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL+sE,GAAyCjhC,UAAW,gBAAiB,MACnErtC,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL+sE,GAAyCjhC,UAAW,OAAQ,MAO/D,IAAIqiC,GAAmC,IAAI/wE,EAAmB6D,OAAO,CACjEmtE,iBAAkBhxE,EAAmBkE,MACrC+E,KAAMjJ,EAAmBkE,MACzBgF,KAAMlJ,EAAmBkE,MACzBiF,KAAMnJ,EAAmBkE,MACzBkF,KAAMpJ,EAAmBkE,QAsB7B,MAAM+sE,GACF,OACI,OAAO,IAAIA,GAA0C/tE,KAAKguE,QAAShuE,KAAKiuE,WAAYjuE,KAAKgrC,EAAGhrC,KAAKytC,GAErG,YAAYugC,EAASC,EAAYjjC,EAAI,EAAGyC,EAAI,GACxCztC,KAAKguE,QAAUA,EACfhuE,KAAKiuE,WAAaA,EAClBjuE,KAAKgrC,EAAIA,EACThrC,KAAKytC,EAAIA,GAIjB,MAAMygC,GACF,YAAY5sE,EAAS6sE,EAAIC,GACrBpuE,KAAKsB,QAAUA,EACftB,KAAKmuE,GAAKA,EACVnuE,KAAKouE,GAAKA,EACVpuE,KAAKqX,IAAM,EACXrX,KAAKssE,OAAStsE,KAAKusE,OAAS,EAC5BvsE,KAAKquE,QAAUruE,KAAKsuE,QAAU,GAGtC,MAAMC,WAAqD9B,GAEvD,SAAS+B,GAGL,GAAIxuE,KAAKy1D,MAAMR,sBAAwBuZ,EAAU,OAAOxuE,KAAK0rE,KAAKh/B,KAClE,IAAIx6B,EAASlS,KAAKy1D,MAAMgZ,gBAAgB,QACxCv8D,EAAOmF,KAAOrX,KAAKy1D,MAAM9uB,KAAK3wB,QAAQhW,KAAK2rC,IAC3C,IAAI1lB,EAAQ4nD,GAAiC9jE,OAAOmI,GAChDw6B,EAAO,IAAQc,GAA0CvnB,EAAMlgB,KAAMkgB,EAAMjgB,KAAMigB,EAAMhgB,KAAMggB,EAAM/f,MACvG,OAAOrI,OAAOysE,OAAO59B,GAGzB,iBAAiBx6B,EAAQk/C,EAAMsd,EAAOC,GAClC,GAAID,EAAO,CACP,IAAIn8D,EAAML,EAAOkF,YACZu3D,IAAMp8D,GAAOA,GAClBA,GAAO6+C,OACJ,GAAIud,EAAUp8D,EAAM6+C,OAClB7+C,EAAM6+C,EAAOl/C,EAAOmG,cAC7B,OAAO9F,EAIX,UACI,IAAIq8D,EAAU5uE,KAAKy1D,MAAM9uB,KAAK3wB,QAAQhW,KAAK2rC,IAG3C,GAAIijC,IAFU5uE,KAAKy1D,MAAM9uB,KAAK3wB,QAAQhW,KAAK2rC,GAAK,GAEvB,OAAO,KAChC,IAAIz5B,EAASlS,KAAKy1D,MAAMgZ,gBAAgB,QACxCv8D,EAAOmF,KAAOu3D,EACd,IAAIr3D,EAAWrF,EAAOmF,IAClB4O,EAAQ4nD,GAAiC9jE,OAAOmI,GAGpD,OAFI+T,EAAM6nD,iBAAmB,EAAG9tE,KAAK6uE,cAAc5oD,EAAO/T,GACjD+T,EAAM6nD,iBAAmB,GAAG9tE,KAAK8uE,iBAAiB7oD,EAAO/T,EAAQqF,GACnE0O,EAEX,cAAcA,EAAO/T,GAEjB+T,EAAM8oD,OAAS,GACf,IAAIC,EAAmB,IAAIlyE,EAAmBiF,MAAMjF,EAAmB+D,OAAQolB,EAAM6nD,kBAAkB/jE,OAAOmI,GAC9G+T,EAAM5P,aAAe,IAAIvZ,EAAmBiF,MAAMjF,EAAmB6E,MAAO7E,EAAmB+D,QAAQkJ,OAAOmI,GAC9G,IAAIvM,EAAQ,GACRspE,EAAYD,EAAiBA,EAAiB7vE,OAAS,GAAK,EAChE,KAAMwG,EAAMxG,OAAS8vE,GAAU,CAC3B,IAAIC,EAAOh9D,EAAOkF,YAGlB,GAFAzR,EAAM5G,KAAKmwE,GApFc,EAsFrBA,EAAqC,CACrC,IAAIv9D,EAAQO,EAAOkF,YACnB,IAAI,IAAI0mD,EAAI,EAAGA,EAAInsD,EAAOmsD,IAAIn4D,EAAM5G,KAAKmwE,IAGjD,IAAI,IAAIhwE,EAAI,EAAGA,EAAIyG,EAAMxG,OAAQD,IAAI,CAC7BgwE,EAAOvpE,EAAMzG,GACjB,IAAIiwE,EAAQ,IAAIpB,MAhGW,EAgGkCmB,GAAwCF,EAAiBx8D,QAAQtT,IAAM,EAAG,EAAG,GAC1I+mB,EAAM8oD,OAAOhwE,KAAKowE,GAEtB,IAAIC,EAAK,EACT,IAAQlwE,EAAI,EAAGA,EAAIyG,EAAMxG,OAAQD,IAAI,CAC7BgwE,EAAOvpE,EAAMzG,GACjB+mB,EAAM8oD,OAAO7vE,GAAG8rC,EAAIokC,EAAKpvE,KAAKqvE,iBAAiBn9D,EAAQk9D,EArGtB,EAqG0BF,EAlGlC,GAkG+EA,GAE5G,IAAII,EAAK,EACT,IAAQpwE,EAAI,EAAGA,EAAIyG,EAAMxG,OAAQD,IAAI,CAC7BgwE,EAAOvpE,EAAMzG,GACjB+mB,EAAM8oD,OAAO7vE,GAAGuuC,EAAI6hC,EAAKtvE,KAAKqvE,iBAAiBn9D,EAAQo9D,EAzGtB,EAyG0BJ,EAtGlC,GAsG+EA,GAE5G,GAAIlvE,KAAKy1D,MAAMR,oBAAqB,CAChC,IAAI8Z,EAAS9oD,EAAM8oD,OAAO7lB,QAC1B6lB,EAAOhwE,QAAQiB,KAAKuvE,kBAAkBtpD,IACtCjmB,KAAKy1D,MAAMR,oBAAoBua,gBAAgBxvE,KAAK2rC,GAAIojC,GACxD9oD,EAAMwpD,cAAgBV,EAAO7lB,OAAO,IAI5C,iBAAiBjjC,EAAO/T,EAAQwF,EAAS,GAErCuO,EAAMsC,WAAa,GACnB,IAAImnD,GAAmB,EACnB/pE,EA9GkC,GA+GtC,KA/GsC,GA+GhCA,GAA8C,CAChDA,EAAQuM,EAAO+E,eACf,IAAI04D,EAAOz9D,EAAOmF,IAAMK,EACpBpW,EAAU4Q,EAAO+E,eAErB,GADKy4D,IAAkBA,EAA4E,IAhH5D,IAgHI/pE,IAvHH,EAwHpCA,EACA,IAAIwoE,EAAKj8D,EAAOmG,cACZ+1D,EAAKl8D,EAAOmG,mBAEZ81D,EAAKj8D,EAAO09D,WACZxB,EAAKl8D,EAAO09D,YAEhBvb,EAAY,IAAI6Z,GAAgC5sE,EAAS6sE,EAAIC,IACvD/2D,IAAMs4D,EA7HkB,EA8H9BhqE,EACJ0uD,EAAUiY,OAASjY,EAAUkY,QAAUr6D,EAAOkF,aAAe,GAAKlF,EAAOkF,aAAe,IAAM,WA7HnD,GA8HlCzR,GACL0uD,EAAUiY,QAAUp6D,EAAOkF,aAAe,GAAKlF,EAAOkF,aAAe,IAAM,WAC3Ei9C,EAAUkY,QAAUr6D,EAAOkF,aAAe,GAAKlF,EAAOkF,aAAe,IAAM,YA/HxC,IAgI5BzR,IACP0uD,EAAUiY,QAAUp6D,EAAOkF,aAAe,GAAKlF,EAAOkF,aAAe,IAAM,WAC3Ei9C,EAAUga,SAAWn8D,EAAOkF,aAAe,GAAKlF,EAAOkF,aAAe,IAAM,WAC5Ei9C,EAAUia,SAAWp8D,EAAOkF,aAAe,GAAKlF,EAAOkF,aAAe,IAAM,WAC5Ei9C,EAAUkY,QAAUr6D,EAAOkF,aAAe,GAAKlF,EAAOkF,aAAe,IAAM,YAE/E6O,EAAMsC,WAAWxpB,KAAKs1D,GAE1B,GAAIr0D,KAAKy1D,MAAMR,oBAAqB,CAChC,IAAI8Z,EAAS,GACb,IAAI,IAAIjR,EAAI,EAAGA,EAAI73C,EAAMsC,WAAWppB,OAAQ2+D,IAAI,CAC5C,IAAIzJ,EAAYpuC,EAAMsC,WAAWu1C,GACjCiR,EAAOhwE,KAAK,IAAIgvE,IAA0C,GAAM,EAAM1Z,EAAU8Z,GAAI9Z,EAAU+Z,KAElGW,EAAOhwE,QAAQiB,KAAKuvE,kBAAkBtpD,IACtCjmB,KAAKy1D,MAAMR,oBAAoBua,gBAAgBxvE,KAAK2rC,GAAIojC,GACxD9oD,EAAMwpD,cAAgBV,EAAO1jB,QAAQ,EAAG,GACxC,IAAI,IAAInsD,EAAI,EAAGA,EAAI6vE,EAAO5vE,OAAQD,IAAI,CAClC,IAAIiwE,EAAQJ,EAAO7vE,GACnB+mB,EAAMsC,WAAWrpB,GAAGivE,GAAKgB,EAAMnkC,EAC/B/kB,EAAMsC,WAAWrpB,GAAGkvE,GAAKe,EAAM1hC,GAGvC,OAAOiiC,EAEX,kBAAkBzpD,GACd,IAAIymB,EAAO1sC,KAAKktE,UAAS,GACJ,MAAjBltE,KAAK2sE,WAAkB3sE,KAAK2sE,SAAeF,GAA0CjhC,UAAU8hC,YAAYvtE,KAAKC,KAAM0sC,IAC1H,IAAMyrB,aAAcA,EAAe2U,cAAeA,EAAgBF,YAAaA,EAAcG,WAAYA,GAAgB/sE,KAAK2sE,SAC9H,MAAO,CACH,IAAIoB,IAA0C,GAAO,EAAM9nD,EAAMlgB,KAAO6mE,EAAa,GACrF,IAAImB,IAA0C,GAAO,EAAM9nD,EAAMlgB,KAAO6mE,EAAczU,EAAc,GACpG,IAAI4V,IAA0C,GAAO,EAAM,EAAG9nD,EAAM/f,KAAO6mE,GAC3E,IAAIgB,IAA0C,GAAO,EAAM,EAAG9nD,EAAM/f,KAAO6mE,EAAaD,IAIhG,eACI,IAAI7mD,EAAQjmB,KAAK6vE,UACjB,IAAK5pD,EAAO,MAAO,GACnB,IAAI8oD,EAAS,GACb,GAAI9oD,EAAM6nD,iBAAmB,EAC7B,IAAK,IAAIzZ,KAAapuC,EAAMsC,WAAW,CACnC,IAAIunD,EAAW9vE,KAAKy1D,MAAMpJ,SAASgI,EAAU/yD,SAASyuE,eACtD,IAAI,IAAI7wE,EAAI,EAAGA,EAAI4wE,EAAS3wE,OAAQD,IAAI,CACpC,IAAI8wE,EAAUF,EAAS5wE,GACvB,IAAI,IAAI4+D,EAAI,EAAGA,EAAIkS,EAAQ7wE,OAAQ2+D,IAAI,CACnC,IAAIqR,EAAQa,EAAQlS,GAChB9yB,EAAImkC,EAAMnkC,EAAIqpB,EAAUiY,OAAS6C,EAAM1hC,EAAI4mB,EAAUga,QAAUha,EAAU8Z,GACzE1gC,EAAI0hC,EAAM1hC,EAAI4mB,EAAUkY,OAAS4C,EAAMnkC,EAAIqpB,EAAUia,QAAUja,EAAU+Z,GAC7EW,EAAOhwE,KAAK,IAAIgvE,GAA0CoB,EAAMnB,QAASmB,EAAMlB,WAAYjjC,EAAGyC,WAIrGshC,EAAS9oD,EAAM8oD,QAAU,GAE1B9oD,EAAMwpD,gBAAkBzvE,KAAKy1D,MAAMwa,UAAU5qE,OAAOoiC,OACpDznC,KAAK2sE,SAASxU,aAAelyC,EAAMwpD,cAAc,GAAGzkC,EAAI/kB,EAAMwpD,cAAc,GAAGzkC,EAC/EhrC,KAAK2sE,SAASG,cAAgB7mD,EAAMwpD,cAAc,GAAGhiC,EAAIxnB,EAAMwpD,cAAc,GAAGhiC,EAChFztC,KAAK2sE,SAASC,YAAc3mD,EAAMlgB,KAAOkgB,EAAMwpD,cAAc,GAAGzkC,EAChEhrC,KAAK2sE,SAASI,WAAa9mD,EAAMwpD,cAAc,GAAGhiC,EAAIxnB,EAAM/f,MAEhE,IAAI4pE,EAAW,GACXhc,EAAM,GACV,IAAI,IAAI35C,EAAI,EAAGA,EAAI40D,EAAO5vE,OAAQgb,IAAI,CAClC,IAAIg1D,EAAQJ,EAAO50D,GACnB25C,EAAI/0D,KAAKowE,GACLA,EAAMlB,aACN6B,EAAS/wE,KAAK+0D,GACdA,EAAM,IAGd,OAAOgc,EAEX,cACI,GAAI9vE,KAAK2sE,SAAU,OAAO3sE,KAAK2sE,SAC/B,IAAIjgC,EAAO1sC,KAAKktE,UAAS,GAIzB,OAHAxyD,MAAM4yD,YAAY5gC,GACd1sC,KAAKy1D,MAAMR,sBAAwBj1D,KAAKy1D,MAAMhuB,MAClDznC,KAAK0rE,KACE1rE,KAAK2sE,SAGhB,WACI,IAAImD,EAAW9vE,KAAK+vE,eAChBrE,EAAO,IAAQ5B,GACnB,IAAI,IAAI5qE,EAAI,EAAGA,EAAI4wE,EAAS3wE,OAAQD,IAAI,CACpC,IAAI8wE,EAAUF,EAAS5wE,GACnBgxE,EAAUF,EAAQ,GAClBG,EAASH,EAAQA,EAAQ7wE,OAAS,GAClCqY,EAAQ,EACZ,GAAI04D,EAAQlC,QAAS,CAEjB,IAAIoC,EAAU,KACd54D,EAAQ,MACL,CAEH04D,EADIC,EAAOnC,QACDmC,EAEA,IAAIpC,IAA0C,GAAO,GAAQmC,EAAQllC,EAAImlC,EAAOnlC,GAAK,GAAIklC,EAAQziC,EAAI0iC,EAAO1iC,GAAK,GACvH2iC,EAAUF,EAElBxE,EAAKjC,OAAOyG,EAAQllC,EAAGklC,EAAQziC,GAC/B,IAAI,IAAIqwB,EAAItmD,EAAOsmD,EAAIkS,EAAQ7wE,OAAQ2+D,IAAI,CACvC,IAAIuS,EAAKL,EAAQlS,GACbwS,EAAe,IAANxS,EAAUoS,EAAUF,EAAQlS,EAAI,GAC7C,GAAIwS,EAAOtC,SAAWqC,EAAGrC,QAAStC,EAAKhC,OAAO2G,EAAGrlC,EAAGqlC,EAAG5iC,QAClD,GAAI6iC,EAAOtC,UAAYqC,EAAGrC,QAAaoC,EAAUC,OACjD,GAAKC,EAAOtC,SAAYqC,EAAGrC,QAKzB,IAAKsC,EAAOtC,UAAWqC,EAAGrC,QAG1B,MAAM,IAAIxuE,MAAM,0BAFnBksE,EAAK/B,iBAAiByG,EAAQplC,EAAGolC,EAAQ3iC,EAAG4iC,EAAGrlC,EAAGqlC,EAAG5iC,GACjD2iC,EAAU,SAPuB,CACrC,IAAIG,GAAQD,EAAOtlC,EAAIqlC,EAAGrlC,GAAK,EAC3BwlC,GAAQF,EAAO7iC,EAAI4iC,EAAG5iC,GAAK,EAC/Bi+B,EAAK/B,iBAAiB2G,EAAOtlC,EAAGslC,EAAO7iC,EAAG8iC,EAAMC,GAChD,IAAIJ,EAAUC,GAOlBD,GAAS1E,EAAK/B,iBAAiByG,EAAQplC,EAAGolC,EAAQ3iC,EAAGyiC,EAAQllC,EAAGklC,EAAQziC,GAC5Ei+B,EAAK7B,YAET,OAAO6B,EAEX,eAAerrE,GACXqa,SAASra,GACJlC,EAAuBpB,EAA5B,CAAsEiD,KAAM,OAAQ,QAQ5F,MAAMywE,WAAqDhE,GACvD,WACI,OAAIzsE,KAAKy1D,MAAMib,KAAah2D,MAAM8yD,WAC3BxtE,KAAKy1D,MAAM,QAAQkb,aAAa3wE,KAAK2rC,IAEhD,KAAK/tC,GACD,OAAIA,EAAEuB,OAAS,KAAa,IACnBvB,EAAEuB,OAAS,MAAc,KACtB,MAEhB,WACI,IAAIyxE,EAAM5wE,KAAKy1D,MAAMib,MAAQ1wE,KAAKy1D,MAAM,SAClCvjD,OAAQA,GAAY0+D,EACtBr4D,EAAMq4D,EAAInrD,QAAQpB,YAAYrkB,KAAK2rC,IACnCl0B,EAAMc,EAAIb,OAASa,EAAIpZ,OAC3B+S,EAAOmF,IAAMkB,EAAIb,OACjB,IAMIm5D,EACAC,EAPApF,EAAO,IAAQ5B,GACfxc,EAAQ,GACRyjB,EAAQ,GACR1pD,EAAQ,KACR2pD,EAAS,EACTC,EAAK,EAAGC,EAAK,EAGbC,GAAO,EACXnxE,KAAKoxE,YAAcP,EAAa,GAChC7wE,KAAKqxE,WAAaP,EAAY,GAC9B,IAAIQ,EAASV,EAAIprD,iBAAmB,GAChC+rD,EAAavxE,KAAKwxE,KAAKF,GACvBG,EAAcb,EAAIc,oBAAoB1xE,KAAK2rC,KAAO,GAClDgmC,EAAQF,EAAYG,OAAS,GAC7BC,EAAY7xE,KAAKwxE,KAAKG,GACtBG,EAASlB,EAAInrD,QAAQqsD,QAAUlB,EAAInrD,QAAQqsD,OAAO7sD,mBAClD8sD,EAAUN,EAAYM,QACtBtM,EAAqBzlE,KAAKy1D,MAAMR,oBACpC,SAAS+c,IACQ,MAAT3qD,IAAeA,EAAQimC,EAAM2kB,QAAUR,EAAYS,eAE3D,SAASC,IAGL,OAFI7kB,EAAMnuD,OAAS,GAAM,GAAG6yE,IAC5BhB,GAAU1jB,EAAMnuD,QAAU,EACnBmuD,EAAMnuD,OAAS,EAE1B,SAASsqE,EAAOz+B,EAAGyC,GACX0jC,GAAMzF,EAAK7B,YACf6B,EAAKjC,OAAOz+B,EAAGyC,GACf0jC,GAAO,EAEX,IAAI3Y,EAAQ,WACR,KAAMtmD,EAAOmF,IAAMI,GAAI,CACnB,IAAI6B,EAAKpH,EAAOkF,YAChB,GAAIkC,EAAK,GAAI,CACT,IAAIgK,EAAO8uD,EAAMC,EACjB,OAAO/4D,GACH,KAAK,EACL,KAAK,EACL,KAAK,GACL,KAAK,GACD64D,IACA,MACJ,KAAK,EACG7kB,EAAMnuD,OAAS,GAAG6yE,IACtBd,GAAM5jB,EAAM2kB,QACZxI,EAAOwH,EAAIC,GACX,MACJ,KAAK,EACD,KAAM5jB,EAAMnuD,QAAU,GAClB8xE,GAAM3jB,EAAM2kB,QACZf,GAAM5jB,EAAM2kB,QACZvG,EAAKhC,OAAOuH,EAAIC,GAEpB,MACJ,KAAK,EACL,KAAK,EAED,IADAmB,EAAe,IAAP/4D,EACFg0C,EAAMnuD,QAAU,GACdkzE,EAAOpB,GAAM3jB,EAAM2kB,QAClBf,GAAM5jB,EAAM2kB,QACjBvG,EAAKhC,OAAOuH,EAAIC,GAChBmB,GAASA,EAEb,MACJ,KAAK,EACD,KAAM/kB,EAAMnuD,OAAS,GAAE,CACnB,IAAImzE,EAAMrB,EAAK3jB,EAAM2kB,QACjBM,EAAMrB,EAAK5jB,EAAM2kB,QACjBO,EAAMF,EAAMhlB,EAAM2kB,QAClBQ,EAAMF,EAAMjlB,EAAM2kB,QACtBhB,EAAKuB,EAAMllB,EAAM2kB,QACjBf,EAAKuB,EAAMnlB,EAAM2kB,QACjBvG,EAAK9B,cAAc0I,EAAKC,EAAKC,EAAKC,EAAKxB,EAAIC,GAE/C,MACJ,KAAK,GAGD,GAFA5tD,EAAQgqC,EAAMvyC,MAAQ82D,EACtBO,EAAOT,EAAMruD,GACT8uD,EAAM,CACNtB,EAAUxtD,IAAS,EACnB,IAAI2mB,EAAI/3B,EAAOmF,IACX5Z,EAAIga,EACRvF,EAAOmF,IAAM+6D,EAAK16D,OAClBD,EAAM26D,EAAK16D,OAAS06D,EAAKjzE,OACzBq5D,IACAtmD,EAAOmF,IAAM4yB,EACbxyB,EAAMha,EAEV,MACJ,KAAK,GACD,GAAImzE,EAAIzrE,SAAW,EAAG,MACtB,OACJ,KAAK,GACD,GAAIyrE,EAAIzrE,SAAW,EAAG,MAClBmoD,EAAMnuD,OAAS,GAAG6yE,IAClBb,IACAzF,EAAK7B,YACLsH,GAAO,GAEX,MACJ,KAAK,GACD,GAAIP,EAAIzrE,QAAU,EAAG,MAAM,IAAI3F,MAAM,4CACrCuyE,EAAUzkB,EAAMvyC,MAChB,MACJ,KAAK,GACD,CACI,GAAI61D,EAAIzrE,QAAU,EAAG,MAAM,IAAI3F,MAAM,0CACrC,IAAKimE,EAAoB,MAAM,IAAIjmE,MAAM,wCACzC,IAAIkzE,EAAcjN,EAAmBkN,eAAeb,EAAQC,GACxDj3D,EAAYwyC,EAAMvyC,MAClB63D,EAAc93D,EAAY43D,EAAYvzE,OACtCisC,EAAQkiB,EAAMnuD,OAASyzE,EACvBn1C,EAAO2N,EAAQtwB,EACnB,IAAI,IAAI5b,EAAI,EAAGA,EAAI4b,EAAW5b,IAAI,CAC9B,IAAI2zE,EAAMvlB,EAAM7vB,EAAOv+B,GACvB,IAAI,IAAI4+D,EAAI,EAAGA,EAAI4U,EAAYvzE,OAAQ2+D,IAAI+U,GAAOH,EAAY5U,GAAKxQ,EAAMliB,KACzEkiB,EAAM7vB,EAAOv+B,GAAK2zE,EAEtB,KAAMD,KAActlB,EAAMvyC,MAC1B,MAER,KAAK,GACL,KAAK,GACDo3D,IACAjgE,EAAOmF,KAAO25D,EAAS,GAAK,EAC5B,MACJ,KAAK,GACG1jB,EAAMnuD,OAAS,GAAG6yE,IACtBf,GAAM3jB,EAAM2kB,QACZf,GAAM5jB,EAAM2kB,QACZxI,EAAOwH,EAAIC,GACX,MACJ,KAAK,GACG5jB,EAAMnuD,OAAS,GAAG6yE,IACtBf,GAAM3jB,EAAM2kB,QACZxI,EAAOwH,EAAIC,GACX,MACJ,KAAK,GACD,KAAM5jB,EAAMnuD,QAAU,GAAE,CAChBmzE,EAAMrB,EAAK3jB,EAAM2kB,QACjBM,EAAMrB,EAAK5jB,EAAM2kB,QACjBO,EAAMF,EAAMhlB,EAAM2kB,QAClBQ,EAAMF,EAAMjlB,EAAM2kB,QACtBhB,EAAKuB,EAAMllB,EAAM2kB,QACjBf,EAAKuB,EAAMnlB,EAAM2kB,QACjBvG,EAAK9B,cAAc0I,EAAKC,EAAKC,EAAKC,EAAKxB,EAAIC,GAE/CD,GAAM3jB,EAAM2kB,QACZf,GAAM5jB,EAAM2kB,QACZvG,EAAKhC,OAAOuH,EAAIC,GAChB,MACJ,KAAK,GACD,KAAM5jB,EAAMnuD,QAAU,GAClB8xE,GAAM3jB,EAAM2kB,QACZf,GAAM5jB,EAAM2kB,QACZvG,EAAKhC,OAAOuH,EAAIC,GAEhBoB,EAAMrB,EAAK3jB,EAAM2kB,QACjBM,EAAMrB,EAAK5jB,EAAM2kB,QACjBO,EAAMF,EAAMhlB,EAAM2kB,QAClBQ,EAAMF,EAAMjlB,EAAM2kB,QACtBhB,EAAKuB,EAAMllB,EAAM2kB,QACjBf,EAAKuB,EAAMnlB,EAAM2kB,QACjBvG,EAAK9B,cAAc0I,EAAKC,EAAKC,EAAKC,EAAKxB,EAAIC,GAC3C,MACJ,KAAK,GAED,IADI5jB,EAAMnuD,OAAS,IAAG8xE,GAAM3jB,EAAM2kB,SAC5B3kB,EAAMnuD,QAAU,GAClBmzE,EAAMrB,EACNsB,EAAMrB,EAAK5jB,EAAM2kB,QACjBO,EAAMF,EAAMhlB,EAAM2kB,QAClBQ,EAAMF,EAAMjlB,EAAM2kB,QAClBhB,EAAKuB,EACLtB,EAAKuB,EAAMnlB,EAAM2kB,QACjBvG,EAAK9B,cAAc0I,EAAKC,EAAKC,EAAKC,EAAKxB,EAAIC,GAE/C,MACJ,KAAK,GAED,IADI5jB,EAAMnuD,OAAS,IAAG+xE,GAAM5jB,EAAM2kB,SAC5B3kB,EAAMnuD,QAAU,GAClBmzE,EAAMrB,EAAK3jB,EAAM2kB,QACjBM,EAAMrB,EACNsB,EAAMF,EAAMhlB,EAAM2kB,QAClBQ,EAAMF,EAAMjlB,EAAM2kB,QAClBhB,EAAKuB,EAAMllB,EAAM2kB,QACjBf,EAAKuB,EACL/G,EAAK9B,cAAc0I,EAAKC,EAAKC,EAAKC,EAAKxB,EAAIC,GAE/C,MACJ,KAAK,GACD5jB,EAAMvuD,KAAKmT,EAAOmG,eAClB,MACJ,KAAK,GAGD,GAFAiL,EAAQgqC,EAAMvyC,MAAQw2D,EACtBa,EAAOd,EAAOhuD,GACV8uD,EAAM,CACNvB,EAAWvtD,IAAS,EAChB2mB,EAAI/3B,EAAOmF,IACX5Z,EAAIga,EACRvF,EAAOmF,IAAM+6D,EAAK16D,OAClBD,EAAM26D,EAAK16D,OAAS06D,EAAKjzE,OACzBq5D,IACAtmD,EAAOmF,IAAM4yB,EACbxyB,EAAMha,EAEV,MACJ,KAAK,GACL,KAAK,GAED,IADA40E,EAAe,KAAP/4D,EACFg0C,EAAMnuD,QAAU,GACdkzE,GACAC,EAAMrB,EAAK3jB,EAAM2kB,QACjBM,EAAMrB,EACNsB,EAAMF,EAAMhlB,EAAM2kB,QAClBQ,EAAMF,EAAMjlB,EAAM2kB,QAClBf,EAAKuB,EAAMnlB,EAAM2kB,QACjBhB,EAAKuB,GAAwB,IAAjBllB,EAAMnuD,OAAemuD,EAAM2kB,QAAU,KAEjDK,EAAMrB,EACNsB,EAAMrB,EAAK5jB,EAAM2kB,QACjBO,EAAMF,EAAMhlB,EAAM2kB,QAClBQ,EAAMF,EAAMjlB,EAAM2kB,QAClBhB,EAAKuB,EAAMllB,EAAM2kB,QACjBf,EAAKuB,GAAwB,IAAjBnlB,EAAMnuD,OAAemuD,EAAM2kB,QAAU,IAErDvG,EAAK9B,cAAc0I,EAAKC,EAAKC,EAAKC,EAAKxB,EAAIC,GAC3CmB,GAASA,EAEb,MACJ,KAAK,GAED,OADA/4D,EAAKpH,EAAOkF,YACLkC,GACH,KAAK,EACD,IAAIlb,EAAIkvD,EAAMvyC,MACVvC,EAAI80C,EAAMvyC,MACduyC,EAAMvuD,KAAKX,GAAKoa,EAAI,EAAI,GACxB,MACJ,KAAK,EACDpa,EAAIkvD,EAAMvyC,MACVvC,EAAI80C,EAAMvyC,MACVuyC,EAAMvuD,KAAKX,GAAKoa,EAAI,EAAI,GACxB,MACJ,KAAK,EACDpa,EAAIkvD,EAAMvyC,MACVuyC,EAAMvuD,KAAKX,EAAI,EAAI,GACnB,MACJ,KAAK,EACDA,EAAIkvD,EAAMvyC,MACVuyC,EAAMvuD,KAAKkE,KAAKyqC,IAAItvC,IACpB,MACJ,KAAK,GACDA,EAAIkvD,EAAMvyC,MACVvC,EAAI80C,EAAMvyC,MACVuyC,EAAMvuD,KAAKX,EAAIoa,GACf,MACJ,KAAK,GACDpa,EAAIkvD,EAAMvyC,MACVvC,EAAI80C,EAAMvyC,MACVuyC,EAAMvuD,KAAKX,EAAIoa,GACf,MACJ,KAAK,GACDpa,EAAIkvD,EAAMvyC,MACVvC,EAAI80C,EAAMvyC,MACVuyC,EAAMvuD,KAAKX,EAAIoa,GACf,MACJ,KAAK,GACDpa,EAAIkvD,EAAMvyC,MACVuyC,EAAMvuD,MAAMX,GACZ,MACJ,KAAK,GACDA,EAAIkvD,EAAMvyC,MACVvC,EAAI80C,EAAMvyC,MACVuyC,EAAMvuD,KAAKX,IAAMoa,EAAI,EAAI,GACzB,MACJ,KAAK,GACD80C,EAAMvyC,MACN,MACJ,KAAK,GACD,IAAIxI,EAAM+6C,EAAMvyC,MACZm3C,EAAM5E,EAAMvyC,MAChBg2D,EAAM7e,GAAO3/C,EACb,MACJ,KAAK,GACD2/C,EAAM5E,EAAMvyC,MACZuyC,EAAMvuD,KAAKgyE,EAAM7e,IAAQ,GACzB,MACJ,KAAK,GACD,IAAI4gB,EAAKxlB,EAAMvyC,MACXg4D,EAAKzlB,EAAMvyC,MACXi4D,EAAK1lB,EAAMvyC,MACXk4D,EAAK3lB,EAAMvyC,MACfuyC,EAAMvuD,KAAKi0E,GAAMC,EAAKH,EAAKC,GAC3B,MACJ,KAAK,GACDzlB,EAAMvuD,KAAKkE,KAAKiwE,UAChB,MACJ,KAAK,GACD90E,EAAIkvD,EAAMvyC,MACVvC,EAAI80C,EAAMvyC,MACVuyC,EAAMvuD,KAAKX,EAAIoa,GACf,MACJ,KAAK,GACDpa,EAAIkvD,EAAMvyC,MACVuyC,EAAMvuD,KAAKkE,KAAKuoE,KAAKptE,IACrB,MACJ,KAAK,GACDA,EAAIkvD,EAAMvyC,MACVuyC,EAAMvuD,KAAKX,EAAGA,GACd,MACJ,KAAK,GACDA,EAAIkvD,EAAMvyC,MACVvC,EAAI80C,EAAMvyC,MACVuyC,EAAMvuD,KAAKyZ,EAAGpa,GACd,MACJ,KAAK,GACD8zD,EAAM5E,EAAMvyC,MACRm3C,EAAM,EAAGA,EAAM,EACVA,EAAM5E,EAAMnuD,OAAS,IAAG+yD,EAAM5E,EAAMnuD,OAAS,GACtDmuD,EAAMvuD,KAAKuuD,EAAM4E,IACjB,MACJ,KAAK,GACD,IAAIx0D,EAAI4vD,EAAMvyC,MACV+iD,EAAIxQ,EAAMvyC,MACd,GAAI+iD,GAAK,EAAG,KAAMA,EAAI,GAAE,CACpB,IAAI96D,EAAIsqD,EAAM5vD,EAAI,GAClB,IAAI,IAAIwB,EAAIxB,EAAI,EAAGwB,GAAK,EAAGA,IAAIouD,EAAMpuD,EAAI,GAAKouD,EAAMpuD,GACpDouD,EAAM,GAAKtqD,EACX86D,SAEC,KAAMA,EAAI,GAAE,CACT96D,EAAIsqD,EAAM,GACd,IAAI,IAAIpuD,EAAI,EAAGA,GAAKxB,EAAGwB,IAAIouD,EAAMpuD,GAAKouD,EAAMpuD,EAAI,GAChDouD,EAAM5vD,EAAI,GAAKsF,EACf86D,IAEJ,MACJ,KAAK,GACDwU,EAAMrB,EAAK3jB,EAAM2kB,QACjBM,EAAMrB,EACNsB,EAAMF,EAAMhlB,EAAM2kB,QAClBQ,EAAMF,EAAMjlB,EAAM2kB,QAClB,IAAIkB,EAAMX,EAAMllB,EAAM2kB,QAClBmB,EAAMX,EACNY,EAAMF,EAAM7lB,EAAM2kB,QAClBqB,EAAMF,EACNG,EAAMF,EAAM/lB,EAAM2kB,QAClBuB,EAAMF,EACNG,EAAMF,EAAMjmB,EAAM2kB,QAClByB,EAAMF,EACVvC,EAAKwC,EACLvC,EAAKwC,EACLhI,EAAK9B,cAAc0I,EAAKC,EAAKC,EAAKC,EAAKU,EAAKC,GAC5C1H,EAAK9B,cAAcyJ,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC5C,MACJ,KAAK,GACD,IAAIC,EAAM,GACV,IAAI,IAAIz0E,EAAI,EAAGA,GAAK,EAAGA,IACnB+xE,GAAM3jB,EAAM2kB,QACZf,GAAM5jB,EAAM2kB,QACZ0B,EAAI50E,KAAKkyE,EAAIC,GAEjBxF,EAAK9B,iBAAiB+J,EAAIzqB,MAAM,EAAG,IACnCwiB,EAAK9B,iBAAiB+J,EAAIzqB,MAAM,IAChCoE,EAAM2kB,QACN,MACJ,KAAK,GACDK,EAAMrB,EAAK3jB,EAAM2kB,QACjBM,EAAMrB,EAAK5jB,EAAM2kB,QACjBO,EAAMF,EAAMhlB,EAAM2kB,QAClBQ,EAAMF,EAAMjlB,EAAM2kB,QAClBkB,EAAMX,EAAMllB,EAAM2kB,QAClBmB,EAAMX,EACNY,EAAMF,EAAM7lB,EAAM2kB,QAClBqB,EAAMF,EACNG,EAAMF,EAAM/lB,EAAM2kB,QAClBuB,EAAMF,EAAMhmB,EAAM2kB,QAClBwB,EAAMF,EAAMjmB,EAAM2kB,QAClByB,EAAMF,EACNvC,EAAKwC,EACLvC,EAAKwC,EACLhI,EAAK9B,cAAc0I,EAAKC,EAAKC,EAAKC,EAAKU,EAAKC,GAC5C1H,EAAK9B,cAAcyJ,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAC5C,MACJ,KAAK,GACD,IAAIE,EAAS3C,EACT4C,EAAS3C,EACbyC,EAAM,GACN,IAAI,IAAI3pE,EAAK,EAAGA,GAAM,EAAGA,IACrBinE,GAAM3jB,EAAM2kB,QACZf,GAAM5jB,EAAM2kB,QACZ0B,EAAI50E,KAAKkyE,EAAIC,GAEbjuE,KAAKyqC,IAAIujC,EAAK2C,GAAU3wE,KAAKyqC,IAAIwjC,EAAK2C,IACtC5C,GAAM3jB,EAAM2kB,QACZf,EAAK2C,IAEL5C,EAAK2C,EACL1C,GAAM5jB,EAAM2kB,SAEhB0B,EAAI50E,KAAKkyE,EAAIC,GACbxF,EAAK9B,iBAAiB+J,EAAIzqB,MAAM,EAAG,IACnCwiB,EAAK9B,iBAAiB+J,EAAIzqB,MAAM,IAChC,MACJ,QACI,MAAM,IAAI1pD,MAAM,kBAAkB8Z,GAE1C,MACJ,QACI,MAAM,IAAI9Z,MAAM,eAAe8Z,SAEpC,GAAIA,EAAK,IAAKg0C,EAAMvuD,KAAKua,EAAK,UAChC,GAAIA,EAAK,IAAK,CACf,IAAIw6D,EAAK5hE,EAAOkF,YAChBk2C,EAAMvuD,KAAkB,KAAZua,EAAK,KAAaw6D,EAAK,UAChC,GAAIx6D,EAAK,IAAK,CACbw6D,EAAK5hE,EAAOkF,YAChBk2C,EAAMvuD,KAAmB,MAAZua,EAAK,KAAaw6D,EAAK,UACjCxmB,EAAMvuD,KAAKmT,EAAOoG,cAAgB,SAKjD,OAFAkgD,IACI2Y,GAAMzF,EAAK7B,YACR6B,EAEX,eAAerrE,GACXqa,SAASra,GACJlC,EAAuBpB,EAA5B,CAAsEiD,KAAM,OAAQ,QAQ5F,IAAI+zE,GAAkC,IAAIj3E,EAAmB6D,OAAO,CAChEqzE,QAASl3E,EAAmB+D,OAC5BozE,QAASn3E,EAAmB+D,OAC5BwB,KAAM,IAAIvF,EAAmBqU,OAAO,GACpCiX,KAAM,IAAItrB,EAAmB8Z,OAAQ5T,GAAIA,EAAE2E,OAAOusE,OAASlxE,EAAEe,kBAEjE,MAAMowE,WAAqD5F,GAQrD,gBAAgB77D,GACd,IAAI,IAAIxT,EAAI,EAAGA,EAAIc,KAAKy1D,MAAMxuB,KAAK5b,YAAYlsB,OAAQD,IAAI,CACvD,IAAI8F,EAAQhF,KAAKy1D,MAAMxuB,KAAK5b,YAAYnsB,GACxC,GAAI8F,EAAMgmB,MAAQtY,EAAM,MAE5B,IAAIsD,EAAUhR,EAAMkmB,aAChB1T,EAAQxB,EAAQhW,KAAK2rC,IACrBl0B,EAAMzB,EAAQhW,KAAK2rC,GAAK,GAC5B,OAAIn0B,IAAUC,EAAY,MAC1BzX,KAAKy1D,MAAMvjD,OAAOmF,IAAMG,EACjBu8D,GAAgChqE,OAAO/J,KAAKy1D,MAAMvjD,OAAQ,CAC7DgiE,OAAQz8D,EAAMD,KAGtB,OAAOnG,EAAKqB,GACR,IAAI0hE,EAAMp0E,KAAKq0E,gBAAgB3hE,GAC/B,GAAW,MAAP0hE,EAAa,CACb,IAAI/G,EAAQ36D,EAAO1S,KAAKy1D,MAAM7vD,WAC9ByL,EAAIijE,MAAMF,EAAIhsD,KAAM,CAChBhB,OAAQ1U,EACRs4B,EAAGopC,EAAIJ,QACPvmC,GAAIztC,KAAKy3C,KAAKpK,KAAO+mC,EAAIH,SAAW5G,IAGxCrtE,KAAKy1D,MAAMxuB,KAAKthC,MAAM4uE,gBAAgB75D,MAAM85D,OAAOnjE,EAAKqB,GAEhE,eAAerS,GACXqa,SAASra,GACJlC,EAAuBpB,EAA5B,CAAsEiD,KAAM,OAAQ,SAQ5F,MAAMy0E,GACF,YAAYxuD,EAAOyuD,GACf10E,KAAKimB,MAAQA,EACbjmB,KAAK00E,MAAQA,GAGrB,MAAMC,WAAqDlI,GACvD,WACI,IAAIh1B,EAAO,IAAQjK,GACnB,IAAI,IAAItuC,EAAI,EAAGA,EAAIc,KAAK40E,OAAOz1E,OAAQD,IAAI,CACvC,IACIsZ,EADQxY,KAAK40E,OAAO11E,GACV+mB,MAAMwxB,KACpBA,EAAKC,SAASl/B,EAAEq0B,KAAMr0B,EAAE60B,MACxBoK,EAAKC,SAASl/B,EAAE40B,KAAM50B,EAAE80B,MAE5B,OAAOmK,EAMT,aACE,IAAIo9B,EAAO70E,KAAKy1D,MAAMtuB,KAClB2tC,EAAO90E,KAAKy1D,MAAMvuB,KAClB5gB,EAAM,EACNC,EAAOuuD,EAAKjpD,gBAAgB1sB,OAAS,EACzC,KAAMmnB,GAAOC,GAAK,CACd,IAAIC,EAAMF,EAAMC,GAAQ,EACxB,IAAIwuD,EAAMD,EAAKjpD,gBAAgBrF,GAC/B,GAAIxmB,KAAK2rC,GAAKopC,EAAI5uD,IAAKI,EAAOC,EAAM,MAC/B,MAAIxmB,KAAK2rC,GAAKopC,EAAI5uD,KAClB,CACD,IAAI6uD,EAAYD,EAChB,MAHwBzuD,EAAME,EAAM,GAQ5C,GAAiB,MAAbwuD,EAAmB,CACnB,IAAI1pC,EAAItrC,KAAKy1D,MAAMwf,cAAcj1E,KAAK2rC,IAOtC,MAAO,CACH,IAAI8oC,GAAgCnpC,EAPpCopC,EAAQ,CACRvoD,IAAK,EACLD,MAAO,EACPD,KAAM,EACNG,MAAO,OAOf,IAAIwoD,EAAS,GACb,IAAI,IAAI11E,EAAI81E,EAAUvpD,gBAAiBvsB,EAAI81E,EAAUvpD,gBAAkBupD,EAAUtpD,UAAWxsB,IAAI,CACxF61E,EAAMD,EAAKhpD,aAAa5sB,GAA5B,IACIw1E,EAAQG,EAAKpoD,aAAasoD,EAAIxpD,cAC9B+f,EAAItrC,KAAKy1D,MAAMwf,cAAcF,EAAI5uD,KACrCyuD,EAAO71E,KAAK,IAAI01E,GAAgCnpC,EAAGopC,IAEvD,OAAOE,EAEX,OAAOvjE,EAAKqB,GACR,IAAK,IAAMuT,MAAOA,EAAQyuD,MAAOA,KAAY10E,KAAK40E,OAC9CvjE,EAAI6jE,UAAU,CACVR,EAAMvoD,IACNuoD,EAAMxoD,MACNwoD,EAAMzoD,MACPyoD,EAAMtoD,MAAQ,IAAM,KACvBnG,EAAMuuD,OAAOnjE,EAAKqB,GAI1B,eAAerS,GACXqa,SAASra,GACJlC,EAAuBpB,EAA5B,CAAsEiD,KAAM,OAAQ,SAgB5F,MAAMm1E,GACF,gBAAgBhiB,GAGZ,IAAIiiB,EAAa,GACjB,IAAI,IAAIl2E,EAAI,EAAGA,EAAIc,KAAKX,KAAKgpC,KAAKlH,KAAKhiC,OAAQD,IAAI,CAC/C,IAAIiiC,EAAOnhC,KAAKX,KAAKgpC,KAAKlH,KAAKjiC,GAC3Bi0D,EAAOj0D,GAAKiiC,EAAKX,aAAc40C,EAAWr2E,MAAMo0D,EAAOj0D,GAAKiiC,EAAKX,aAAe1nB,OAAOu8D,UAAYl0C,EAAKX,aAAeW,EAAKZ,SAAWznB,OAAOu8D,UAC7ID,EAAWr2E,MAAMo0D,EAAOj0D,GAAKiiC,EAAKX,aAAe1nB,OAAOu8D,UAAYl0C,EAAKV,SAAWU,EAAKX,aAAe1nB,OAAOu8D,UAIxH,GAAIr1E,KAAKX,KAAK6oC,KAAM,IAAQhpC,EAAI,EAAGA,EAAIc,KAAKX,KAAK6oC,KAAK5K,QAAQn+B,OAAQD,IAAI,CACtE,IAAIo+B,EAAUt9B,KAAKX,KAAK6oC,KAAK5K,QAAQp+B,GACrC,IAAI,IAAI4+D,EAAI,EAAGA,EAAIxgC,EAAQF,eAAej+B,OAAQ2+D,IAAI,CAClD,IAAI9xB,EAAO1O,EAAQF,eAAe0gC,GAClC,GAAIA,GAAK,GAAKsX,EAAWl2E,GAAK8sC,EAAKhP,UAAW,CAC1C,IAAIo0B,EAAO9zB,EAAQF,eAAe0gC,EAAI,GACtCsX,EAAWl2E,KAAOk2E,EAAWl2E,GAAKkyD,EAAKp0B,YAAcgP,EAAK/O,QAAUm0B,EAAKn0B,SAAWnkB,OAAOu8D,UAAYrpC,EAAKhP,UAAYo0B,EAAKp0B,UAAYlkB,OAAOu8D,SAAWjkB,EAAKn0B,QAChK,QAIZ,OAAOm4C,EAEX,gBAAgBjvD,EAAKmvD,GACjB,IAAKt1E,KAAKX,KAAKgpC,OAASroC,KAAKX,KAAKipC,KAAM,OACxC,IAAMA,KAAMA,GAAUtoC,KAAKX,KAC3B,GAAI8mB,GAAOmiB,EAAKjrB,WAAY,OAC5B,IAAI3F,EAAS4wB,EAAKtyB,QAAQmQ,GAC1B,GAAIzO,IAAW4wB,EAAKtyB,QAAQmQ,EAAM,GAAI,OAEtC,IAAMjU,OAAQA,GAAYlS,KAAKX,KAE/B,GADA6S,EAAOmF,IAAMK,EACTxF,EAAOmF,KAAOnF,EAAO/S,OAAQ,OACjC,IAAIo2E,EAAarjE,EAAO+E,eACpB8pB,EAAerpB,EAASxF,EAAO+E,eACnC,GAhDiD,MAgD7Cs+D,EAA+D,CAC/D,IAAIC,EAAOtjE,EAAOmF,IAClBnF,EAAOmF,IAAM0pB,EACb,IAAI00C,EAAez1E,KAAK01E,eACxB30C,EAAe7uB,EAAOmF,IACtBnF,EAAOmF,IAAMm+D,EAEjB,IAAIG,EAAaL,EAAYr/D,IAAKo6D,GAAKA,EAAG1jC,QAC1C4oC,GAvDuC,KAwDvC,IAAI,IAAIr2E,EAAI,EAAGA,EAAIq2E,EAAYr2E,IAAI,CAC/B,IAAI02E,EAAgB1jE,EAAO+E,eACvBojB,EAAanoB,EAAO+E,eACxB,GA1DuC,MA0DnCojB,EAAyD,CACzD,IAAIw7C,EAAc,GAClB,IAAI,IAAIz3E,EAAI,EAAGA,EAAIkqC,EAAK1nB,UAAWxiB,IAAIy3E,EAAY92E,KAAKmT,EAAOmG,cAAgB,WAC5E,CACH,IA3D+B,KA2D1BgiB,IAAwDiO,EAAK/G,iBAAkB,MAAM,IAAI/hC,MAAM,sBAChGq2E,EAAcvtC,EAAK9G,aA5DQ,KA4DKnH,GAExC,GAhEqC,MAgEjCA,EAAuD,CACvD,IAAIy7C,EAAc,GAClB,IAAI,IAAI13E,EAAI,EAAGA,EAAIkqC,EAAK1nB,UAAWxiB,IAAI03E,EAAY/2E,KAAKmT,EAAOmG,cAAgB,OAC/E,IAAI09D,EAAY,GAChB,IAAI,IAAIC,EAAK,EAAGA,EAAK1tC,EAAK1nB,UAAWo1D,IAAKD,EAAUh3E,KAAKmT,EAAOmG,cAAgB,OAGpF,IAAI49D,EAASj2E,KAAKk2E,YAAY77C,EAAYw7C,EAAaC,EAAaC,GACpE,GAAe,IAAXE,EAAc,CACdl1C,GAAgB60C,EAChB,SAEAJ,EAAOtjE,EAAOmF,IAElB,GADAnF,EAAOmF,IAAM0pB,EA5E2B,KA6EpC1G,EAA0D,IAAI00C,EAAS/uE,KAAK01E,oBACvE3G,EAAS0G,EAElB,IAAIU,EAA4B,IAAlBpH,EAAO5vE,OAAem2E,EAAYn2E,OAAS4vE,EAAO5vE,OAC5Di3E,EAAUp2E,KAAKq2E,aAAaF,GAC5BG,EAAUt2E,KAAKq2E,aAAaF,GAChC,GAAsB,IAAlBpH,EAAO5vE,OAAc,IAAI,IAAID,EAAI,EAAGA,EAAIo2E,EAAYn2E,OAAQD,IAAI,CAChE,IAAIiwE,EAAQmG,EAAYp2E,GACxBiwE,EAAMnkC,GAAK/nC,KAAKinE,MAAMkM,EAAQl3E,GAAK+2E,GACnC9G,EAAM1hC,GAAKxqC,KAAKinE,MAAMoM,EAAQp3E,GAAK+2E,OAElC,CACD,IAAIM,EAAYZ,EAAW1/D,IAAKo6D,GAAKA,EAAG1jC,QACpC6pC,EAAWlB,EAAYr/D,IAAI,KAAI,GACnC,IAAI,IAAI/W,EAAI,EAAGA,EAAI6vE,EAAO5vE,OAAQD,IAAI,CAClC,IAAIgzD,EAAM6c,EAAO7vE,GACjB,GAAIgzD,EAAMojB,EAAYn2E,OAAQ,CAC1B,IAAIgwE,EAAQoH,EAAUrkB,GACtBskB,EAAStkB,IAAO,EAChBid,EAAMnkC,GAAK/nC,KAAKinE,MAAMkM,EAAQl3E,GAAK+2E,GACnC9G,EAAM1hC,GAAKxqC,KAAKinE,MAAMoM,EAAQp3E,GAAK+2E,IAG3Cj2E,KAAKy2E,yBAAyBF,EAAWZ,EAAYa,GACrD,IAAI,IAAIxsE,EAAK,EAAGA,EAAKsrE,EAAYn2E,OAAQ6K,IAAK,CAC1C,IAAI0sE,EAASH,EAAUvsE,GAAIghC,EAAI2qC,EAAW3rE,GAAIghC,EAC1C2rC,EAASJ,EAAUvsE,GAAIyjC,EAAIkoC,EAAW3rE,GAAIyjC,EAC9C6nC,EAAYtrE,GAAIghC,GAAK0rC,EACrBpB,EAAYtrE,GAAIyjC,GAAKkpC,GAG7B51C,GAAgB60C,EAChB1jE,EAAOmF,IAAMm+D,GAGrB,eACI,IAAItjE,EAASlS,KAAKX,KAAK6S,OACnBP,EAAQO,EAAOkF,YAhHoB,IAiHnCzF,IAAgDA,GAhHT,IAgHkBA,IAAuD,EAAIO,EAAOkF,aAC/H,IAAI23D,EAAS,IAAI6H,YAAYjlE,GACzBzS,EAAI,EACJiwE,EAAQ,EACZ,KAAMjwE,EAAIyS,GAAM,CACZ,IAAIklE,EAAM3kE,EAAOkF,YACb0/D,EAAgE,GAtH7B,IAsHvBD,GACZ52E,EAxH+B,IAwH1B42E,EAA+C3kE,EAAO6kE,WAAa7kE,EAAOkF,UACnF,IAAI,IAAI0mD,EAAI,EAAGA,EAAIgZ,GAAY53E,EAAIyS,EAAOmsD,IACtCqR,GAASlvE,EAAGF,KAAKmS,GACjB68D,EAAO7vE,KAAOiwE,EAGtB,OAAOJ,EAEX,aAAap9D,GACT,IAAIO,EAASlS,KAAKX,KAAK6S,OACnBhT,EAAI,EACJmiB,EAAS,IAAI21D,WAAWrlE,GAC5B,KAAMzS,EAAIyS,GAAM,CACZ,IAAIklE,EAAM3kE,EAAOkF,YACb0/D,EAAgE,GAlI7B,GAkIvBD,GAChB,GArIkC,IAqI9BA,EAA6C33E,GAAK43E,MACjD,CACD,IAAI72E,EAtI2B,GAsItB42E,EAA+C3kE,EAAOmG,YAAcnG,EAAO09D,SACpF,IAAI,IAAI9R,EAAI,EAAGA,EAAIgZ,GAAY53E,EAAIyS,EAAOmsD,IAAIz8C,EAAOniB,KAAOe,EAAGF,KAAKmS,IAG5E,OAAOmP,EAEX,YAAYgZ,EAAYw7C,EAAaC,EAAaC,GAC9C,IAAIX,EAAap1E,KAAKm1D,kBAChB7sB,KAAMA,GAAUtoC,KAAKX,KACvB42E,EAAS,EACb,IAAI,IAAI/2E,EAAI,EAAGA,EAAIopC,EAAK1nB,UAAW1hB,IAC/B,GAAuB,IAAnB22E,EAAY32E,GAAhB,CACA,GAAsB,IAAlBk2E,EAAWl2E,GAAU,OAAO,EAChC,GAAgE,IAzJ3B,MAyJhCm7B,GAA8D,CAC/D,GAAI+6C,EAAWl2E,GAAK+D,KAAKumC,IAAI,EAAGqsC,EAAY32E,KAAOk2E,EAAWl2E,GAAK+D,KAAKC,IAAI,EAAG2yE,EAAY32E,IAAK,OAAO,EACvG+2E,GAAUA,EAASb,EAAWl2E,GAAK4Z,OAAOu8D,UAAYQ,EAAY32E,GAAK4Z,OAAOu8D,aAC3E,CACH,GAAID,EAAWl2E,GAAK42E,EAAY52E,IAAMk2E,EAAWl2E,GAAK62E,EAAU72E,GAAI,OAAO,EAClC+2E,EAAhCb,EAAWl2E,GAAK22E,EAAY32E,GAAa+2E,GAAUb,EAAWl2E,GAAK42E,EAAY52E,GAAK4Z,OAAOu8D,UAAYQ,EAAY32E,GAAK42E,EAAY52E,GAAK4Z,OAAOu8D,SAC3IY,GAAUF,EAAU72E,GAAKk2E,EAAWl2E,GAAK4Z,OAAOu8D,UAAYU,EAAU72E,GAAK22E,EAAY32E,GAAK4Z,OAAOu8D,UAGzH,OAAOY,EAKX,yBAAyBlH,EAAQkI,EAAUT,GACvC,GAAsB,IAAlBzH,EAAO5vE,OAAc,OACzB,IAAIgwE,EAAQ,EACZ,KAAMA,EAAQJ,EAAO5vE,QAAO,CACxB,IAAI+3E,EAAa/H,EAEbgI,EAAWhI,EACXkB,EAAKtB,EAAOoI,GAChB,MAAO9G,EAAGpC,YAAWoC,EAAKtB,IAASoI,GAEnC,KAAMhI,GAASgI,IAAaX,EAASrH,IAAOA,IAC5C,GAAIA,EAAQgI,EAAU,SACtB,IAAIC,EAAajI,EACbkI,EAAWlI,EAEf,IADAA,IACMA,GAASgI,GAEPX,EAASrH,KACTnvE,KAAKs3E,iBAAiBD,EAAW,EAAGlI,EAAQ,EAAGkI,EAAUlI,EAAO8H,EAAUlI,GAC1EsI,EAAWlI,GAEfA,IAGAkI,IAAaD,EAAYp3E,KAAKu3E,WAAWL,EAAYC,EAAUE,EAAUJ,EAAUlI,IAGnF/uE,KAAKs3E,iBAAiBD,EAAW,EAAGF,EAAUE,EAAUD,EAAYH,EAAUlI,GAC1EqI,EAAa,GAAGp3E,KAAKs3E,iBAAiBJ,EAAYE,EAAa,EAAGC,EAAUD,EAAYH,EAAUlI,IAE1GI,EAAQgI,EAAW,GAG3B,iBAAiBxM,EAAIC,EAAI4M,EAAMC,EAAMR,EAAUV,GAC3C,GAAI5L,EAAKC,EAAI,OACb,IAAI8M,EAAW,CACX,IACA,KAEJ,IAAI,IAAIx4E,EAAI,EAAGA,EAAIw4E,EAASv4E,OAAQD,IAAI,CACpC,IAAIib,EAAIu9D,EAASx4E,GACjB,GAAI+3E,EAASO,GAAMr9D,GAAK88D,EAASQ,GAAMt9D,GAAI,CACvC,IAAI8vB,EAAIutC,EACRA,EAAOC,EACPA,EAAOxtC,EAEX,IAAI0tC,EAAMV,EAASO,GAAMr9D,GACrBy9D,EAAMX,EAASQ,GAAMt9D,GACrB09D,EAAOtB,EAAUiB,GAAMr9D,GACvB29D,EAAOvB,EAAUkB,GAAMt9D,GAG3B,GAAIw9D,IAAQC,GAAOC,IAASC,EAAM,CAC9B,IAAIzK,EAAQsK,IAAQC,EAAM,GAAKE,EAAOD,IAASD,EAAMD,GACrD,IAAI,IAAI1tC,EAAI0gC,EAAI1gC,GAAK2gC,EAAI3gC,IAAI,CACzB,IAAI8tC,EAAMd,EAAShtC,GAAG9vB,GAClB49D,GAAOJ,EAAKI,GAAOF,EAAOF,EACrBI,GAAOH,EAAKG,GAAOD,EAAOF,EAC9BG,EAAMF,GAAQE,EAAMJ,GAAOtK,EAChCkJ,EAAUtsC,GAAG9vB,GAAK49D,KAKlC,WAAWpN,EAAIC,EAAIoN,EAAKf,EAAUV,GAC9B,IAAIG,EAASH,EAAUyB,GAAKhtC,EAAIisC,EAASe,GAAKhtC,EAC1C2rC,EAASJ,EAAUyB,GAAKvqC,EAAIwpC,EAASe,GAAKvqC,EAC9C,GAAe,IAAXipC,GAA2B,IAAXC,EACpB,IAAI,IAAI1sC,EAAI0gC,EAAI1gC,GAAK2gC,EAAI3gC,IAAQA,IAAM+tC,IACnCzB,EAAUtsC,GAAGe,GAAK0rC,EAClBH,EAAUtsC,GAAGwD,GAAKkpC,GAG1B,qBAAqBxwD,EAAKnhB,GACtB,IAAI6xB,EAAYC,EAChB,GAAI9xB,EAAMmyB,oBAAqB,CAC3B,IAAI+6B,EAAM/rC,EACN+rC,GAAOltD,EAAMmyB,oBAAoBH,WAAUk7B,EAAMltD,EAAMmyB,oBAAoBH,SAAW,GACxEhyB,EAAMmyB,oBAAoBP,cACzCC,WAAYA,EAAaC,WAAYA,GAAgB9xB,EAAMmyB,oBAAoBF,QAAQi7B,SAE1Fr7B,EAAa,EACbC,EAAa3Q,EAEjB,OAAOnmB,KAAK2lE,SAAS3gE,EAAMigB,mBAAoB4R,EAAYC,GAI/D,SAASmhD,EAAWphD,EAAYC,GAC5B,GAAID,GAAcohD,EAAUn2D,kBAAkB3iB,OAAQ,OAAO,EAC7D,IAAI+4E,EAAUD,EAAUn2D,kBAAkB+U,GAC1C,GAAIC,GAAcohD,EAAQx2D,UAAUviB,OAAQ,OAAO,EACnD,IAAIg5E,EAAWD,EAAQx2D,UAAUoV,GAC7B47C,EAAc1yE,KAAK2yE,eAAesF,EAAWphD,GAC7CuhD,EAAgB,EACpB,IAAI,IAAIC,EAAS,EAAGA,EAASH,EAAQ92D,iBAAkBi3D,IAASD,GAAiBD,EAAS92D,OAAOg3D,GAAU3F,EAAY2F,GACvH,OAAOD,EAEX,eAAeH,EAAWphD,GACtB,IAAIqhD,EAAUD,EAAUn2D,kBAAkB+U,GAC1C,GAAI72B,KAAKs4E,aAAa/3E,IAAI23E,GAAU,OAAOl4E,KAAKs4E,aAAav6E,IAAIm6E,GACjE,IAAI/iB,EAAmBn1D,KAAKm1D,iBACxBud,EAAc,GAElB,IAAI,IAAI2F,EAAS,EAAGA,EAASH,EAAQ92D,iBAAkBi3D,IAAS,CAC5D,IAAIE,EAAS,EACTC,EAAcN,EAAQz2D,cAAc42D,GACpCI,EAAOR,EAAUr2D,oBAAoBd,iBAAiB03D,GAE1D,IAAI,IAAI1a,EAAI,EAAGA,EAAI2a,EAAKt5E,OAAQ2+D,IAAI,CAChC,IACI4a,EADAv3C,EAAOs3C,EAAK3a,GAIwD4a,EAApEv3C,EAAK3gB,WAAa2gB,EAAK1gB,WAAa0gB,EAAK1gB,UAAY0gB,EAAKzgB,UACrDygB,EAAK3gB,WAAa,GAAK2gB,EAAKzgB,SAAW,GAAwB,IAAnBygB,EAAK1gB,WAC9B,IAAnB0gB,EAAK1gB,UAFuE,EAG5E00C,EAAiB2I,GAAK38B,EAAK3gB,YAAc20C,EAAiB2I,GAAK38B,EAAKzgB,SAAuB,EAE5Fy0C,EAAiB2I,KAAO38B,EAAK1gB,UAAwB,EAChD00C,EAAiB2I,GAAK38B,EAAK1gB,WAAyB00C,EAAiB2I,GAAK38B,EAAK3gB,WAAa1H,OAAOu8D,UAAYl0C,EAAK1gB,UAAY0gB,EAAK3gB,WAAa1H,OAAOu8D,UAC/Il0C,EAAKzgB,SAAWy0C,EAAiB2I,GAAKhlD,OAAOu8D,UAAYl0C,EAAKzgB,SAAWygB,EAAK1gB,UAAY3H,OAAOu8D,SAGxHkD,GAAUG,EAEdhG,EAAY2F,GAAUE,EAG1B,OADAv4E,KAAKs4E,aAAat6E,IAAIk6E,EAASxF,GACxBA,EAEX,YAAYrzE,EAAM8zD,GACdnzD,KAAKX,KAAOA,EACZW,KAAKm1D,iBAAmBn1D,KAAK24E,gBAAgBxlB,GAC7CnzD,KAAKs4E,aAAe,IAAIn4E,KAOOy4E,QAAQC,UAC/C,MAAMC,GACF,aAAa7yD,GAMT,MALqB,iBAAVA,IAAoBA,EAAQA,EAAM0lB,IAClB,MAAvB3rC,KAAKyJ,QAAQwc,KACbjmB,KAAKsd,OAAOve,KAAKknB,GACjBjmB,KAAKyJ,QAAQwc,GAASjmB,KAAKsd,OAAOne,OAAS,GAExCa,KAAKyJ,QAAQwc,GAExB,YAAY5mB,GACRW,KAAKX,KAAOA,EACZW,KAAKsd,OAAS,GACdtd,KAAKyJ,QAAU,GAEfzJ,KAAK+4E,aAAa,IAe1B,MAAMC,GACF,YAAYzmE,GACR,OAAOA,GAAO,GAAKA,GAAO,IAAM,EAAI,EAExC,cAAcL,EAAQpS,GACdA,GAAS,GAAKA,GAAS,IAAKoS,EAAO6F,WAAWjY,GAC7CoS,EAAO8G,aAAalZ,IAGjC,IAAIm5E,GAA6B,IAAIn8E,EAAmB6D,OAAO,CAC3DmtE,iBAAkBhxE,EAAmBkE,MACrC+E,KAAMjJ,EAAmBkE,MACzBgF,KAAMlJ,EAAmBkE,MACzBiF,KAAMnJ,EAAmBkE,MACzBkF,KAAMpJ,EAAmBkE,MACzBguE,iBAAkB,IAAIlyE,EAAmBiF,MAAMjF,EAAmB+D,OAAQ,oBAC1EwV,aAAc,IAAIvZ,EAAmBiF,MAAMjF,EAAmB6E,MAAO7E,EAAmB+D,QACxF8E,MAAO,IAAI7I,EAAmBiF,MAAMjF,EAAmB6E,MAAO,GAC9Du3E,QAAS,IAAIp8E,EAAmBiF,MAAMi3E,GAA6B,GACnEG,QAAS,IAAIr8E,EAAmBiF,MAAMi3E,GAA6B,KAEvE,MAAMI,GACF,aAAa1N,EAAMr1D,EAAe,IAC9B,IAAI24D,EAAmB,GACnBkK,EAAU,GACVC,EAAU,GACVxzE,EAAQ,GACRgpE,EAAO,EACP0K,EAAQ,EAAGC,EAAQ,EAAGC,EAAW,EACjCC,EAAa,EACjB,IAAI,IAAIt6E,EAAI,EAAGA,EAAIwsE,EAAK3B,SAAS5qE,OAAQD,IAAI,CACzC,IAAImsC,EAAIqgC,EAAK3B,SAAS7qE,GACtB,IAAI,IAAI4+D,EAAI,EAAGA,EAAIzyB,EAAEhrC,KAAKlB,OAAQ2+D,GAAK,EAAE,CACrC,IAAI9yB,EAAIK,EAAEhrC,KAAKy9D,GACXrwB,EAAIpC,EAAEhrC,KAAKy9D,EAAI,GACfoR,EAAO,EAIX,GAAkB,qBAAd7jC,EAAE4+B,SAAwC,IAANnM,EAAS,CAC7C,IAAI9J,EAAO0X,EAAK3B,SAAS7qE,EAAI,GAC7B,GAAI80D,GAAyB,qBAAjBA,EAAKiW,QAAgC,CAC7C,IAAIsG,GAAQ8I,EAAQrlB,EAAK3zD,KAAK,IAAM,EAChCmwE,GAAQ8I,EAAQtlB,EAAK3zD,KAAK,IAAM,EACpC,GAAI2qC,IAAMulC,GAAQ9iC,IAAM+iC,EAAM,UAIlB,qBAAdnlC,EAAE4+B,SAAwC,IAANnM,IAAUoR,GAtD7B,GAuDvBA,EAAOlvE,KAAKy5E,aAAazuC,EAAGquC,EAAOH,EAAShK,EAtDf,EAGR,IAoDrBA,EAAOlvE,KAAKy5E,aAAahsC,EAAG6rC,EAAOH,EAASjK,EAtDf,EAGR,IAoDjBA,IAASqK,GAAY5K,EAAO,KAC5BhpE,EAAMA,EAAMxG,OAAS,IAvDJ,EAwDjBwvE,MAEIA,EAAO,IACPhpE,EAAM5G,KAAK4vE,GACXA,EAAO,GAEXhpE,EAAM5G,KAAKmwE,GACXqK,EAAWrK,GAEfmK,EAAQruC,EACRsuC,EAAQ7rC,EACR+rC,IAEc,cAAdnuC,EAAE4+B,SAAyB+E,EAAiBjwE,KAAKy6E,EAAa,GAGlE9N,EAAK3B,SAAS5qE,OAAS,GAAyD,cAApDusE,EAAK3B,SAAS2B,EAAK3B,SAAS5qE,OAAS,GAAG8qE,SAAyB+E,EAAiBjwE,KAAKy6E,EAAa,GACpI,IAAI/hC,EAAOi0B,EAAKj0B,KACZ5Q,EAAO,CACPinC,iBAAkBkB,EAAiB7vE,OACnC4G,KAAM0xC,EAAK5K,KACX7mC,KAAMyxC,EAAKpK,KACXpnC,KAAMwxC,EAAKrK,KACXlnC,KAAMuxC,EAAKnK,KACX0hC,iBAAkBA,EAClB34D,aAAcA,EACd1Q,MAAOA,EACPuzE,QAASA,EACTC,QAASA,GAETzmE,EAAOumE,GAA2BvmE,KAAKm0B,GACvCsE,EAAO,EAAIz4B,EAAO,EAClBR,EAAS,IAAIpV,EAAmB48E,aAAahnE,EAAOy4B,GAIxD,OAHA8tC,GAA2BjhE,OAAO9F,EAAQ20B,GAE7B,IAATsE,GAAYj5B,EAAOy7D,KAAK,EAAGxiC,GACxBj5B,EAAOlT,OAElB,aAAac,EAAO0sD,EAAMuiB,EAAQG,EAAMyK,EAAWC,GAC/C,IAAIC,EAAO/5E,EAAQ0sD,EAUnB,OATI1sD,IAAU0sD,EAAM0iB,GAAQ0K,IAEnB,KAAOC,GAAQA,GAAQ,MACxB3K,GAAQyK,EACJE,EAAO,EAAGA,GAAQA,EACjB3K,GAAQ0K,GAEjB7K,EAAOhwE,KAAK86E,IAET3K,GAKf,MAAM4K,WAAqDhB,GACvD,UAAU3yD,GACN,IAAIF,EAAQjmB,KAAKX,KAAKgtD,SAASlmC,GAC3B0gB,EAAO5gB,EAAM4pD,UAEbkK,EAAY/5E,KAAKX,KAAKsnC,KAAK3wB,QAAQmQ,GACnC6zD,EAAah6E,KAAKX,KAAKsnC,KAAK3wB,QAAQmQ,EAAM,GAC1CjU,EAASlS,KAAKX,KAAKovE,gBAAgB,QACvCv8D,EAAOmF,KAAO0iE,EACd,IAAI/6E,EAASkT,EAAOgU,WAAW8zD,EAAaD,GAE5C,GAAIlzC,GAAQA,EAAKinC,iBAAmB,EAAG,CACnC9uE,EAAS,IAAI8K,WAAW9K,GACxB,IAAIi7E,EAAO,IAAIC,SAASl7E,EAAOA,QAC/B,IAAK,IAAIq1D,KAAaxtB,EAAKte,WACvBpC,EAAMnmB,KAAK+4E,aAAa1kB,EAAU/yD,SAClC24E,EAAKE,UAAU9lB,EAAUh9C,IAAK8O,QAE3B0gB,GAAQ7mC,KAAKX,KAAK41D,sBAC7Bj2D,EAASgB,KAAKo6E,aAAaC,aAAap0D,EAAMylD,KAAM7kC,EAAKxwB,eAQzD,OAPArW,KAAK6mC,KAAK9nC,KAAKC,GACfgB,KAAK2mC,KAAK3wB,QAAQjX,KAAKiB,KAAK0X,QAC5B1X,KAAKwmC,KAAK9+B,QAAQ3I,KAAK,CACnBwI,QAAS0e,EAAMkyC,aACf3wD,QAASye,EAAMqnD,cAAcV,cAEjC5sE,KAAK0X,QAAU1Y,EAAOG,OACfa,KAAK6mC,KAAK1nC,OAAS,EAE9B,SAMIa,KAAK6mC,KAAO,GACZ7mC,KAAK0X,OAAS,EACd1X,KAAK2mC,KAAO,CACR3wB,QAAS,GACT7Q,QAASnF,KAAKX,KAAKsnC,KAAKxhC,SAE5BnF,KAAKwmC,KAAO,CACR9+B,QAAS,GACTG,SAAU,IAKd,IAAI3I,EAAI,EACR,KAAMA,EAAIc,KAAKsd,OAAOne,QAAOa,KAAKs6E,UAAUt6E,KAAKsd,OAAOpe,MACxD,IAAI4I,EAAY3J,EAAuBd,EAA5B,CAA4C2C,KAAKX,KAAKyI,MACjEA,EAAKC,UAAY/H,KAAK6mC,KAAK1nC,OAC3Ba,KAAK2mC,KAAK3wB,QAAQjX,KAAKiB,KAAK0X,QAC5B,IAAI6uB,EAAYpoC,EAAuBd,EAA5B,CAA4C2C,KAAKX,KAAKknC,MACjEA,EAAKhgC,iBAAmBvG,KAAK2mC,KAAKxhC,QAClC,IAAIyC,EAAYzJ,EAAuBd,EAA5B,CAA4C2C,KAAKX,KAAKuI,MAwBjE,OAvBAA,EAAKP,gBAAkBrH,KAAKwmC,KAAK9+B,QAAQvI,OAuB9BkqC,GAA0CkxC,SAAS,CAC1Dl1E,OAAQ,CACJkhC,KAAMA,EACN3+B,KAAMA,EACN++B,KAAM3mC,KAAK2mC,KACX7+B,KAAMA,EACN,OAAQ9H,KAAKX,KAAK,QAClBunC,KAAM5mC,KAAKX,KAAKunC,KAChBC,KAAM7mC,KAAK6mC,KACXL,KAAMxmC,KAAKwmC,KACXE,KAAM1mC,KAAKX,KAAKqnC,QAI5B,YAAYrnC,GACRqb,MAAMrb,GACNW,KAAKo6E,aAAe,IAAQhB,IASpC,MAAMoB,WAAqD1B,GACvD,oBACI94E,KAAKy6E,YAAc,GACnB,IAAInJ,EAAS,GACb,IAAK,IAAInrD,KAAOnmB,KAAKsd,OAAO,CACxBtd,KAAKy6E,YAAY17E,KAAKiB,KAAK4wE,IAAI8J,cAAcv0D,IAC7C,IAAIF,EAAQjmB,KAAKX,KAAKgtD,SAASlmC,GACpBF,EAAMylD,KACjB,IAAI,IAAI0G,KAAQnsD,EAAMmrD,YAAYE,EAAOc,IAAQ,EAErDpyE,KAAKsxE,OAAStxE,KAAK26E,YAAY36E,KAAK4wE,IAAIprD,gBAAiB8rD,GAE7D,YAAYK,EAAOiJ,GACf,IAAIlxE,EAAM,GACV,IAAI,IAAIxK,EAAI,EAAGA,EAAIyyE,EAAMxyE,OAAQD,IAAI,CACjC,IAAIkzE,EAAOT,EAAMzyE,GACb07E,EAAK17E,IACLc,KAAK4wE,IAAI1+D,OAAOmF,IAAM+6D,EAAK16D,OAC3BhO,EAAI3K,KAAKiB,KAAK4wE,IAAI1+D,OAAOgU,WAAWksD,EAAKjzE,UACtCuK,EAAI3K,KAAK,IAAI+K,WAAW,CAC3B,MAGR,OAAOJ,EAEX,eAAe+b,GACXA,EAAQiB,QAAU,GAClBjB,EAAQY,SAAW,CACflhB,QAAS,EACTuf,IAAK,IAET,IAAIm2D,EAAW,GACXC,EAAa,GACbC,EAAY,GAChB,IAAK,IAAI50D,KAAOnmB,KAAKsd,OAAO,CACxB,IAAIiH,EAAKvkB,KAAK4wE,IAAInqD,WAAWN,GAC7B,GAAU,MAAN5B,EAAY,SACXs2D,EAASt2D,KACVkB,EAAQiB,QAAQ3nB,KAAKlB,OAAO6gC,OAAO,GAAI1+B,KAAK4wE,IAAInrD,QAAQiB,QAAQnC,KAChEu2D,EAAW/7E,KAAK,IAChBg8E,EAAUx2D,GAAMkB,EAAQiB,QAAQvnB,OAAS,GAE7C07E,EAASt2D,IAAM,EACfkB,EAAQY,SAAS3B,IAAI3lB,KAAKg8E,EAAUx2D,IACpC,IAAI0B,EAAQjmB,KAAKX,KAAKgtD,SAASlmC,GACpBF,EAAMylD,KACjB,IAAI,IAAI0G,KAAQnsD,EAAMorD,WAAWyJ,EAAWC,EAAUx2D,IAAK6tD,IAAQ,EAEvE,IAAI,IAAIlzE,EAAI,EAAGA,EAAIumB,EAAQiB,QAAQvnB,OAAQD,IAAI,CAC3C,IAAI4a,EAAO2L,EAAQiB,QAAQxnB,UACpB4a,EAAKkhE,SACRlhE,EAAK6M,SAAW7M,EAAK6M,QAAQirD,QAC7B93D,EAAK6M,QAAU9oB,OAAO6gC,OAAO,GAAI5kB,EAAK6M,SACtC7M,EAAK6M,QAAQirD,MAAQ5xE,KAAK26E,YAAY7gE,EAAK6M,QAAQirD,MAAOkJ,EAAW57E,MAKjF,kBAAkBumB,GACd,IAAIq1D,EAAa,GACjB,IAAK,IAAI30D,KAAOnmB,KAAKsd,OAAO,CACxB,IAAI2I,EAAQjmB,KAAKX,KAAKgtD,SAASlmC,GACpBF,EAAMylD,KACjB,IAAI,IAAI0G,KAAQnsD,EAAMorD,WAAWyJ,EAAW1I,IAAQ,EAExD,IAAIX,EAAc5zE,OAAO6gC,OAAO,GAAI1+B,KAAK4wE,IAAInrD,QAAQkB,SAOrD,OANI3mB,KAAK4wE,IAAInrD,QAAQkB,SAAW3mB,KAAK4wE,IAAInrD,QAAQkB,QAAQirD,QAAOH,EAAYG,MAAQ5xE,KAAK26E,YAAY36E,KAAK4wE,IAAInrD,QAAQkB,QAAQirD,MAAOkJ,IACrIr1D,EAAQiB,QAAU,CACd,CACIC,QAAS8qD,IAGVhsD,EAAQY,SAAW,CACtBlhB,QAAS,EACT4e,QAAS,EACTC,OAAQ,CACJ,CACIP,MAAO,EACPc,GAAI,IAGZI,SAAU3kB,KAAKy6E,YAAYt7E,QAGnC,UAAU+R,GACN,OAAKA,GACAlR,KAAK4uD,UAAS5uD,KAAK4uD,QAAU,IAClC5uD,KAAK4uD,QAAQ7vD,KAAKmS,GACP8J,GAA0C7b,OAASa,KAAK4uD,QAAQzvD,OAAS,GAHhE,KAKxB,SACIa,KAAKi7E,oBACL,IAAI70D,EAAU,CACVjhB,QAASnF,KAAKy6E,YAAYt7E,OAAS,IAAM,EAAI,EAC7C6kB,OAAQ,CACJ,CACIP,MAAO,EACPC,MAAO1jB,KAAKy6E,YAAYt7E,OAAS,KAIzCsmB,EAAU5nB,OAAO6gC,OAAO,GAAI1+B,KAAK4wE,IAAInrD,SACzCA,EAAQkB,QAAU,KAClBlB,EAAQW,QAAUA,EAClBX,EAAQy1D,SAAW,KACnBz1D,EAAQpB,YAAcrkB,KAAKy6E,YAC3B,IAAK,IAAIn6E,IAAO,CACZ,UACA,SACA,YACA,WACA,aACA,SACA,aACA,eACA,YACFmlB,EAAQnlB,GAAON,KAAKm7E,UAAUn7E,KAAK4wE,IAAI1/D,OAAOuU,EAAQnlB,KACxDmlB,EAAQI,IAAM,CACV7lB,KAAKm7E,UAAU,SACfn7E,KAAKm7E,UAAU,YACf,GAEJ11D,EAAQ21D,SAAWp7E,KAAKy6E,YAAYt7E,OAChCa,KAAK4wE,IAAIhrD,UAAW5lB,KAAKq7E,eAAe51D,GACvCzlB,KAAKs7E,kBAAkB71D,GAC5B,IAAIE,EAAM,CACNxgB,QAAS,EACT2R,QAAS9W,KAAK4wE,IAAI95D,QAClBK,QAAS,EACTvE,OAAQ5S,KAAK4wE,IAAIh+D,OACjByS,UAAW,CACPrlB,KAAK4wE,IAAI3xE,gBAEbqmB,aAAc,CACVG,GAEJF,YAAavlB,KAAK4uD,QAClBppC,gBAAiBxlB,KAAKsxE,QAE1B,OAAWnsD,GAA0Co1D,SAAS50D,GAElE,YAAYtmB,GAGR,GAFAqb,MAAMrb,GACNW,KAAK4wE,IAAM5wE,KAAKX,KAAK,SAChBW,KAAK4wE,IAAK,MAAM,IAAIpxE,MAAM,mBAOvC,MAAM+7E,GACF,aAAav8E,GACT,IAAIF,EAAa6qC,GAA2C5/B,OAAO/K,EAAOkqD,MAAM,EAAG,IACnF,MAAkB,SAAXpqD,GAAgC,SAAXA,GAAqBA,IAAWqS,OAAOo8D,aAAa,EAAG,EAAG,EAAG,GAE7F,mBAAmB9tE,EAAO,MACtBO,KAAKw7E,gBAAkB/7E,EAE3B,UAAUuF,GACN,KAAMA,EAAMyM,OAAOzR,KAAKy7E,SAAU,IAC9Bz7E,KAAKy7E,QAAQz2E,EAAMyM,KAAOzR,KAAK07E,aAAa12E,GAC9C,MAAOvH,GACDe,IACAm9E,QAAQC,MAAM,wBAAwB52E,EAAMyM,KAC5CkqE,QAAQC,MAAMn+E,EAAE6vD,QAGxB,OAAOttD,KAAKy7E,QAAQz2E,EAAMyM,KAE9B,gBAAgBA,GACZ,IAAIzM,EAAQhF,KAAKiwE,UAAU5qE,OAAOoM,GAClC,OAAIzM,GACAhF,KAAKkS,OAAOmF,IAAMrS,EAAM0S,OACjB1X,KAAKkS,QAET,KAEX,mBACI,OAAOlS,KAAKiwE,UAAgB5mC,GAA0Ct/B,OAAO/J,KAAKkS,OAAQ,CACtFwH,aAAc,IAGtB,aAAa1U,GACT,IAAIqS,EAAMrX,KAAKkS,OAAOmF,IAClBnF,EAASlS,KAAKyuE,gBAAgBzpE,EAAMyM,KACpCjR,EAAa6lC,GAA0CrhC,EAAMyM,KAAK1H,OAAOmI,EAAQlS,KAAMgF,EAAM7F,QAEjG,OADAa,KAAKkS,OAAOmF,IAAMA,EACX7W,EAMT,QAAQF,EAAKb,EAAOO,KAAKw7E,iBAAmB78E,GAC1C,IAAIwT,EAASnS,KAAK29B,MAAQ39B,KAAK29B,KAAK/rB,QAAQtR,GAC5C,OAAI6R,IACGA,EAAO1S,IAAS0S,EAAOnS,KAAKw7E,kBAAoBrpE,EAAOxT,IAA8CwT,EAAW,IAAKA,EAAOtU,OAAOywD,KAAKn8C,GAAQ,MAEhJ,KAKT,qBACE,OAAOnS,KAAK67E,QAAQ,kBAKtB,eACE,OAAO77E,KAAK67E,QAAQ,YAKtB,iBACE,OAAO77E,KAAK67E,QAAQ,cAKtB,oBACE,OAAO77E,KAAK67E,QAAQ,iBAKtB,gBACE,OAAO77E,KAAK67E,QAAQ,aAKtB,cACE,OAAO77E,KAAK67E,QAAQ,WAKtB,aACE,OAAO77E,KAAK4H,KAAKlB,OAKnB,cACE,OAAO1G,KAAK4H,KAAKjB,QAKnB,cACE,OAAO3G,KAAK4H,KAAKhB,QAKnB,wBACE,OAAO5G,KAAKymC,KAAKpxB,kBAKnB,yBACE,OAAOrV,KAAKymC,KAAKnxB,mBAKnB,kBACE,OAAOtV,KAAKymC,KAAKrxB,YAMnB,gBACE,IAAI43D,EAAMhtE,KAAK,QACf,OAAOgtE,EAAMA,EAAIv4D,UAAYzU,KAAK0G,OAMpC,cACE,IAAIsmE,EAAMhtE,KAAK,QACf,OAAOgtE,EAAMA,EAAIx4D,QAAU,EAK7B,gBACE,OAAOxU,KAAK8H,KAAKC,UAKnB,iBACE,OAAO/H,KAAKumC,KAAK3gC,WAKnB,WACE,OAAO/H,OAAOysE,OAAO,IAAQ98B,GAA0CxtC,KAAKumC,KAAKxgC,KAAM/F,KAAKumC,KAAKvgC,KAAMhG,KAAKumC,KAAKtgC,KAAMjG,KAAKumC,KAAKrgC,OAErI,qBACI,OAAO,IAAQokC,GAA0CtqC,KAAKsmC,MAKhE,mBACE,OAAOtmC,KAAK6uD,eAAeitB,kBAO7B,qBAAqBvuC,GACnB,QAASvtC,KAAK6uD,eAAetE,OAAOhd,GAQtC,kBAAkBA,GAChB,OAAOvtC,KAAKqsD,SAASrsD,KAAK6uD,eAAetE,OAAOhd,GAAY,CACxDA,IAWN,gBAAgBr8B,GACd,IAAIoM,EAAS,GACTpD,EAAMhJ,EAAO/R,OACb+yD,EAAM,EACN1F,GAAQ,EACR9B,GAAS,EACb,KAAMwH,GAAOh4C,GAAI,CACb,IAAI69B,EAAO,EACPgkC,EAAY,EAChB,GAAI7pB,EAAMh4C,EAAK,CAGX,GADA69B,EAAO7mC,EAAOvH,WAAWuoD,KACrB,OAAUna,GAAQA,GAAQ,OAAUma,EAAMh4C,EAAK,CAC/C,IAAI85C,EAAO9iD,EAAOvH,WAAWuoD,GACzB,OAAU8B,GAAQA,GAAQ,QAC1B9B,IACAna,IAAgB,KAAPA,IAAiB,KAAc,KAAPic,GAAgB,OAIzD+nB,EAAY,OAAUhkC,GAAQA,GAAQ,OAAU,QAAWA,GAAQA,GAAQ,OAAU,EAAI,OACtFma,IACO,IAAVxH,GAA6B,IAAdqxB,EACnBz+D,EAAOve,KAAKiB,KAAKqsD,SAASrsD,KAAK6uD,eAAetE,OAAOiC,EAAMzU,GAAO,CAC9DyU,EACAzU,KAEe,IAAV2S,GAA6B,IAAdqxB,GACxBz+D,EAAOve,KAAKiB,KAAKo3D,kBAAkB5K,IACnCA,EAAOzU,EACP2S,EAAQqxB,EAEZ,OAAOz+D,EAEX,oBACI,OAAO,IAAQ6qD,GAA0CnoE,MAW3D,OAAOkR,EAAQy/C,EAAc90C,EAAQnZ,EAAUi1C,GAC7C,OAAO33C,KAAKk9D,cAAc8e,OAAO9qE,EAAQy/C,EAAc90C,EAAQnZ,EAAUi1C,GAK3E,gBAAgBxxB,GACd,OAAOnmB,KAAKk9D,cAAcoM,gBAAgBnjD,GAS5C,wBACE,OAAOnmB,KAAKk9D,cAAcmM,uBAE9B,qBAAqBxtD,EAAQnZ,GACzB,OAAO1C,KAAKk9D,cAAcmM,qBAAqBxtD,EAAQnZ,GAE3D,cAAcujB,EAAO6+C,EAAa,IAK9B,OAJK9kE,KAAKi8E,QAAQh2D,KACVjmB,KAAKiwE,UAAU5qE,OAAOwhC,KAAM7mC,KAAKi8E,QAAQh2D,GAAS,IAAQsoD,GAA0CtoD,EAAO6+C,EAAY9kE,OAClHA,KAAKiwE,UAAU5qE,OAAO,SAAWrF,KAAKiwE,UAAU5qE,OAAOqrE,QAAM1wE,KAAKi8E,QAAQh2D,GAAS,IAAQwqD,GAA0CxqD,EAAO6+C,EAAY9kE,QAE9JA,KAAKi8E,QAAQh2D,IAAU,KAUhC,SAASA,EAAO6+C,EAAa,IAM3B,OALK9kE,KAAKi8E,QAAQh2D,KACVjmB,KAAKiwE,UAAU5qE,OAAO4hC,KAAMjnC,KAAKi8E,QAAQh2D,GAAS,IAAQkuD,GAA0CluD,EAAO6+C,EAAY9kE,MAClHA,KAAKiwE,UAAU5qE,OAAO6hC,MAAQlnC,KAAKiwE,UAAU5qE,OAAO8hC,KAAMnnC,KAAKi8E,QAAQh2D,GAAS,IAAQ0uD,GAA0C1uD,EAAO6+C,EAAY9kE,MACzJA,KAAKi1E,cAAchvD,EAAO6+C,IAE5B9kE,KAAKi8E,QAAQh2D,IAAU,KAKhC,eACE,OAAIjmB,KAAKiwE,UAAU5qE,OAAO,QAAgB,IAAQm1E,GAA0Cx6E,MACrF,IAAQ85E,GAA0C95E,MAQ3D,oBACE,IAAI0J,EAAM,GACV,IAAK1J,KAAKqoC,KAAM,OAAO3+B,EACvB,IAAK,IAAIy3B,KAAQnhC,KAAKqoC,KAAKlH,KAAKz3B,EAAIy3B,EAAKb,QAAQ47C,QAAU,CACvDv+C,KAAMwD,EAAKxD,KAAKlrB,GAChB+2B,IAAKrI,EAAKZ,SACVjiC,QAAS6iC,EAAKX,aACdt9B,IAAKi+B,EAAKV,UAEd,OAAO/2B,EAQT,sBACE,IAAIA,EAAM,GACV,IAAK1J,KAAKqoC,KAAM,OAAO3+B,EACvB,IAAK,IAAI03B,KAAYphC,KAAKqoC,KAAKjH,SAAS,CACpC,IAAI+6C,EAAW,GACf,IAAI,IAAIj9E,EAAI,EAAGA,EAAIc,KAAKqoC,KAAKlH,KAAKhiC,OAAQD,IAAI,CAE1Ci9E,EADWn8E,KAAKqoC,KAAKlH,KAAKjiC,GACZohC,QAAQ47C,QAAU96C,EAAST,MAAMzhC,GAEnDwK,EAAI03B,EAASzD,KAAKlrB,IAAM0pE,EAE5B,OAAOzyE,EAST,aAAayyE,GACX,IAAMn8E,KAAKiwE,UAAU5qE,OAAOgjC,QAASroC,KAAKiwE,UAAU5qE,OAAOijC,MAAQtoC,KAAKiwE,UAAU5qE,OAAOwhC,MAAQ7mC,KAAKiwE,UAAU5qE,OAAOqrE,MAAQ,MAAM,IAAIlxE,MAAM,2EAE/I,GADwB,iBAAb28E,IAAuBA,EAAWn8E,KAAKo8E,gBAAgBD,IAC1C,iBAAbA,EAAuB,MAAM,IAAI38E,MAAM,0EAElD,IAAI2zD,EAASnzD,KAAKqoC,KAAKlH,KAAKlrB,IAAI,CAACkrB,EAAMjiC,KACnC,IAAIohC,EAAUa,EAAKb,QAAQ47C,OAC3B,OAAI57C,KAAW67C,EAAiBl5E,KAAKC,IAAIi+B,EAAKZ,SAAUt9B,KAAKumC,IAAIrI,EAAKV,SAAU07C,EAAS77C,KAC7Ea,EAAKX,eAEjBtuB,EAAS,IAAIpV,EAAmBwC,aAAaU,KAAKkS,OAAOlT,QAC7DkT,EAAOmF,IAAMrX,KAAKq8E,cAClB,IAAIh9E,EAAO,IAAIk8E,GAAyCrpE,EAAQihD,GAEhE,OADA9zD,EAAKo8E,QAAUz7E,KAAKy7E,QACbp8E,EAEX,0BACI,IAAKW,KAAKqoC,KAAM,OAAO,KACvB,IAAIi0C,EAAkBt8E,KAAKs8E,gBAE3B,OAAKA,GAAoBt8E,KAAK0wE,MACzB4L,IAAiBA,EAAkBt8E,KAAKqoC,KAAKlH,KAAKlrB,IAAKkrB,GAAOA,EAAKX,eACjE,IAAQ20C,GAA0Cn1E,KAAMs8E,IAFpB,KAK/C,QAAQ3+C,GACJ,OAAO39B,KAAKu8E,aAAa5+C,GAE7B,YAAYzrB,EAAQoqE,EAAkB,MAC7Bn+E,EAAuBpB,EAA5B,CAAsEiD,KAAM,OAAQ,OACpFA,KAAKw7E,gBAAkB,KACvBx7E,KAAKkS,OAASA,EACdlS,KAAKs8E,gBAAkBA,EACvBt8E,KAAKq8E,cAAgBr8E,KAAKkS,OAAOmF,IACjCrX,KAAKy7E,QAAU,GACfz7E,KAAKi8E,QAAU,GACfj8E,KAAKw8E,mBAEL,IAAI,IAAI/qE,KAAOzR,KAAKiwE,UAAU5qE,OAAO,CACjC,IAAIL,EAAQhF,KAAKiwE,UAAU5qE,OAAOoM,GAC1B40B,GAA0C50B,IAAQzM,EAAM7F,OAAS,GAAGtB,OAAOC,eAAekC,KAAMyR,EAAK,CACzG1T,IAAKiC,KAAKy8E,UAAUhvB,KAAKztD,KAAMgF,OAK1C7G,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL67E,GAAyC/vC,UAAW,OAAQ,MAC1DrtC,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL67E,GAAyC/vC,UAAW,iBAAkB,MACpErtC,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL67E,GAAyC/vC,UAAW,eAAgB,MAClErtC,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL67E,GAAyC/vC,UAAW,gBAAiB,MACnErtC,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL67E,GAAyC/vC,UAAW,gBAAiB,MACnErtC,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL67E,GAAyC/vC,UAAW,kBAAmB,MACrErtC,EAAuBnB,EAA5B,CAAkE,CAC1D0C,GACL67E,GAAyC/vC,UAAW,sBAAuB,MAO9E,IAAIkxC,GAA2C,IAAI5/E,EAAmB6D,OAAO,CACzE8Q,IAAK,IAAI3U,EAAmBqU,OAAO,GACnCuG,OAAQ,IAAI5a,EAAmBsF,QAAQtF,EAAmBsE,OAAQ,OAAQ,CACtEiB,KAAM,WAEVs6E,WAAY7/E,EAAmBsE,OAC/BjC,OAAQrC,EAAmBsE,OAC3Bw7E,aAAc9/E,EAAmBsE,SAEjCy7E,GAAsC,IAAI//E,EAAmB6D,OAAO,CACpE8Q,IAAK,IAAI3U,EAAmBqU,OAAO,GACnC2rE,OAAQhgF,EAAmBsE,OAC3BjC,OAAQrC,EAAmBsE,OAC3BynC,UAAW/rC,EAAmB+D,OAC9BsD,SAAU,IAAIrH,EAAmB+G,SAAS/G,EAAmB+D,QAC7Dk8E,cAAejgF,EAAmBsE,OAClC4hB,aAAclmB,EAAmB+D,OACjCoiB,aAAcnmB,EAAmB+D,OACjCm8E,WAAYlgF,EAAmBsE,OAC/B67E,WAAYngF,EAAmBsE,OAC/B87E,eAAgBpgF,EAAmBsE,OACnC+7E,WAAYrgF,EAAmBsE,OAC/Bg8E,WAAYtgF,EAAmBsE,OAC/BiE,OAAQ,IAAIvI,EAAmBiF,MAAM26E,GAA0C,eAEnFG,GAAoC5qE,QAAU,WAC1C,IAAIorE,EAAU,GACd,IAAK,IAAIr4E,KAAShF,KAAKqF,OAAOg4E,EAAQr4E,EAAMyM,KAAOzM,EACnDhF,KAAKqF,OAASg4E,GAElB,IAAIC,GAA2CT,GA2C/C,MAAMU,WAAqDhP,GACvD,UAEI,OAAOvuE,KAAKy1D,MAAM+nB,mBAAmBx9E,KAAK2rC,IAE9C,WACI,OAAO3rC,KAAK0rE,KAAKj0B,KAErB,eAAep3C,GACXqa,SAASra,GACJlC,EAAuBpB,EAA5B,CAAsEiD,KAAM,OAAQ,UAM5F,MAAMy9E,GAAgC,CAClC,OAAQvrE,GACJ,IAAI1R,EAAS,EACTk3E,EAAW,CACX,EACA,EACA,EACA,EACA,GAEJ,IAAI,IAAI5Z,EAAI,EAAGA,EAAI4Z,EAASv4E,OAAQ2+D,IAAI,CACpC,IACI/lB,EAAO7lC,EAAOkF,YAElB,GAAa,WAAT5W,EAAqB,MAAM,IAAIhB,MAAM,YAEzC,GADAgB,EAASA,GAAU,EAAW,IAAPu3C,EACD,IAAV,IAAPA,GAAoB,OAAOv3C,EAEpC,MAAM,IAAIhB,MAAM,yBAGxB,IAAIk+E,GAAkC,CAClC,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAEAC,GAA4C,IAAI7gF,EAAmB6D,OAAO,CAC1EgF,MAAO7I,EAAmB6E,MAC1Bi8E,UAAW,IAAI9gF,EAAmBkgB,SAAS,IAAIlgB,EAAmBqU,OAAO,GAAKnO,GAAyB,KAAV,GAAVA,EAAE2C,QACrF8L,IAAMzO,GAAIA,EAAE46E,WAAaF,GAA0C,GAAV16E,EAAE2C,OAC3DxG,OAAQs+E,GACRI,iBAAmB76E,GAAIA,EAAE2C,QAAU,EAAI,EACvCm4E,YAAc96E,GAAc,SAAVA,EAAEyO,KAA4B,SAAVzO,EAAEyO,IAAwC,IAAvBzO,EAAE66E,iBAAgD,IAAvB76E,EAAE66E,iBACtFE,gBAAiB,IAAIjhF,EAAmBkgB,SAASygE,GAAgCz6E,GAAIA,EAAE86E,eAEvFE,GAAuC,IAAIlhF,EAAmB6D,OAAO,CACrE8Q,IAAK,IAAI3U,EAAmBqU,OAAO,GACnC2rE,OAAQhgF,EAAmBsE,OAC3BjC,OAAQrC,EAAmBsE,OAC3BynC,UAAW/rC,EAAmB+D,OAC9BsD,SAAU,IAAIrH,EAAmB+G,SAAS/G,EAAmB+D,QAC7Dk8E,cAAejgF,EAAmBsE,OAClC68E,oBAAqBnhF,EAAmBsE,OACxC4hB,aAAclmB,EAAmB+D,OACjCoiB,aAAcnmB,EAAmB+D,OACjCm8E,WAAYlgF,EAAmBsE,OAC/B67E,WAAYngF,EAAmBsE,OAC/B87E,eAAgBpgF,EAAmBsE,OACnC+7E,WAAYrgF,EAAmBsE,OAC/Bg8E,WAAYtgF,EAAmBsE,OAC/BiE,OAAQ,IAAIvI,EAAmBiF,MAAM47E,GAA2C,eAEpFK,GAAqC/rE,QAAU,WAC3C,IAAI5M,EAAS,GACb,IAAI,IAAInG,EAAI,EAAGA,EAAIc,KAAKqF,OAAOlG,OAAQD,IAAI,CACvC,IAAI8F,EAAQhF,KAAKqF,OAAOnG,GACxBmG,EAAOL,EAAMyM,KAAOzM,EAExB,OAAOhF,KAAKqF,OAASA,GAEzB,IAAI64E,GAA2CF,GA+E/C,MAAMG,GACF,OAAOjsE,EAAQvK,GACX,OAAO,IAAI7K,EAAmBwC,aAAaU,KAAKo+E,KAAKr0E,OAAOmI,EAAQvK,IAExE,YAAYxI,GACRa,KAAKb,OAASA,EACda,KAAKo+E,KAAO,IAAIthF,EAAmB8Z,OAAOzX,IAIlD,IAAIk/E,GAAkC,IAAIvhF,EAAmB6D,OAAO,CAChEwE,QAASrI,EAAmBsE,OAC5B2G,UAAWjL,EAAmB+D,OAC9By9E,YAAaxhF,EAAmB+D,OAChC09E,mBAAoBzhF,EAAmBsE,OACvCo9E,kBAAmB1hF,EAAmBsE,OACtCq9E,eAAgB3hF,EAAmBsE,OACnCs9E,gBAAiB5hF,EAAmBsE,OACpCu9E,oBAAqB7hF,EAAmBsE,OACxCw9E,eAAgB9hF,EAAmBsE,OACnCy9E,sBAAuB/hF,EAAmBsE,OAC1C09E,UAAW,IAAIX,GAAgC,sBAC/ChI,QAAS,IAAIgI,GAAgC,qBAC7Cx4E,MAAO,IAAIw4E,GAAgC,kBAC3C7gE,OAAQ,IAAI6gE,GAAgC,mBAC5CY,WAAY,IAAIZ,GAAgC,uBAChDa,OAAQ,IAAIb,GAAgC,kBAC5C9nE,aAAc,IAAI8nE,GAAgC,2BAMtD,SAASc,GAAoC/sE,GACzC,IAAI6lC,EAAO7lC,EAAOkF,YAClB,OANoC,MAMhC2gC,EAAiD7lC,EAAO+E,eAJd,MAK1C8gC,EAA2D7lC,EAAOkF,YAJ9B,IAFM,MAO1C2gC,EAA2D7lC,EAAOkF,YAAc8nE,IAC7EnnC,EAEX,SAASonC,GAA+BjQ,EAAMkQ,GAC1C,OAAc,EAAPlQ,EAAWkQ,GAAWA,EAEjC,SAASC,GAAoC15E,EAAO2X,EAAQ64D,GACxD,IAAI1oC,EACAzC,EAAIyC,EAAI,EACR/jC,EAAM,GACV,IAAI,IAAIxK,EAAI,EAAGA,EAAIi3E,EAASj3E,IAAI,CAC5B,IAAIivE,EAAK,EAAGC,EAAK,EACbc,EAAOvpE,EAAMyR,YACb42D,IAAYkB,GAAQ,GAExB,GADAA,GAAQ,IACJA,EAAO,GACPf,EAAK,EACLC,EAAK+Q,GAA+BjQ,IAAe,GAAPA,IAAc,GAAK5xD,EAAOlG,kBACnE,GAAI83D,EAAO,GACdf,EAAKgR,GAA+BjQ,IAAQA,EAAO,GAAK,KAAO,GAAK5xD,EAAOlG,aAC3Eg3D,EAAK,OACF,GAAIc,EAAO,GAAI,CAGlBf,EAAKgR,GAA+BjQ,EAAM,GAAU,IAFhDoQ,EAAKpQ,EAAO,OACZ4E,EAAKx2D,EAAOlG,cACmD,IACnEg3D,EAAK+Q,GAA+BjQ,GAAQ,EAAG,IAAW,GAALoQ,IAAc,IAAW,GAALxL,SACtE,GAAI5E,EAAO,IAAK,CACnB,IAAIoQ,EACJnR,EAAKgR,GAA+BjQ,EAAM,IADtCoQ,EAAKpQ,EAAO,IACoC,IAAM,GAAK5xD,EAAOlG,aACtEg3D,EAAK+Q,GAA+BjQ,GAAQ,EAAG,GAAKoQ,EAAK,IAAM,GAAK,GAAKhiE,EAAOlG,kBAC7E,GAAI83D,EAAO,IAAK,CACnB,IAAI4E,EAAKx2D,EAAOlG,YAChB,IAAImoE,EAAKjiE,EAAOlG,YAChB+2D,EAAKgR,GAA+BjQ,GAAO4E,GAAM,IAAMyL,GAAM,IAC7DnR,EAAK+Q,GAA+BjQ,GAAQ,IAAU,GAALqQ,IAAc,GAAKjiE,EAAOlG,kBAE3E+2D,EAAKgR,GAA+BjQ,EAAM5xD,EAAOrG,gBACjDm3D,EAAK+Q,GAA+BjQ,GAAQ,EAAG5xD,EAAOrG,gBAE1D+zB,GAAKmjC,EACL1gC,GAAK2gC,EACL1kE,EAAI3K,KAAK,IAAQgvE,GAA2CC,GAAS,EAAOhjC,EAAGyC,IAEnF,OAAO/jC,EAUX,IAAI81E,GAAkC,IAAI1iF,EAAmB0F,gBAAgB1F,EAAmBsE,OAAQ,CACpG,MAAY,CACRq+E,SAAU3iF,EAAmBsE,OAC7B4U,QAAS,IAAIlZ,EAAmBiF,MAAMjF,EAAmBsE,OAAQ,aAErE,OAAY,CACRq+E,SAAU3iF,EAAmBsE,OAC7B4U,QAAS,IAAIlZ,EAAmBiF,MAAMjF,EAAmBsE,OAAQ,YACjEs+E,QAAS5iF,EAAmBsE,OAC5Bu+E,WAAY7iF,EAAmBsE,OAC/Bw+E,WAAY9iF,EAAmBsE,UAqCvC,IAAIy+E,GAAkC,IAAI/iF,EAAmBqU,OAAOrU,EAAmB6E,OAKnFm+E,IAJkC,IAAIhjF,EAAmB6D,OAAO,CAChEuZ,IAAKpd,EAAmBsE,OACxB2+E,IAAK,IAAIjjF,EAAmB8Z,OAAO,SAEP,IAAI9Z,EAAmB6D,OAAO,CAC1DgrC,GAAI7uC,EAAmB+D,OACvBm/E,WAAYljF,EAAmBkE,MAC/Bi/E,KAAMnjF,EAAmB6E,MACzBu+E,WAAYpjF,EAAmB2E,OAC/B0+E,OAAQrjF,EAAmBsE,UAE3Bg/E,GAA6B,IAAItjF,EAAmB6D,OAAO,CAC3Dg9B,KAAM,IAAI7gC,EAAmBqU,OAAO,GACpCkvE,aAAcvjF,EAAmB+D,OACjCy/E,QAAS,IAAIxjF,EAAmBsF,QAAQtF,EAAmB+D,OAAQ,IAAI/D,EAAmBiF,MAAM+9E,GAA4B98E,GAAIA,EAAEq9E,aAAe,GAAI,CACjJh+E,KAAM,aAGVk+E,GAAiC,IAAIzjF,EAAmB6D,OAAO,CAC/DxB,OAAQrC,EAAmB+D,OAC3B2/E,MAAO,IAAI1jF,EAAmBiF,MAAMq+E,GAA6Bp9E,GAAIA,EAAE7D,OAAS,KAEhFshF,GAAiC,IAAI3jF,EAAmB6D,OAAO,CAC/DwD,SAAU,IAAIrH,EAAmB+G,SAAS/G,EAAmB6E,MAAO,IACpE++E,SAAU,IAAI5jF,EAAmBsF,QAAQtF,EAAmB+D,OAAQ0/E,IACpEI,eAAgB,IAAI7jF,EAAmBsF,QAAQtF,EAAmB+D,OAAQ,UAE1E+/E,GAAoC,IAAI9jF,EAAmB6D,OAAO,CAClEu/E,WAAYpjF,EAAmBsE,OAC/B6U,IAAK,IAAInZ,EAAmBsF,QAAQtF,EAAmBsE,OAAQq/E,IAC/DI,WAAY/jF,EAAmBsE,OAC/B0/E,UAAWhkF,EAAmBsE,SA77ZlC,IAAgC2/E,GAAMC,GAg/ZlCviF,EAA8C88E,IAC9C98E,EAxdJ,cAA2D88E,GACvD,aAAav8E,GACT,MAAqF,SAA1E2qC,GAA2C5/B,OAAO/K,EAAOkqD,MAAM,EAAG,IAEjF,mBACIlpD,KAAKiwE,UAAgBqN,GAA0CvzE,OAAO/J,KAAKkS,OAAQ,CAC/EwH,aAAc,IAGtB,gBAAgBjI,GACZ,IAAIzM,EAAQhF,KAAKiwE,UAAU5qE,OAAOoM,GAClC,GAAIzM,EAAO,CAEP,GADAhF,KAAKkS,OAAOmF,IAAMrS,EAAM0S,OACpB1S,EAAM23E,WAAa33E,EAAM7F,OAAQ,CACjCa,KAAKkS,OAAOmF,KAAO,EACnB,IAAI4pE,EAAY,IAAIn3E,WAAW9E,EAAM7F,QACjC4gF,EAAW5hF,EAAuBb,EAA5B,CAAkD0C,KAAKkS,OAAOgU,WAAWlhB,EAAM23E,WAAa,GAAIsE,GAC1G,OAAO,IAAInkF,EAAmBwC,aAAaygF,GACxC,OAAO//E,KAAKkS,OAEvB,OAAO,KAEX,eAAe7R,GACXqa,SAASra,GACJlC,EAAuBpB,EAA5B,CAAsEiD,KAAM,OAAQ,WAicxFvB,EAzSJ,cAA2D88E,GACvD,aAAav8E,GACT,MAAqF,SAA1E2qC,GAA2C5/B,OAAO/K,EAAOkqD,MAAM,EAAG,IAEjF,mBACIlpD,KAAKiwE,UAAgBiO,GAA0Cn0E,OAAO/J,KAAKkS,QAC3ElS,KAAKkhF,SAAWlhF,KAAKkS,OAAOmF,IAEhC,cAEI,IAAKrX,KAAKmhF,cAAe,CACrBnhF,KAAKkS,OAAOmF,IAAMrX,KAAKkhF,SACvB,IAAIliF,EAASgB,KAAKkS,OAAOgU,WAAWlmB,KAAKiwE,UAAUgO,qBAC/CmD,EAAmB,EACvB,IAAI,IAAI3vE,KAAOzR,KAAKiwE,UAAU5qE,OAAO,CACjC,IAAIoxB,EAAQz2B,KAAKiwE,UAAU5qE,OAAOoM,GAClCglB,EAAM/e,OAAS0pE,EACfA,GAA6C,MAAzB3qD,EAAMsnD,gBAA0BtnD,EAAMsnD,gBAAkBtnD,EAAMt3B,OAEtF,IAAIkiF,EAAoBljF,EAAuBZ,EAA5B,CAAyDyB,EAAQoiF,GACpF,IAAKC,EAAc,MAAM,IAAI7hF,MAAM,2CACnCQ,KAAKkS,OAAS,IAAIpV,EAAmBwC,aAAa+hF,GAClDrhF,KAAKmhF,eAAgB,GAG7B,aAAan8E,GAET,OADAhF,KAAKshF,cACE5mE,MAAMghE,aAAa12E,GAI9B,cAAcihB,EAAO6+C,EAAa,IAC9B,IAAK9kE,KAAKi8E,QAAQh2D,GACd,OAAIjmB,KAAKiwE,UAAU5qE,OAAOwhC,MAAQ7mC,KAAKiwE,UAAU5qE,OAAOwhC,KAAKi3C,aACpD99E,KAAKw9E,oBAAoBx9E,KAAKuhF,sBAC5BvhF,KAAKi8E,QAAQh2D,GAAS,IAAQs3D,GAA0Ct3D,EAAO6+C,EAAY9kE,OACxF0a,MAAMu6D,cAAchvD,EAAO6+C,GAGjD,sBACI9kE,KAAKshF,cACLthF,KAAKkS,OAAOmF,IAAMrX,KAAKiwE,UAAU5qE,OAAOwhC,KAAKnvB,OAC7C,IAAI1S,EAAQq5E,GAAgCt0E,OAAO/J,KAAKkS,QACpDoL,EAAS,GACb,IAAI,IAAIgG,EAAQ,EAAGA,EAAQte,EAAM+C,UAAWub,IAAQ,CAChD,IAAI2C,EAAQ,GACR64D,EAAY95E,EAAM85E,UAAUzmE,cAEhC,GADA4N,EAAM6nD,iBAAmBgR,EACrBA,EAAY,EAAG,CACf,IAAI3I,EAAU,GACVqL,EAAc,EAClB,IAAI,IAAItiF,EAAI,EAAGA,EAAI4/E,EAAW5/E,IAAI,CAE9BsiF,GADSvC,GAAoCj6E,EAAMmxE,SAEnDA,EAAQp3E,KAAKyiF,GAEjBv7D,EAAM8oD,OAASsQ,GAAoCr6E,EAAMW,MAAOX,EAAMsY,OAAQkkE,GAC9E,IAAI,IAAIx3E,EAAK,EAAGA,EAAK80E,EAAW90E,IAAKic,EAAM8oD,OAAOoH,EAAQnsE,GAAM,GAAGikE,YAAa,EAC1DgR,GAAoCj6E,EAAMsY,aAC7D,GAAIwhE,EAAY,EAAG,CAItB,GAH2BvQ,GAA0C/iC,UAAUsjC,iBAAiB/uE,KAAK,CACjG01D,MAAOz1D,MACRimB,EAAOjhB,EAAM+5E,YAC4BE,GAAoCj6E,EAAMsY,QAE1FA,EAAOve,KAAKknB,GAEhBjmB,KAAKw9E,mBAAqBlgE,EAE9B,eAAejd,GACXqa,SAASra,GACJlC,EAAuBpB,EAA5B,CAAsEiD,KAAM,OAAQ,YAmOxFvB,EAxHJ,MACI,aAAaO,GACT,MAAqF,SAA1E2qC,GAA2C5/B,OAAO/K,EAAOkqD,MAAM,EAAG,IAEjF,QAAQvrB,GACJ,IAAK,IAAIjmB,KAAU1X,KAAK4S,OAAOoD,QAAQ,CACnC,IAAI9D,EAAS,IAAIpV,EAAmBwC,aAAaU,KAAKkS,OAAOlT,QAC7DkT,EAAOmF,IAAMK,EACb,IAAIrY,EAAO,IAAQk8E,GAA0CrpE,GAC7D,GAAI7S,EAAKJ,iBAAmB0+B,GAAQt+B,EAAKJ,0BAA0B6K,YAAc6zB,aAAgB7zB,YAAczK,EAAKJ,eAAes0D,MAAM,CAAC51D,EAAGuB,IAAIy+B,EAAKz+B,KAAOvB,GAAI,OAAO0B,EAE5K,OAAO,KAEX,YACI,IAAIoiF,EAAQ,GACZ,IAAK,IAAI/pE,KAAU1X,KAAK4S,OAAOoD,QAAQ,CACnC,IAAI9D,EAAS,IAAIpV,EAAmBwC,aAAaU,KAAKkS,OAAOlT,QAC7DkT,EAAOmF,IAAMK,EACb+pE,EAAM1iF,KAAK,IAAQw8E,GAA0CrpE,IAEjE,OAAOuvE,EAEX,YAAYvvE,GAGR,GAFK/T,EAAuBpB,EAA5B,CAAsEiD,KAAM,OAAQ,OACpFA,KAAKkS,OAASA,EACe,SAAzBA,EAAOwvE,WAAW,GAAe,MAAM,IAAIliF,MAAM,6BACrDQ,KAAK4S,OAAS4sE,GAAgCz1E,OAAOmI,MA+FzDzT,EArDJ,MACI,aAAaO,GACT,IAAIkT,EAAS,IAAIpV,EAAmBwC,aAAaN,GACjD,IACI,IAAI4T,EAASguE,GAAkC72E,OAAOmI,GACxD,MAAOzU,GACL,OAAO,EAEX,IAAK,IAAI4E,KAAQuQ,EAAOqD,IAAIyqE,SAASF,MACjC,GAAkB,SAAdn+E,EAAKs7B,KAAiB,OAAO,EAErC,OAAO,EAEX,QAAQA,GACJ,IAAK39B,KAAK2hF,KAAM,OAAO,KACvB,IAAK,IAAI3J,KAAOh4E,KAAK2hF,KAAKrB,QAAQ,CAC9B,IAAIjpE,EAAMrX,KAAK4S,OAAOstE,WAAalI,EAAIkI,WAAa,EAChDhuE,EAAS,IAAIpV,EAAmBwC,aAAaU,KAAKkS,OAAOlT,OAAOkqD,MAAM7xC,IACtEhY,EAAO,IAAQk8E,GAA0CrpE,GAC7D,GAAI7S,EAAKJ,iBAAmB0+B,GAAQt+B,EAAKJ,0BAA0B6K,YAAc6zB,aAAgB7zB,YAAczK,EAAKJ,eAAes0D,MAAM,CAAC51D,EAAGuB,IAAIy+B,EAAKz+B,KAAOvB,GAAI,OAAO0B,EAE5K,OAAO,KAEX,YACI,IAAIoiF,EAAQ,GACZ,IAAK,IAAIzJ,KAAOh4E,KAAK2hF,KAAKrB,QAAQ,CAC9B,IAAIjpE,EAAMrX,KAAK4S,OAAOstE,WAAalI,EAAIkI,WAAa,EAChDhuE,EAAS,IAAIpV,EAAmBwC,aAAaU,KAAKkS,OAAOlT,OAAOkqD,MAAM7xC,IAC1EoqE,EAAM1iF,KAAK,IAAQw8E,GAA0CrpE,IAEjE,OAAOuvE,EAEX,YAAYvvE,GACH/T,EAAuBpB,EAA5B,CAAsEiD,KAAM,OAAQ,SACpFA,KAAKkS,OAASA,EACdlS,KAAK4S,OAASguE,GAAkC72E,OAAO/J,KAAKkS,QAC5D,IAAK,IAAI7P,KAAQrC,KAAK4S,OAAOqD,IAAIyqE,SAASF,MAAM,CAC5C,IAAK,IAAIxI,KAAO31E,EAAKi+E,QAAYtI,EAAIgI,YAAc,GAC/ChgF,KAAKkS,OAAOmF,IAAM2gE,EAAIgI,WAAahgF,KAAK4S,OAAOqD,IAAI0qE,eACnD3I,EAAIr6C,KAAOkiD,GAAgC91E,OAAO/J,KAAKkS,SACpD8lE,EAAIr6C,KAAO,KACA,SAAdt7B,EAAKs7B,OAAiB39B,KAAK2hF,KAAOt/E,OAx+ZlB0+E,GAq/ZTa,EAAOC,QAr/ZQb,GAq/ZCziF,EAp/ZrCV,OAAOywD,KAAK0yB,IAAQhX,SAAQ,SAAS1pE,GACvB,YAARA,GAA6B,eAARA,GAAwBygF,GAAKe,eAAexhF,IAIrEzC,OAAOC,eAAeijF,GAAMzgF,EAAK,CAC/BrC,YAAY,EACZF,IAAK,WACH,OAAOijF,GAAO1gF","file":"324caf01-818a43ee532dddb5afee.js","sourcesContent":["var $gfJaN$restructure = require(\"restructure\");\nvar $gfJaN$swchelperslib_define_propertyjs = require(\"@swc/helpers/lib/_define_property.js\");\nvar $gfJaN$swchelperslib_ts_decoratejs = require(\"@swc/helpers/lib/_ts_decorate.js\");\nvar $gfJaN$fastdeepequal = require(\"fast-deep-equal\");\nvar $gfJaN$unicodeproperties = require(\"unicode-properties\");\nvar $gfJaN$unicodetrie = require(\"unicode-trie\");\nvar $gfJaN$dfa = require(\"dfa\");\nvar $gfJaN$clone = require(\"clone\");\nvar $gfJaN$tinyinflate = require(\"tiny-inflate\");\nvar $gfJaN$brotlidecompressjs = require(\"brotli/decompress.js\");\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      }\n    });\n  });\n\n  return dest;\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $59aa4ed98453e1d4$exports = {};\n\n$parcel$export($59aa4ed98453e1d4$exports, \"logErrors\", () => $59aa4ed98453e1d4$export$bd5c5d8b8dcafd78);\n$parcel$export($59aa4ed98453e1d4$exports, \"registerFormat\", () => $59aa4ed98453e1d4$export$36b2f24e97d43be);\n$parcel$export($59aa4ed98453e1d4$exports, \"create\", () => $59aa4ed98453e1d4$export$185802fd694ee1f5);\n$parcel$export($59aa4ed98453e1d4$exports, \"defaultLanguage\", () => $59aa4ed98453e1d4$export$42940898df819940);\n$parcel$export($59aa4ed98453e1d4$exports, \"setDefaultLanguage\", () => $59aa4ed98453e1d4$export$5157e7780d44cc36);\n\nlet $59aa4ed98453e1d4$export$bd5c5d8b8dcafd78 = false;\nlet $59aa4ed98453e1d4$var$formats = [];\nfunction $59aa4ed98453e1d4$export$36b2f24e97d43be(format) {\n    $59aa4ed98453e1d4$var$formats.push(format);\n}\nfunction $59aa4ed98453e1d4$export$185802fd694ee1f5(buffer, postscriptName) {\n    for(let i = 0; i < $59aa4ed98453e1d4$var$formats.length; i++){\n        let format = $59aa4ed98453e1d4$var$formats[i];\n        if (format.probe(buffer)) {\n            let font = new format(new (0, $gfJaN$restructure.DecodeStream)(buffer));\n            if (postscriptName) return font.getFont(postscriptName);\n            return font;\n        }\n    }\n    throw new Error(\"Unknown font format\");\n}\nlet $59aa4ed98453e1d4$export$42940898df819940 = \"en\";\nfunction $59aa4ed98453e1d4$export$5157e7780d44cc36(lang = \"en\") {\n    $59aa4ed98453e1d4$export$42940898df819940 = lang;\n}\n\n\n\n\n\nfunction $3bda6911913b43f0$export$69a3209f1a06c04d(target, key1, descriptor) {\n    if (descriptor.get) {\n        let get = descriptor.get;\n        descriptor.get = function() {\n            let value = get.call(this);\n            Object.defineProperty(this, key1, {\n                value: value\n            });\n            return value;\n        };\n    } else if (typeof descriptor.value === \"function\") {\n        let fn = descriptor.value;\n        return {\n            get () {\n                let cache1 = new Map;\n                function memoized(...args) {\n                    let key = args.length > 0 ? args[0] : \"value\";\n                    if (cache1.has(key)) return cache1.get(key);\n                    let result = fn.apply(this, args);\n                    cache1.set(key, result);\n                    return result;\n                }\n                Object.defineProperty(this, key1, {\n                    value: memoized\n                });\n                return memoized;\n            }\n        };\n    }\n}\n\n\n\n\n\nlet $e4ae0436c91af89f$var$SubHeader = new $gfJaN$restructure.Struct({\n    firstCode: $gfJaN$restructure.uint16,\n    entryCount: $gfJaN$restructure.uint16,\n    idDelta: $gfJaN$restructure.int16,\n    idRangeOffset: $gfJaN$restructure.uint16\n});\nlet $e4ae0436c91af89f$var$CmapGroup = new $gfJaN$restructure.Struct({\n    startCharCode: $gfJaN$restructure.uint32,\n    endCharCode: $gfJaN$restructure.uint32,\n    glyphID: $gfJaN$restructure.uint32\n});\nlet $e4ae0436c91af89f$var$UnicodeValueRange = new $gfJaN$restructure.Struct({\n    startUnicodeValue: $gfJaN$restructure.uint24,\n    additionalCount: $gfJaN$restructure.uint8\n});\nlet $e4ae0436c91af89f$var$UVSMapping = new $gfJaN$restructure.Struct({\n    unicodeValue: $gfJaN$restructure.uint24,\n    glyphID: $gfJaN$restructure.uint16\n});\nlet $e4ae0436c91af89f$var$DefaultUVS = new $gfJaN$restructure.Array($e4ae0436c91af89f$var$UnicodeValueRange, $gfJaN$restructure.uint32);\nlet $e4ae0436c91af89f$var$NonDefaultUVS = new $gfJaN$restructure.Array($e4ae0436c91af89f$var$UVSMapping, $gfJaN$restructure.uint32);\nlet $e4ae0436c91af89f$var$VarSelectorRecord = new $gfJaN$restructure.Struct({\n    varSelector: $gfJaN$restructure.uint24,\n    defaultUVS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $e4ae0436c91af89f$var$DefaultUVS, {\n        type: \"parent\"\n    }),\n    nonDefaultUVS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $e4ae0436c91af89f$var$NonDefaultUVS, {\n        type: \"parent\"\n    })\n});\nlet $e4ae0436c91af89f$var$CmapSubtable = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    0: {\n        length: $gfJaN$restructure.uint16,\n        language: $gfJaN$restructure.uint16,\n        codeMap: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint8, 256)\n    },\n    2: {\n        length: $gfJaN$restructure.uint16,\n        language: $gfJaN$restructure.uint16,\n        subHeaderKeys: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, 256),\n        subHeaderCount: (t)=>Math.max.apply(Math, t.subHeaderKeys),\n        subHeaders: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$SubHeader, \"subHeaderCount\"),\n        glyphIndexArray: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"subHeaderCount\")\n    },\n    4: {\n        length: $gfJaN$restructure.uint16,\n        language: $gfJaN$restructure.uint16,\n        segCountX2: $gfJaN$restructure.uint16,\n        segCount: (t)=>t.segCountX2 >> 1,\n        searchRange: $gfJaN$restructure.uint16,\n        entrySelector: $gfJaN$restructure.uint16,\n        rangeShift: $gfJaN$restructure.uint16,\n        endCode: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"segCount\"),\n        reservedPad: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        startCode: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"segCount\"),\n        idDelta: new $gfJaN$restructure.LazyArray($gfJaN$restructure.int16, \"segCount\"),\n        idRangeOffset: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"segCount\"),\n        glyphIndexArray: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, (t)=>(t.length - t._currentOffset) / 2)\n    },\n    6: {\n        length: $gfJaN$restructure.uint16,\n        language: $gfJaN$restructure.uint16,\n        firstCode: $gfJaN$restructure.uint16,\n        entryCount: $gfJaN$restructure.uint16,\n        glyphIndices: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"entryCount\")\n    },\n    8: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        length: $gfJaN$restructure.uint32,\n        language: $gfJaN$restructure.uint16,\n        is32: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint8, 8192),\n        nGroups: $gfJaN$restructure.uint32,\n        groups: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$CmapGroup, \"nGroups\")\n    },\n    10: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        length: $gfJaN$restructure.uint32,\n        language: $gfJaN$restructure.uint32,\n        firstCode: $gfJaN$restructure.uint32,\n        entryCount: $gfJaN$restructure.uint32,\n        glyphIndices: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"numChars\")\n    },\n    12: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        length: $gfJaN$restructure.uint32,\n        language: $gfJaN$restructure.uint32,\n        nGroups: $gfJaN$restructure.uint32,\n        groups: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$CmapGroup, \"nGroups\")\n    },\n    13: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        length: $gfJaN$restructure.uint32,\n        language: $gfJaN$restructure.uint32,\n        nGroups: $gfJaN$restructure.uint32,\n        groups: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$CmapGroup, \"nGroups\")\n    },\n    14: {\n        length: $gfJaN$restructure.uint32,\n        numRecords: $gfJaN$restructure.uint32,\n        varSelectors: new $gfJaN$restructure.LazyArray($e4ae0436c91af89f$var$VarSelectorRecord, \"numRecords\")\n    }\n});\nlet $e4ae0436c91af89f$var$CmapEntry = new $gfJaN$restructure.Struct({\n    platformID: $gfJaN$restructure.uint16,\n    encodingID: $gfJaN$restructure.uint16,\n    table: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $e4ae0436c91af89f$var$CmapSubtable, {\n        type: \"parent\",\n        lazy: true\n    })\n});\nvar // character to glyph mapping\n$e4ae0436c91af89f$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numSubtables: $gfJaN$restructure.uint16,\n    tables: new $gfJaN$restructure.Array($e4ae0436c91af89f$var$CmapEntry, \"numSubtables\")\n});\n\n\n\nvar // font header\n$55a60976afb7c261$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.int32,\n    revision: $gfJaN$restructure.int32,\n    checkSumAdjustment: $gfJaN$restructure.uint32,\n    magicNumber: $gfJaN$restructure.uint32,\n    flags: $gfJaN$restructure.uint16,\n    unitsPerEm: $gfJaN$restructure.uint16,\n    created: new $gfJaN$restructure.Array($gfJaN$restructure.int32, 2),\n    modified: new $gfJaN$restructure.Array($gfJaN$restructure.int32, 2),\n    xMin: $gfJaN$restructure.int16,\n    yMin: $gfJaN$restructure.int16,\n    xMax: $gfJaN$restructure.int16,\n    yMax: $gfJaN$restructure.int16,\n    macStyle: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"outline\",\n        \"shadow\",\n        \"condensed\",\n        \"extended\"\n    ]),\n    lowestRecPPEM: $gfJaN$restructure.uint16,\n    fontDirectionHint: $gfJaN$restructure.int16,\n    indexToLocFormat: $gfJaN$restructure.int16,\n    glyphDataFormat: $gfJaN$restructure.int16 // 0 for current format\n});\n\n\n\nvar // horizontal header\n$dde72b7b5b650596$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.int32,\n    ascent: $gfJaN$restructure.int16,\n    descent: $gfJaN$restructure.int16,\n    lineGap: $gfJaN$restructure.int16,\n    advanceWidthMax: $gfJaN$restructure.uint16,\n    minLeftSideBearing: $gfJaN$restructure.int16,\n    minRightSideBearing: $gfJaN$restructure.int16,\n    xMaxExtent: $gfJaN$restructure.int16,\n    caretSlopeRise: $gfJaN$restructure.int16,\n    caretSlopeRun: $gfJaN$restructure.int16,\n    caretOffset: $gfJaN$restructure.int16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.int16, 4),\n    metricDataFormat: $gfJaN$restructure.int16,\n    numberOfMetrics: $gfJaN$restructure.uint16 // Number of advance widths in 'hmtx' table\n});\n\n\n\nlet $a7c40184072c9a5b$var$HmtxEntry = new $gfJaN$restructure.Struct({\n    advance: $gfJaN$restructure.uint16,\n    bearing: $gfJaN$restructure.int16\n});\nvar $a7c40184072c9a5b$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    metrics: new $gfJaN$restructure.LazyArray($a7c40184072c9a5b$var$HmtxEntry, (t)=>t.parent.hhea.numberOfMetrics),\n    bearings: new $gfJaN$restructure.LazyArray($gfJaN$restructure.int16, (t)=>t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics)\n});\n\n\n\nvar // maxiumum profile\n$521197722369f691$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.int32,\n    numGlyphs: $gfJaN$restructure.uint16,\n    maxPoints: $gfJaN$restructure.uint16,\n    maxContours: $gfJaN$restructure.uint16,\n    maxComponentPoints: $gfJaN$restructure.uint16,\n    maxComponentContours: $gfJaN$restructure.uint16,\n    maxZones: $gfJaN$restructure.uint16,\n    maxTwilightPoints: $gfJaN$restructure.uint16,\n    maxStorage: $gfJaN$restructure.uint16,\n    maxFunctionDefs: $gfJaN$restructure.uint16,\n    maxInstructionDefs: $gfJaN$restructure.uint16,\n    maxStackElements: $gfJaN$restructure.uint16,\n    maxSizeOfInstructions: $gfJaN$restructure.uint16,\n    maxComponentElements: $gfJaN$restructure.uint16,\n    maxComponentDepth: $gfJaN$restructure.uint16 // Maximum levels of recursion; 1 for simple components\n});\n\n\n\nfunction $e2613b812f052cbe$export$badc544e0651b6b1(platformID, encodingID, languageID = 0) {\n    if (platformID === 1 && $e2613b812f052cbe$export$479e671907f486d1[languageID]) return $e2613b812f052cbe$export$479e671907f486d1[languageID];\n    return $e2613b812f052cbe$export$6fef87b7618bdf0b[platformID][encodingID];\n}\nconst $e2613b812f052cbe$var$SINGLE_BYTE_ENCODINGS = new Set([\n    \"x-mac-roman\",\n    \"x-mac-cyrillic\",\n    \"iso-8859-6\",\n    \"iso-8859-8\"\n]);\nconst $e2613b812f052cbe$var$MAC_ENCODINGS = {\n    \"x-mac-croatian\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\u0160\\u2122\\xb4\\xa8\\u2260\\u017D\\xd8\\u221E\\xb1\\u2264\\u2265\\u2206\\xb5\\u2202\\u2211\\u220F\\u0161\\u222B\\xaa\\xba\\u03A9\\u017E\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u0106\\xab\\u010C\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u0110\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\uF8FF\\xa9\\u2044\\u20AC\\u2039\\u203A\\xc6\\xbb\\u2013\\xb7\\u201A\\u201E\\u2030\\xc2\\u0107\\xc1\\u010D\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\u0111\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u03C0\\xcb\\u02DA\\xb8\\xca\\xe6\\u02C7\",\n    \"x-mac-gaelic\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u1E02\\xb1\\u2264\\u2265\\u1E03\\u010A\\u010B\\u1E0A\\u1E0B\\u1E1E\\u1E1F\\u0120\\u0121\\u1E40\\xe6\\xf8\\u1E41\\u1E56\\u1E57\\u027C\\u0192\\u017F\\u1E60\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\u1E61\\u1E9B\\xff\\u0178\\u1E6A\\u20AC\\u2039\\u203A\\u0176\\u0177\\u1E6B\\xb7\\u1EF2\\u1EF3\\u204A\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\u2663\\xd2\\xda\\xdb\\xd9\\u0131\\xdd\\xfd\\u0174\\u0175\\u1E84\\u1E85\\u1E80\\u1E81\\u1E82\\u1E83\",\n    \"x-mac-greek\": \"\\xc4\\xb9\\xb2\\xc9\\xb3\\xd6\\xdc\\u0385\\xe0\\xe2\\xe4\\u0384\\xa8\\xe7\\xe9\\xe8\\xea\\xeb\\xa3\\u2122\\xee\\xef\\u2022\\xbd\\u2030\\xf4\\xf6\\xa6\\u20AC\\xf9\\xfb\\xfc\\u2020\\u0393\\u0394\\u0398\\u039B\\u039E\\u03A0\\xdf\\xae\\xa9\\u03A3\\u03AA\\xa7\\u2260\\xb0\\xb7\\u0391\\xb1\\u2264\\u2265\\xa5\\u0392\\u0395\\u0396\\u0397\\u0399\\u039A\\u039C\\u03A6\\u03AB\\u03A8\\u03A9\\u03AC\\u039D\\xac\\u039F\\u03A1\\u2248\\u03A4\\xab\\xbb\\u2026 \\u03A5\\u03A7\\u0386\\u0388\\u0153\\u2013\\u2015\\u201C\\u201D\\u2018\\u2019\\xf7\\u0389\\u038A\\u038C\\u038E\\u03AD\\u03AE\\u03AF\\u03CC\\u038F\\u03CD\\u03B1\\u03B2\\u03C8\\u03B4\\u03B5\\u03C6\\u03B3\\u03B7\\u03B9\\u03BE\\u03BA\\u03BB\\u03BC\\u03BD\\u03BF\\u03C0\\u03CE\\u03C1\\u03C3\\u03C4\\u03B8\\u03C9\\u03C2\\u03C7\\u03C5\\u03B6\\u03CA\\u03CB\\u0390\\u03B0\\xad\",\n    \"x-mac-icelandic\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\xdd\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\xe6\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u2044\\u20AC\\xd0\\xf0\\xde\\xfe\\xfd\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\",\n    \"x-mac-inuit\": \"\\u1403\\u1404\\u1405\\u1406\\u140A\\u140B\\u1431\\u1432\\u1433\\u1434\\u1438\\u1439\\u1449\\u144E\\u144F\\u1450\\u1451\\u1455\\u1456\\u1466\\u146D\\u146E\\u146F\\u1470\\u1472\\u1473\\u1483\\u148B\\u148C\\u148D\\u148E\\u1490\\u1491\\xb0\\u14A1\\u14A5\\u14A6\\u2022\\xb6\\u14A7\\xae\\xa9\\u2122\\u14A8\\u14AA\\u14AB\\u14BB\\u14C2\\u14C3\\u14C4\\u14C5\\u14C7\\u14C8\\u14D0\\u14EF\\u14F0\\u14F1\\u14F2\\u14F4\\u14F5\\u1505\\u14D5\\u14D6\\u14D7\\u14D8\\u14DA\\u14DB\\u14EA\\u1528\\u1529\\u152A\\u152B\\u152D\\u2026 \\u152E\\u153E\\u1555\\u1556\\u1557\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\u1558\\u1559\\u155A\\u155D\\u1546\\u1547\\u1548\\u1549\\u154B\\u154C\\u1550\\u157F\\u1580\\u1581\\u1582\\u1583\\u1584\\u1585\\u158F\\u1590\\u1591\\u1592\\u1593\\u1594\\u1595\\u1671\\u1672\\u1673\\u1674\\u1675\\u1676\\u1596\\u15A0\\u15A1\\u15A2\\u15A3\\u15A4\\u15A5\\u15A6\\u157C\\u0141\\u0142\",\n    \"x-mac-ce\": \"\\xc4\\u0100\\u0101\\xc9\\u0104\\xd6\\xdc\\xe1\\u0105\\u010C\\xe4\\u010D\\u0106\\u0107\\xe9\\u0179\\u017A\\u010E\\xed\\u010F\\u0112\\u0113\\u0116\\xf3\\u0117\\xf4\\xf6\\xf5\\xfa\\u011A\\u011B\\xfc\\u2020\\xb0\\u0118\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\u0119\\xa8\\u2260\\u0123\\u012E\\u012F\\u012A\\u2264\\u2265\\u012B\\u0136\\u2202\\u2211\\u0142\\u013B\\u013C\\u013D\\u013E\\u0139\\u013A\\u0145\\u0146\\u0143\\xac\\u221A\\u0144\\u0147\\u2206\\xab\\xbb\\u2026 \\u0148\\u0150\\xd5\\u0151\\u014C\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\u014D\\u0154\\u0155\\u0158\\u2039\\u203A\\u0159\\u0156\\u0157\\u0160\\u201A\\u201E\\u0161\\u015A\\u015B\\xc1\\u0164\\u0165\\xcd\\u017D\\u017E\\u016A\\xd3\\xd4\\u016B\\u016E\\xda\\u016F\\u0170\\u0171\\u0172\\u0173\\xdd\\xfd\\u0137\\u017B\\u0141\\u017C\\u0122\\u02C7\",\n    \"x-mac-romanian\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\u0102\\u0218\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\u0103\\u0219\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u2044\\u20AC\\u2039\\u203A\\u021A\\u021B\\u2021\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\",\n    \"x-mac-turkish\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\xe6\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u011E\\u011F\\u0130\\u0131\\u015E\\u015F\\u2021\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\uF8A0\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\"\n};\nconst $e2613b812f052cbe$var$encodingCache = new Map();\nfunction $e2613b812f052cbe$export$1dceb3c14ed68bee(encoding) {\n    let cached = $e2613b812f052cbe$var$encodingCache.get(encoding);\n    if (cached) return cached;\n    // These encodings aren't supported by TextDecoder.\n    let mapping = $e2613b812f052cbe$var$MAC_ENCODINGS[encoding];\n    if (mapping) {\n        let res = new Map();\n        for(let i = 0; i < mapping.length; i++)res.set(mapping.charCodeAt(i), 0x80 + i);\n        $e2613b812f052cbe$var$encodingCache.set(encoding, res);\n        return res;\n    }\n    // Only single byte encodings can be mapped 1:1.\n    if ($e2613b812f052cbe$var$SINGLE_BYTE_ENCODINGS.has(encoding)) {\n        // TextEncoder only supports utf8, whereas TextDecoder supports legacy encodings.\n        // Use this to create a mapping of code points.\n        let decoder = new TextDecoder(encoding);\n        let mapping = new Uint8Array(0x80);\n        for(let i = 0; i < 0x80; i++)mapping[i] = 0x80 + i;\n        let res = new Map();\n        let s = decoder.decode(mapping);\n        for(let i1 = 0; i1 < 0x80; i1++)res.set(s.charCodeAt(i1), 0x80 + i1);\n        $e2613b812f052cbe$var$encodingCache.set(encoding, res);\n        return res;\n    }\n}\nconst $e2613b812f052cbe$export$6fef87b7618bdf0b = [\n    // unicode\n    [\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\"\n    ],\n    // macintosh\n    // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n    // 0\tRoman                 17\tMalayalam\n    // 1\tJapanese\t            18\tSinhalese\n    // 2\tTraditional Chinese\t  19\tBurmese\n    // 3\tKorean\t              20\tKhmer\n    // 4\tArabic\t              21\tThai\n    // 5\tHebrew\t              22\tLaotian\n    // 6\tGreek\t                23\tGeorgian\n    // 7\tRussian\t              24\tArmenian\n    // 8\tRSymbol\t              25\tSimplified Chinese\n    // 9\tDevanagari\t          26\tTibetan\n    // 10\tGurmukhi\t            27\tMongolian\n    // 11\tGujarati\t            28\tGeez\n    // 12\tOriya\t                29\tSlavic\n    // 13\tBengali\t              30\tVietnamese\n    // 14\tTamil\t                31\tSindhi\n    // 15\tTelugu\t              32\t(Uninterpreted)\n    // 16\tKannada\n    [\n        \"x-mac-roman\",\n        \"shift-jis\",\n        \"big5\",\n        \"euc-kr\",\n        \"iso-8859-6\",\n        \"iso-8859-8\",\n        \"x-mac-greek\",\n        \"x-mac-cyrillic\",\n        \"x-mac-symbol\",\n        \"x-mac-devanagari\",\n        \"x-mac-gurmukhi\",\n        \"x-mac-gujarati\",\n        \"Oriya\",\n        \"Bengali\",\n        \"Tamil\",\n        \"Telugu\",\n        \"Kannada\",\n        \"Malayalam\",\n        \"Sinhalese\",\n        \"Burmese\",\n        \"Khmer\",\n        \"iso-8859-11\",\n        \"Laotian\",\n        \"Georgian\",\n        \"Armenian\",\n        \"hz-gb-2312\",\n        \"Tibetan\",\n        \"Mongolian\",\n        \"Geez\",\n        \"x-mac-ce\",\n        \"Vietnamese\",\n        \"Sindhi\"\n    ],\n    // ISO (deprecated)\n    [\n        \"ascii\"\n    ],\n    // windows\n    // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n    [\n        \"symbol\",\n        \"utf16be\",\n        \"shift-jis\",\n        \"gb18030\",\n        \"big5\",\n        \"x-cp20949\",\n        \"johab\",\n        null,\n        null,\n        null,\n        \"utf16be\"\n    ]\n];\nconst $e2613b812f052cbe$export$479e671907f486d1 = {\n    15: \"x-mac-icelandic\",\n    17: \"x-mac-turkish\",\n    18: \"x-mac-croatian\",\n    24: \"x-mac-ce\",\n    25: \"x-mac-ce\",\n    26: \"x-mac-ce\",\n    27: \"x-mac-ce\",\n    28: \"x-mac-ce\",\n    30: \"x-mac-icelandic\",\n    37: \"x-mac-romanian\",\n    38: \"x-mac-ce\",\n    39: \"x-mac-ce\",\n    40: \"x-mac-ce\",\n    143: \"x-mac-inuit\",\n    146: \"x-mac-gaelic\"\n};\nconst $e2613b812f052cbe$export$2092376fd002e13 = [\n    // unicode\n    [],\n    {\n        0: \"en\",\n        30: \"fo\",\n        60: \"ks\",\n        90: \"rw\",\n        1: \"fr\",\n        31: \"fa\",\n        61: \"ku\",\n        91: \"rn\",\n        2: \"de\",\n        32: \"ru\",\n        62: \"sd\",\n        92: \"ny\",\n        3: \"it\",\n        33: \"zh\",\n        63: \"bo\",\n        93: \"mg\",\n        4: \"nl\",\n        34: \"nl-BE\",\n        64: \"ne\",\n        94: \"eo\",\n        5: \"sv\",\n        35: \"ga\",\n        65: \"sa\",\n        128: \"cy\",\n        6: \"es\",\n        36: \"sq\",\n        66: \"mr\",\n        129: \"eu\",\n        7: \"da\",\n        37: \"ro\",\n        67: \"bn\",\n        130: \"ca\",\n        8: \"pt\",\n        38: \"cz\",\n        68: \"as\",\n        131: \"la\",\n        9: \"no\",\n        39: \"sk\",\n        69: \"gu\",\n        132: \"qu\",\n        10: \"he\",\n        40: \"si\",\n        70: \"pa\",\n        133: \"gn\",\n        11: \"ja\",\n        41: \"yi\",\n        71: \"or\",\n        134: \"ay\",\n        12: \"ar\",\n        42: \"sr\",\n        72: \"ml\",\n        135: \"tt\",\n        13: \"fi\",\n        43: \"mk\",\n        73: \"kn\",\n        136: \"ug\",\n        14: \"el\",\n        44: \"bg\",\n        74: \"ta\",\n        137: \"dz\",\n        15: \"is\",\n        45: \"uk\",\n        75: \"te\",\n        138: \"jv\",\n        16: \"mt\",\n        46: \"be\",\n        76: \"si\",\n        139: \"su\",\n        17: \"tr\",\n        47: \"uz\",\n        77: \"my\",\n        140: \"gl\",\n        18: \"hr\",\n        48: \"kk\",\n        78: \"km\",\n        141: \"af\",\n        19: \"zh-Hant\",\n        49: \"az-Cyrl\",\n        79: \"lo\",\n        142: \"br\",\n        20: \"ur\",\n        50: \"az-Arab\",\n        80: \"vi\",\n        143: \"iu\",\n        21: \"hi\",\n        51: \"hy\",\n        81: \"id\",\n        144: \"gd\",\n        22: \"th\",\n        52: \"ka\",\n        82: \"tl\",\n        145: \"gv\",\n        23: \"ko\",\n        53: \"mo\",\n        83: \"ms\",\n        146: \"ga\",\n        24: \"lt\",\n        54: \"ky\",\n        84: \"ms-Arab\",\n        147: \"to\",\n        25: \"pl\",\n        55: \"tg\",\n        85: \"am\",\n        148: \"el-polyton\",\n        26: \"hu\",\n        56: \"tk\",\n        86: \"ti\",\n        149: \"kl\",\n        27: \"es\",\n        57: \"mn-CN\",\n        87: \"om\",\n        150: \"az\",\n        28: \"lv\",\n        58: \"mn\",\n        88: \"so\",\n        151: \"nn\",\n        29: \"se\",\n        59: \"ps\",\n        89: \"sw\"\n    },\n    // ISO (deprecated)\n    [],\n    {\n        0x0436: \"af\",\n        0x4009: \"en-IN\",\n        0x0487: \"rw\",\n        0x0432: \"tn\",\n        0x041C: \"sq\",\n        0x1809: \"en-IE\",\n        0x0441: \"sw\",\n        0x045B: \"si\",\n        0x0484: \"gsw\",\n        0x2009: \"en-JM\",\n        0x0457: \"kok\",\n        0x041B: \"sk\",\n        0x045E: \"am\",\n        0x4409: \"en-MY\",\n        0x0412: \"ko\",\n        0x0424: \"sl\",\n        0x1401: \"ar-DZ\",\n        0x1409: \"en-NZ\",\n        0x0440: \"ky\",\n        0x2C0A: \"es-AR\",\n        0x3C01: \"ar-BH\",\n        0x3409: \"en-PH\",\n        0x0454: \"lo\",\n        0x400A: \"es-BO\",\n        0x0C01: \"ar\",\n        0x4809: \"en-SG\",\n        0x0426: \"lv\",\n        0x340A: \"es-CL\",\n        0x0801: \"ar-IQ\",\n        0x1C09: \"en-ZA\",\n        0x0427: \"lt\",\n        0x240A: \"es-CO\",\n        0x2C01: \"ar-JO\",\n        0x2C09: \"en-TT\",\n        0x082E: \"dsb\",\n        0x140A: \"es-CR\",\n        0x3401: \"ar-KW\",\n        0x0809: \"en-GB\",\n        0x046E: \"lb\",\n        0x1C0A: \"es-DO\",\n        0x3001: \"ar-LB\",\n        0x0409: \"en\",\n        0x042F: \"mk\",\n        0x300A: \"es-EC\",\n        0x1001: \"ar-LY\",\n        0x3009: \"en-ZW\",\n        0x083E: \"ms-BN\",\n        0x440A: \"es-SV\",\n        0x1801: \"ary\",\n        0x0425: \"et\",\n        0x043E: \"ms\",\n        0x100A: \"es-GT\",\n        0x2001: \"ar-OM\",\n        0x0438: \"fo\",\n        0x044C: \"ml\",\n        0x480A: \"es-HN\",\n        0x4001: \"ar-QA\",\n        0x0464: \"fil\",\n        0x043A: \"mt\",\n        0x080A: \"es-MX\",\n        0x0401: \"ar-SA\",\n        0x040B: \"fi\",\n        0x0481: \"mi\",\n        0x4C0A: \"es-NI\",\n        0x2801: \"ar-SY\",\n        0x080C: \"fr-BE\",\n        0x047A: \"arn\",\n        0x180A: \"es-PA\",\n        0x1C01: \"aeb\",\n        0x0C0C: \"fr-CA\",\n        0x044E: \"mr\",\n        0x3C0A: \"es-PY\",\n        0x3801: \"ar-AE\",\n        0x040C: \"fr\",\n        0x047C: \"moh\",\n        0x280A: \"es-PE\",\n        0x2401: \"ar-YE\",\n        0x140C: \"fr-LU\",\n        0x0450: \"mn\",\n        0x500A: \"es-PR\",\n        0x042B: \"hy\",\n        0x180C: \"fr-MC\",\n        0x0850: \"mn-CN\",\n        0x0C0A: \"es\",\n        0x044D: \"as\",\n        0x100C: \"fr-CH\",\n        0x0461: \"ne\",\n        0x040A: \"es\",\n        0x082C: \"az-Cyrl\",\n        0x0462: \"fy\",\n        0x0414: \"nb\",\n        0x540A: \"es-US\",\n        0x042C: \"az\",\n        0x0456: \"gl\",\n        0x0814: \"nn\",\n        0x380A: \"es-UY\",\n        0x046D: \"ba\",\n        0x0437: \"ka\",\n        0x0482: \"oc\",\n        0x200A: \"es-VE\",\n        0x042D: \"eu\",\n        0x0C07: \"de-AT\",\n        0x0448: \"or\",\n        0x081D: \"sv-FI\",\n        0x0423: \"be\",\n        0x0407: \"de\",\n        0x0463: \"ps\",\n        0x041D: \"sv\",\n        0x0845: \"bn\",\n        0x1407: \"de-LI\",\n        0x0415: \"pl\",\n        0x045A: \"syr\",\n        0x0445: \"bn-IN\",\n        0x1007: \"de-LU\",\n        0x0416: \"pt\",\n        0x0428: \"tg\",\n        0x201A: \"bs-Cyrl\",\n        0x0807: \"de-CH\",\n        0x0816: \"pt-PT\",\n        0x085F: \"tzm\",\n        0x141A: \"bs\",\n        0x0408: \"el\",\n        0x0446: \"pa\",\n        0x0449: \"ta\",\n        0x047E: \"br\",\n        0x046F: \"kl\",\n        0x046B: \"qu-BO\",\n        0x0444: \"tt\",\n        0x0402: \"bg\",\n        0x0447: \"gu\",\n        0x086B: \"qu-EC\",\n        0x044A: \"te\",\n        0x0403: \"ca\",\n        0x0468: \"ha\",\n        0x0C6B: \"qu\",\n        0x041E: \"th\",\n        0x0C04: \"zh-HK\",\n        0x040D: \"he\",\n        0x0418: \"ro\",\n        0x0451: \"bo\",\n        0x1404: \"zh-MO\",\n        0x0439: \"hi\",\n        0x0417: \"rm\",\n        0x041F: \"tr\",\n        0x0804: \"zh\",\n        0x040E: \"hu\",\n        0x0419: \"ru\",\n        0x0442: \"tk\",\n        0x1004: \"zh-SG\",\n        0x040F: \"is\",\n        0x243B: \"smn\",\n        0x0480: \"ug\",\n        0x0404: \"zh-TW\",\n        0x0470: \"ig\",\n        0x103B: \"smj-NO\",\n        0x0422: \"uk\",\n        0x0483: \"co\",\n        0x0421: \"id\",\n        0x143B: \"smj\",\n        0x042E: \"hsb\",\n        0x041A: \"hr\",\n        0x045D: \"iu\",\n        0x0C3B: \"se-FI\",\n        0x0420: \"ur\",\n        0x101A: \"hr-BA\",\n        0x085D: \"iu-Latn\",\n        0x043B: \"se\",\n        0x0843: \"uz-Cyrl\",\n        0x0405: \"cs\",\n        0x083C: \"ga\",\n        0x083B: \"se-SE\",\n        0x0443: \"uz\",\n        0x0406: \"da\",\n        0x0434: \"xh\",\n        0x203B: \"sms\",\n        0x042A: \"vi\",\n        0x048C: \"prs\",\n        0x0435: \"zu\",\n        0x183B: \"sma-NO\",\n        0x0452: \"cy\",\n        0x0465: \"dv\",\n        0x0410: \"it\",\n        0x1C3B: \"sms\",\n        0x0488: \"wo\",\n        0x0813: \"nl-BE\",\n        0x0810: \"it-CH\",\n        0x044F: \"sa\",\n        0x0485: \"sah\",\n        0x0413: \"nl\",\n        0x0411: \"ja\",\n        0x1C1A: \"sr-Cyrl-BA\",\n        0x0478: \"ii\",\n        0x0C09: \"en-AU\",\n        0x044B: \"kn\",\n        0x0C1A: \"sr\",\n        0x046A: \"yo\",\n        0x2809: \"en-BZ\",\n        0x043F: \"kk\",\n        0x181A: \"sr-Latn-BA\",\n        0x1009: \"en-CA\",\n        0x0453: \"km\",\n        0x081A: \"sr-Latn\",\n        0x2409: \"en-029\",\n        0x0486: \"quc\",\n        0x046C: \"nso\"\n    }\n];\n\n\nlet $51a9f4feb3a3b2b1$var$NameRecord = new $gfJaN$restructure.Struct({\n    platformID: $gfJaN$restructure.uint16,\n    encodingID: $gfJaN$restructure.uint16,\n    languageID: $gfJaN$restructure.uint16,\n    nameID: $gfJaN$restructure.uint16,\n    length: $gfJaN$restructure.uint16,\n    string: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.String(\"length\", (t)=>(0, $e2613b812f052cbe$export$badc544e0651b6b1)(t.platformID, t.encodingID, t.languageID)), {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.parent.stringOffset,\n        allowNull: false\n    })\n});\nlet $51a9f4feb3a3b2b1$var$LangTagRecord = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint16,\n    tag: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.String(\"length\", \"utf16be\"), {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.stringOffset\n    })\n});\nvar $51a9f4feb3a3b2b1$var$NameTable = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    0: {\n        count: $gfJaN$restructure.uint16,\n        stringOffset: $gfJaN$restructure.uint16,\n        records: new $gfJaN$restructure.Array($51a9f4feb3a3b2b1$var$NameRecord, \"count\")\n    },\n    1: {\n        count: $gfJaN$restructure.uint16,\n        stringOffset: $gfJaN$restructure.uint16,\n        records: new $gfJaN$restructure.Array($51a9f4feb3a3b2b1$var$NameRecord, \"count\"),\n        langTagCount: $gfJaN$restructure.uint16,\n        langTags: new $gfJaN$restructure.Array($51a9f4feb3a3b2b1$var$LangTagRecord, \"langTagCount\")\n    }\n});\nvar $51a9f4feb3a3b2b1$export$2e2bcd8739ae039 = $51a9f4feb3a3b2b1$var$NameTable;\nconst $51a9f4feb3a3b2b1$var$NAMES = [\n    \"copyright\",\n    \"fontFamily\",\n    \"fontSubfamily\",\n    \"uniqueSubfamily\",\n    \"fullName\",\n    \"version\",\n    \"postscriptName\",\n    \"trademark\",\n    \"manufacturer\",\n    \"designer\",\n    \"description\",\n    \"vendorURL\",\n    \"designerURL\",\n    \"license\",\n    \"licenseURL\",\n    null,\n    \"preferredFamily\",\n    \"preferredSubfamily\",\n    \"compatibleFull\",\n    \"sampleText\",\n    \"postscriptCIDFontName\",\n    \"wwsFamilyName\",\n    \"wwsSubfamilyName\"\n];\n$51a9f4feb3a3b2b1$var$NameTable.process = function(stream) {\n    var records = {};\n    for (let record of this.records){\n        // find out what language this is for\n        let language = (0, $e2613b812f052cbe$export$2092376fd002e13)[record.platformID][record.languageID];\n        if (language == null && this.langTags != null && record.languageID >= 0x8000) language = this.langTags[record.languageID - 0x8000].tag;\n        if (language == null) language = record.platformID + \"-\" + record.languageID;\n        // if the nameID is >= 256, it is a font feature record (AAT)\n        let key = record.nameID >= 256 ? \"fontFeatures\" : $51a9f4feb3a3b2b1$var$NAMES[record.nameID] || record.nameID;\n        if (records[key] == null) records[key] = {};\n        let obj = records[key];\n        if (record.nameID >= 256) obj = obj[record.nameID] || (obj[record.nameID] = {});\n        if (typeof record.string === \"string\" || typeof obj[language] !== \"string\") obj[language] = record.string;\n    }\n    this.records = records;\n};\n$51a9f4feb3a3b2b1$var$NameTable.preEncode = function() {\n    if (Array.isArray(this.records)) return;\n    this.version = 0;\n    let records = [];\n    for(let key in this.records){\n        let val = this.records[key];\n        if (key === \"fontFeatures\") continue;\n        records.push({\n            platformID: 3,\n            encodingID: 1,\n            languageID: 0x409,\n            nameID: $51a9f4feb3a3b2b1$var$NAMES.indexOf(key),\n            length: val.en.length * 2,\n            string: val.en\n        });\n        if (key === \"postscriptName\") records.push({\n            platformID: 1,\n            encodingID: 0,\n            languageID: 0,\n            nameID: $51a9f4feb3a3b2b1$var$NAMES.indexOf(key),\n            length: val.en.length,\n            string: val.en\n        });\n    }\n    this.records = records;\n    this.count = records.length;\n    this.stringOffset = $51a9f4feb3a3b2b1$var$NameTable.size(this, null, false);\n};\n\n\n\nvar $114ea85db469b435$var$OS2 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    header: {\n        xAvgCharWidth: $gfJaN$restructure.int16,\n        usWeightClass: $gfJaN$restructure.uint16,\n        usWidthClass: $gfJaN$restructure.uint16,\n        fsType: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n            null,\n            \"noEmbedding\",\n            \"viewOnly\",\n            \"editable\",\n            null,\n            null,\n            null,\n            null,\n            \"noSubsetting\",\n            \"bitmapOnly\"\n        ]),\n        ySubscriptXSize: $gfJaN$restructure.int16,\n        ySubscriptYSize: $gfJaN$restructure.int16,\n        ySubscriptXOffset: $gfJaN$restructure.int16,\n        ySubscriptYOffset: $gfJaN$restructure.int16,\n        ySuperscriptXSize: $gfJaN$restructure.int16,\n        ySuperscriptYSize: $gfJaN$restructure.int16,\n        ySuperscriptXOffset: $gfJaN$restructure.int16,\n        ySuperscriptYOffset: $gfJaN$restructure.int16,\n        yStrikeoutSize: $gfJaN$restructure.int16,\n        yStrikeoutPosition: $gfJaN$restructure.int16,\n        sFamilyClass: $gfJaN$restructure.int16,\n        panose: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, 10),\n        ulCharRange: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, 4),\n        vendorID: new $gfJaN$restructure.String(4),\n        fsSelection: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n            \"italic\",\n            \"underscore\",\n            \"negative\",\n            \"outlined\",\n            \"strikeout\",\n            \"bold\",\n            \"regular\",\n            \"useTypoMetrics\",\n            \"wws\",\n            \"oblique\"\n        ]),\n        usFirstCharIndex: $gfJaN$restructure.uint16,\n        usLastCharIndex: $gfJaN$restructure.uint16 // The maximum Unicode index in this font\n    },\n    // The Apple version of this table ends here, but the Microsoft one continues on...\n    0: {},\n    1: {\n        typoAscender: $gfJaN$restructure.int16,\n        typoDescender: $gfJaN$restructure.int16,\n        typoLineGap: $gfJaN$restructure.int16,\n        winAscent: $gfJaN$restructure.uint16,\n        winDescent: $gfJaN$restructure.uint16,\n        codePageRange: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, 2)\n    },\n    2: {\n        // these should be common with version 1 somehow\n        typoAscender: $gfJaN$restructure.int16,\n        typoDescender: $gfJaN$restructure.int16,\n        typoLineGap: $gfJaN$restructure.int16,\n        winAscent: $gfJaN$restructure.uint16,\n        winDescent: $gfJaN$restructure.uint16,\n        codePageRange: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, 2),\n        xHeight: $gfJaN$restructure.int16,\n        capHeight: $gfJaN$restructure.int16,\n        defaultChar: $gfJaN$restructure.uint16,\n        breakChar: $gfJaN$restructure.uint16,\n        maxContent: $gfJaN$restructure.uint16\n    },\n    5: {\n        typoAscender: $gfJaN$restructure.int16,\n        typoDescender: $gfJaN$restructure.int16,\n        typoLineGap: $gfJaN$restructure.int16,\n        winAscent: $gfJaN$restructure.uint16,\n        winDescent: $gfJaN$restructure.uint16,\n        codePageRange: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, 2),\n        xHeight: $gfJaN$restructure.int16,\n        capHeight: $gfJaN$restructure.int16,\n        defaultChar: $gfJaN$restructure.uint16,\n        breakChar: $gfJaN$restructure.uint16,\n        maxContent: $gfJaN$restructure.uint16,\n        usLowerOpticalPointSize: $gfJaN$restructure.uint16,\n        usUpperOpticalPointSize: $gfJaN$restructure.uint16\n    }\n});\nlet $114ea85db469b435$var$versions = $114ea85db469b435$var$OS2.versions;\n$114ea85db469b435$var$versions[3] = $114ea85db469b435$var$versions[4] = $114ea85db469b435$var$versions[2];\nvar $114ea85db469b435$export$2e2bcd8739ae039 = $114ea85db469b435$var$OS2;\n\n\n\nvar // PostScript information\n$f93b30299e1ea0f5$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.fixed32, {\n    header: {\n        italicAngle: $gfJaN$restructure.fixed32,\n        underlinePosition: $gfJaN$restructure.int16,\n        underlineThickness: $gfJaN$restructure.int16,\n        isFixedPitch: $gfJaN$restructure.uint32,\n        minMemType42: $gfJaN$restructure.uint32,\n        maxMemType42: $gfJaN$restructure.uint32,\n        minMemType1: $gfJaN$restructure.uint32,\n        maxMemType1: $gfJaN$restructure.uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n    },\n    1: {},\n    2: {\n        numberOfGlyphs: $gfJaN$restructure.uint16,\n        glyphNameIndex: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numberOfGlyphs\"),\n        names: new $gfJaN$restructure.Array(new $gfJaN$restructure.String($gfJaN$restructure.uint8))\n    },\n    2.5: {\n        numberOfGlyphs: $gfJaN$restructure.uint16,\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"numberOfGlyphs\")\n    },\n    3: {},\n    4: {\n        map: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, (t)=>t.parent.maxp.numGlyphs)\n    }\n});\n\n\n\nvar // An array of predefined values accessible by instructions\n$8fb09b0f473d61a0$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    controlValues: new $gfJaN$restructure.Array($gfJaN$restructure.int16)\n});\n\n\n\nvar // A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n$873d79fea57d3161$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    instructions: new $gfJaN$restructure.Array($gfJaN$restructure.uint8)\n});\n\n\n\nlet $83c4155666d50c37$var$loca = new $gfJaN$restructure.VersionedStruct(\"head.indexToLocFormat\", {\n    0: {\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint16)\n    },\n    1: {\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint32)\n    }\n});\n$83c4155666d50c37$var$loca.process = function() {\n    if (this.version === 0 && !this._processed) {\n        for(let i = 0; i < this.offsets.length; i++)this.offsets[i] <<= 1;\n        this._processed = true;\n    }\n};\n$83c4155666d50c37$var$loca.preEncode = function() {\n    if (this.version === 0 && this._processed !== false) {\n        for(let i = 0; i < this.offsets.length; i++)this.offsets[i] >>>= 1;\n        this._processed = false;\n    }\n};\nvar $83c4155666d50c37$export$2e2bcd8739ae039 = $83c4155666d50c37$var$loca;\n\n\n\nvar // Set of instructions executed whenever the point size or font transformation change\n$b12598db7cdf7042$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    controlValueProgram: new $gfJaN$restructure.Array($gfJaN$restructure.uint8)\n});\n\n\n\nvar // only used for encoding\n$7707bdf21a3d89cc$export$2e2bcd8739ae039 = new $gfJaN$restructure.Array(new $gfJaN$restructure.Buffer);\n\n\n\n\nclass $9eaea3754914a290$export$2e2bcd8739ae039 {\n    getCFFVersion(ctx) {\n        while(ctx && !ctx.hdrSize)ctx = ctx.parent;\n        return ctx ? ctx.version : -1;\n    }\n    decode(stream, parent) {\n        let version = this.getCFFVersion(parent);\n        let count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n        if (count === 0) return [];\n        let offSize = stream.readUInt8();\n        let offsetType;\n        if (offSize === 1) offsetType = $gfJaN$restructure.uint8;\n        else if (offSize === 2) offsetType = $gfJaN$restructure.uint16;\n        else if (offSize === 3) offsetType = $gfJaN$restructure.uint24;\n        else if (offSize === 4) offsetType = $gfJaN$restructure.uint32;\n        else throw new Error(`Bad offset size in CFFIndex: ${offSize} ${stream.pos}`);\n        let ret = [];\n        let startPos = stream.pos + (count + 1) * offSize - 1;\n        let start = offsetType.decode(stream);\n        for(let i = 0; i < count; i++){\n            let end = offsetType.decode(stream);\n            if (this.type != null) {\n                let pos = stream.pos;\n                stream.pos = startPos + start;\n                parent.length = end - start;\n                ret.push(this.type.decode(stream, parent));\n                stream.pos = pos;\n            } else ret.push({\n                offset: startPos + start,\n                length: end - start\n            });\n            start = end;\n        }\n        stream.pos = startPos + start;\n        return ret;\n    }\n    size(arr, parent) {\n        let size = 2;\n        if (arr.length === 0) return size;\n        let type = this.type || new $gfJaN$restructure.Buffer;\n        // find maximum offset to detminine offset type\n        let offset = 1;\n        for(let i = 0; i < arr.length; i++){\n            let item = arr[i];\n            offset += type.size(item, parent);\n        }\n        let offsetType;\n        if (offset <= 0xff) offsetType = $gfJaN$restructure.uint8;\n        else if (offset <= 0xffff) offsetType = $gfJaN$restructure.uint16;\n        else if (offset <= 0xffffff) offsetType = $gfJaN$restructure.uint24;\n        else if (offset <= 0xffffffff) offsetType = $gfJaN$restructure.uint32;\n        else throw new Error(\"Bad offset in CFFIndex\");\n        size += 1 + offsetType.size() * (arr.length + 1);\n        size += offset - 1;\n        return size;\n    }\n    encode(stream, arr, parent) {\n        stream.writeUInt16BE(arr.length);\n        if (arr.length === 0) return;\n        let type = this.type || new $gfJaN$restructure.Buffer;\n        // find maximum offset to detminine offset type\n        let sizes = [];\n        let offset = 1;\n        for (let item of arr){\n            let s = type.size(item, parent);\n            sizes.push(s);\n            offset += s;\n        }\n        let offsetType;\n        if (offset <= 0xff) offsetType = $gfJaN$restructure.uint8;\n        else if (offset <= 0xffff) offsetType = $gfJaN$restructure.uint16;\n        else if (offset <= 0xffffff) offsetType = $gfJaN$restructure.uint24;\n        else if (offset <= 0xffffffff) offsetType = $gfJaN$restructure.uint32;\n        else throw new Error(\"Bad offset in CFFIndex\");\n        // write offset size\n        stream.writeUInt8(offsetType.size());\n        // write elements\n        offset = 1;\n        offsetType.encode(stream, offset);\n        for (let size of sizes){\n            offset += size;\n            offsetType.encode(stream, offset);\n        }\n        for (let item1 of arr)type.encode(stream, item1, parent);\n        return;\n    }\n    constructor(type){\n        this.type = type;\n    }\n}\n\n\n\n\n\n\nconst $f77b592c17132d70$var$FLOAT_EOF = 0xf;\nconst $f77b592c17132d70$var$FLOAT_LOOKUP = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \".\",\n    \"E\",\n    \"E-\",\n    null,\n    \"-\"\n];\nconst $f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP = {\n    \".\": 10,\n    \"E\": 11,\n    \"E-\": 12,\n    \"-\": 14\n};\nclass $f77b592c17132d70$export$2e2bcd8739ae039 {\n    static decode(stream, value) {\n        if (32 <= value && value <= 246) return value - 139;\n        if (247 <= value && value <= 250) return (value - 247) * 256 + stream.readUInt8() + 108;\n        if (251 <= value && value <= 254) return -(value - 251) * 256 - stream.readUInt8() - 108;\n        if (value === 28) return stream.readInt16BE();\n        if (value === 29) return stream.readInt32BE();\n        if (value === 30) {\n            let str = \"\";\n            while(true){\n                let b = stream.readUInt8();\n                let n1 = b >> 4;\n                if (n1 === $f77b592c17132d70$var$FLOAT_EOF) break;\n                str += $f77b592c17132d70$var$FLOAT_LOOKUP[n1];\n                let n2 = b & 15;\n                if (n2 === $f77b592c17132d70$var$FLOAT_EOF) break;\n                str += $f77b592c17132d70$var$FLOAT_LOOKUP[n2];\n            }\n            return parseFloat(str);\n        }\n        return null;\n    }\n    static size(value) {\n        // if the value needs to be forced to the largest size (32 bit)\n        // e.g. for unknown pointers, set to 32768\n        if (value.forceLarge) value = 32768;\n        if ((value | 0) !== value) {\n            let str = \"\" + value;\n            return 1 + Math.ceil((str.length + 1) / 2);\n        } else if (-107 <= value && value <= 107) return 1;\n        else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) return 2;\n        else if (-32768 <= value && value <= 32767) return 3;\n        else return 5;\n    }\n    static encode(stream, value) {\n        // if the value needs to be forced to the largest size (32 bit)\n        // e.g. for unknown pointers, save the old value and set to 32768\n        let val = Number(value);\n        if (value.forceLarge) {\n            stream.writeUInt8(29);\n            return stream.writeInt32BE(val);\n        } else if ((val | 0) !== val) {\n            stream.writeUInt8(30);\n            let str = \"\" + val;\n            for(let i = 0; i < str.length; i += 2){\n                let c1 = str[i];\n                let n1 = $f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP[c1] || +c1;\n                if (i === str.length - 1) var n2 = $f77b592c17132d70$var$FLOAT_EOF;\n                else {\n                    let c2 = str[i + 1];\n                    var n2 = $f77b592c17132d70$var$FLOAT_ENCODE_LOOKUP[c2] || +c2;\n                }\n                stream.writeUInt8(n1 << 4 | n2 & 15);\n            }\n            if (n2 !== $f77b592c17132d70$var$FLOAT_EOF) return stream.writeUInt8($f77b592c17132d70$var$FLOAT_EOF << 4);\n        } else if (-107 <= val && val <= 107) return stream.writeUInt8(val + 139);\n        else if (108 <= val && val <= 1131) {\n            val -= 108;\n            stream.writeUInt8((val >> 8) + 247);\n            return stream.writeUInt8(val & 0xff);\n        } else if (-1131 <= val && val <= -108) {\n            val = -val - 108;\n            stream.writeUInt8((val >> 8) + 251);\n            return stream.writeUInt8(val & 0xff);\n        } else if (-32768 <= val && val <= 32767) {\n            stream.writeUInt8(28);\n            return stream.writeInt16BE(val);\n        } else {\n            stream.writeUInt8(29);\n            return stream.writeInt32BE(val);\n        }\n    }\n}\n\n\n\nclass $efe622f40a9c35bd$export$2e2bcd8739ae039 {\n    decodeOperands(type, stream, ret, operands) {\n        if (Array.isArray(type)) return operands.map((op, i)=>this.decodeOperands(type[i], stream, ret, [\n                op\n            ]));\n        else if (type.decode != null) return type.decode(stream, ret, operands);\n        else switch(type){\n            case \"number\":\n            case \"offset\":\n            case \"sid\":\n                return operands[0];\n            case \"boolean\":\n                return !!operands[0];\n            default:\n                return operands;\n        }\n    }\n    encodeOperands(type, stream, ctx, operands) {\n        if (Array.isArray(type)) return operands.map((op, i)=>this.encodeOperands(type[i], stream, ctx, op)[0]);\n        else if (type.encode != null) return type.encode(stream, operands, ctx);\n        else if (typeof operands === \"number\") return [\n            operands\n        ];\n        else if (typeof operands === \"boolean\") return [\n            +operands\n        ];\n        else if (Array.isArray(operands)) return operands;\n        else return [\n            operands\n        ];\n    }\n    decode(stream, parent) {\n        let end = stream.pos + parent.length;\n        let ret = {};\n        let operands = [];\n        // define hidden properties\n        Object.defineProperties(ret, {\n            parent: {\n                value: parent\n            },\n            _startOffset: {\n                value: stream.pos\n            }\n        });\n        // fill in defaults\n        for(let key in this.fields){\n            let field = this.fields[key];\n            ret[field[1]] = field[3];\n        }\n        while(stream.pos < end){\n            let b = stream.readUInt8();\n            if (b < 28) {\n                if (b === 12) b = b << 8 | stream.readUInt8();\n                let field = this.fields[b];\n                if (!field) throw new Error(`Unknown operator ${b}`);\n                let val = this.decodeOperands(field[2], stream, ret, operands);\n                if (val != null) {\n                    if (val instanceof (0, $gfJaN$restructure.PropertyDescriptor)) Object.defineProperty(ret, field[1], val);\n                    else ret[field[1]] = val;\n                }\n                operands = [];\n            } else operands.push((0, $f77b592c17132d70$export$2e2bcd8739ae039).decode(stream, b));\n        }\n        return ret;\n    }\n    size(dict, parent, includePointers = true) {\n        let ctx = {\n            parent: parent,\n            val: dict,\n            pointerSize: 0,\n            startOffset: parent.startOffset || 0\n        };\n        let len = 0;\n        for(let k in this.fields){\n            let field = this.fields[k];\n            let val = dict[field[1]];\n            if (val == null || (0, ($parcel$interopDefault($gfJaN$fastdeepequal)))(val, field[3])) continue;\n            let operands = this.encodeOperands(field[2], null, ctx, val);\n            for (let op of operands)len += (0, $f77b592c17132d70$export$2e2bcd8739ae039).size(op);\n            let key = Array.isArray(field[0]) ? field[0] : [\n                field[0]\n            ];\n            len += key.length;\n        }\n        if (includePointers) len += ctx.pointerSize;\n        return len;\n    }\n    encode(stream, dict, parent) {\n        let ctx = {\n            pointers: [],\n            startOffset: stream.pos,\n            parent: parent,\n            val: dict,\n            pointerSize: 0\n        };\n        ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n        for (let field of this.ops){\n            let val = dict[field[1]];\n            if (val == null || (0, ($parcel$interopDefault($gfJaN$fastdeepequal)))(val, field[3])) continue;\n            let operands = this.encodeOperands(field[2], stream, ctx, val);\n            for (let op of operands)(0, $f77b592c17132d70$export$2e2bcd8739ae039).encode(stream, op);\n            let key = Array.isArray(field[0]) ? field[0] : [\n                field[0]\n            ];\n            for (let op1 of key)stream.writeUInt8(op1);\n        }\n        let i = 0;\n        while(i < ctx.pointers.length){\n            let ptr = ctx.pointers[i++];\n            ptr.type.encode(stream, ptr.val, ptr.parent);\n        }\n        return;\n    }\n    constructor(ops = []){\n        this.ops = ops;\n        this.fields = {};\n        for (let field of ops){\n            let key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n            this.fields[key] = field;\n        }\n    }\n}\n\n\n\n\nclass $4aa1b0749c2770f8$export$2e2bcd8739ae039 extends $gfJaN$restructure.Pointer {\n    decode(stream, parent, operands) {\n        this.offsetType = {\n            decode: ()=>operands[0]\n        };\n        return super.decode(stream, parent, operands);\n    }\n    encode(stream, value, ctx) {\n        if (!stream) {\n            // compute the size (so ctx.pointerSize is correct)\n            this.offsetType = {\n                size: ()=>0\n            };\n            this.size(value, ctx);\n            return [\n                new $4aa1b0749c2770f8$var$Ptr(0)\n            ];\n        }\n        let ptr = null;\n        this.offsetType = {\n            encode: (stream, val)=>ptr = val\n        };\n        super.encode(stream, value, ctx);\n        return [\n            new $4aa1b0749c2770f8$var$Ptr(ptr)\n        ];\n    }\n    constructor(type, options = {}){\n        if (options.type == null) options.type = \"global\";\n        super(null, type, options);\n    }\n}\nclass $4aa1b0749c2770f8$var$Ptr {\n    valueOf() {\n        return this.val;\n    }\n    constructor(val){\n        this.val = val;\n        this.forceLarge = true;\n    }\n}\n\n\n\n\n\nclass $15a0cbb3d09cf7ee$var$CFFBlendOp {\n    static decode(stream, parent, operands) {\n        let numBlends = operands.pop();\n        // TODO: actually blend. For now just consume the deltas\n        // since we don't use any of the values anyway.\n        while(operands.length > numBlends)operands.pop();\n    }\n}\nvar $15a0cbb3d09cf7ee$export$2e2bcd8739ae039 = new (0, $efe622f40a9c35bd$export$2e2bcd8739ae039)([\n    // key       name                    type                                          default\n    [\n        6,\n        \"BlueValues\",\n        \"delta\",\n        null\n    ],\n    [\n        7,\n        \"OtherBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        8,\n        \"FamilyBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        9,\n        \"FamilyOtherBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            9\n        ],\n        \"BlueScale\",\n        \"number\",\n        0.039625\n    ],\n    [\n        [\n            12,\n            10\n        ],\n        \"BlueShift\",\n        \"number\",\n        7\n    ],\n    [\n        [\n            12,\n            11\n        ],\n        \"BlueFuzz\",\n        \"number\",\n        1\n    ],\n    [\n        10,\n        \"StdHW\",\n        \"number\",\n        null\n    ],\n    [\n        11,\n        \"StdVW\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            12\n        ],\n        \"StemSnapH\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            13\n        ],\n        \"StemSnapV\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            14\n        ],\n        \"ForceBold\",\n        \"boolean\",\n        false\n    ],\n    [\n        [\n            12,\n            17\n        ],\n        \"LanguageGroup\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            18\n        ],\n        \"ExpansionFactor\",\n        \"number\",\n        0.06\n    ],\n    [\n        [\n            12,\n            19\n        ],\n        \"initialRandomSeed\",\n        \"number\",\n        0\n    ],\n    [\n        20,\n        \"defaultWidthX\",\n        \"number\",\n        0\n    ],\n    [\n        21,\n        \"nominalWidthX\",\n        \"number\",\n        0\n    ],\n    [\n        22,\n        \"vsindex\",\n        \"number\",\n        0\n    ],\n    [\n        23,\n        \"blend\",\n        $15a0cbb3d09cf7ee$var$CFFBlendOp,\n        null\n    ],\n    [\n        19,\n        \"Subrs\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039), {\n            type: \"local\"\n        }),\n        null\n    ]\n]);\n\n\nvar // Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\n$860d3574d7fa3a51$export$2e2bcd8739ae039 = [\n    \".notdef\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"questiondown\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"AE\",\n    \"ordfeminine\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"ae\",\n    \"dotlessi\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\",\n    \"onesuperior\",\n    \"logicalnot\",\n    \"mu\",\n    \"trademark\",\n    \"Eth\",\n    \"onehalf\",\n    \"plusminus\",\n    \"Thorn\",\n    \"onequarter\",\n    \"divide\",\n    \"brokenbar\",\n    \"degree\",\n    \"thorn\",\n    \"threequarters\",\n    \"twosuperior\",\n    \"registered\",\n    \"minus\",\n    \"eth\",\n    \"multiply\",\n    \"threesuperior\",\n    \"copyright\",\n    \"Aacute\",\n    \"Acircumflex\",\n    \"Adieresis\",\n    \"Agrave\",\n    \"Aring\",\n    \"Atilde\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ecircumflex\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Ntilde\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"Odieresis\",\n    \"Ograve\",\n    \"Otilde\",\n    \"Scaron\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Udieresis\",\n    \"Ugrave\",\n    \"Yacute\",\n    \"Ydieresis\",\n    \"Zcaron\",\n    \"aacute\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"agrave\",\n    \"aring\",\n    \"atilde\",\n    \"ccedilla\",\n    \"eacute\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"egrave\",\n    \"iacute\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"igrave\",\n    \"ntilde\",\n    \"oacute\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"ograve\",\n    \"otilde\",\n    \"scaron\",\n    \"uacute\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"ugrave\",\n    \"yacute\",\n    \"ydieresis\",\n    \"zcaron\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"Dotaccentsmall\",\n    \"Macronsmall\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\",\n    \"001.000\",\n    \"001.001\",\n    \"001.002\",\n    \"001.003\",\n    \"Black\",\n    \"Bold\",\n    \"Book\",\n    \"Light\",\n    \"Medium\",\n    \"Regular\",\n    \"Roman\",\n    \"Semibold\"\n];\n\n\nlet $c4ffe47cba1d7f36$export$dee0027060fa13bd = [\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"\",\n    \"questiondown\",\n    \"\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"\",\n    \"ring\",\n    \"cedilla\",\n    \"\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"AE\",\n    \"\",\n    \"ordfeminine\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"ae\",\n    \"\",\n    \"\",\n    \"\",\n    \"dotlessi\",\n    \"\",\n    \"\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\"\n];\nlet $c4ffe47cba1d7f36$export$4f58f497e14a53c3 = [\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"space\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"\",\n    \"\",\n    \"isuperior\",\n    \"\",\n    \"\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"\",\n    \"\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"\",\n    \"\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"\",\n    \"Dotaccentsmall\",\n    \"\",\n    \"\",\n    \"Macronsmall\",\n    \"\",\n    \"\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"\",\n    \"\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"\",\n    \"\",\n    \"\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"\",\n    \"\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\"\n];\n\n\nlet $1e7c7c16984e4427$export$c33b50336c234f16 = [\n    \".notdef\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"questiondown\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"AE\",\n    \"ordfeminine\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"ae\",\n    \"dotlessi\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\",\n    \"onesuperior\",\n    \"logicalnot\",\n    \"mu\",\n    \"trademark\",\n    \"Eth\",\n    \"onehalf\",\n    \"plusminus\",\n    \"Thorn\",\n    \"onequarter\",\n    \"divide\",\n    \"brokenbar\",\n    \"degree\",\n    \"thorn\",\n    \"threequarters\",\n    \"twosuperior\",\n    \"registered\",\n    \"minus\",\n    \"eth\",\n    \"multiply\",\n    \"threesuperior\",\n    \"copyright\",\n    \"Aacute\",\n    \"Acircumflex\",\n    \"Adieresis\",\n    \"Agrave\",\n    \"Aring\",\n    \"Atilde\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ecircumflex\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Ntilde\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"Odieresis\",\n    \"Ograve\",\n    \"Otilde\",\n    \"Scaron\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Udieresis\",\n    \"Ugrave\",\n    \"Yacute\",\n    \"Ydieresis\",\n    \"Zcaron\",\n    \"aacute\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"agrave\",\n    \"aring\",\n    \"atilde\",\n    \"ccedilla\",\n    \"eacute\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"egrave\",\n    \"iacute\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"igrave\",\n    \"ntilde\",\n    \"oacute\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"ograve\",\n    \"otilde\",\n    \"scaron\",\n    \"uacute\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"ugrave\",\n    \"yacute\",\n    \"ydieresis\",\n    \"zcaron\"\n];\nlet $1e7c7c16984e4427$export$3ed0f9e1fee8d489 = [\n    \".notdef\",\n    \"space\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"Dotaccentsmall\",\n    \"Macronsmall\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\"\n];\nlet $1e7c7c16984e4427$export$dc28be11139d4120 = [\n    \".notdef\",\n    \"space\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"hyphensuperior\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"centoldstyle\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\"\n];\n\n\n\n//########################\n// Scripts and Languages #\n//########################\nlet $b6dd765146ad212a$var$LangSysTable = new $gfJaN$restructure.Struct({\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    reqFeatureIndex: $gfJaN$restructure.uint16,\n    featureCount: $gfJaN$restructure.uint16,\n    featureIndexes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"featureCount\")\n});\nlet $b6dd765146ad212a$var$LangSysRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    langSys: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$LangSysTable, {\n        type: \"parent\"\n    })\n});\nlet $b6dd765146ad212a$var$Script = new $gfJaN$restructure.Struct({\n    defaultLangSys: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$LangSysTable),\n    count: $gfJaN$restructure.uint16,\n    langSysRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LangSysRecord, \"count\")\n});\nlet $b6dd765146ad212a$var$ScriptRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    script: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$Script, {\n        type: \"parent\"\n    })\n});\nlet $b6dd765146ad212a$export$3e15fc05ce864229 = new $gfJaN$restructure.Array($b6dd765146ad212a$var$ScriptRecord, $gfJaN$restructure.uint16);\n//#######################\n// Features and Lookups #\n//#######################\nlet $b6dd765146ad212a$var$FeatureParams = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    nameID: $gfJaN$restructure.uint16\n});\nlet $b6dd765146ad212a$export$6e91cf7616333d5 = new $gfJaN$restructure.Struct({\n    featureParams: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$FeatureParams),\n    lookupCount: $gfJaN$restructure.uint16,\n    lookupListIndexes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"lookupCount\")\n});\nlet $b6dd765146ad212a$var$FeatureRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    feature: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$6e91cf7616333d5, {\n        type: \"parent\"\n    })\n});\nlet $b6dd765146ad212a$export$aa18130def4b6cb4 = new $gfJaN$restructure.Array($b6dd765146ad212a$var$FeatureRecord, $gfJaN$restructure.uint16);\nlet $b6dd765146ad212a$var$LookupFlags = new $gfJaN$restructure.Struct({\n    markAttachmentType: $gfJaN$restructure.uint8,\n    flags: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n        \"rightToLeft\",\n        \"ignoreBaseGlyphs\",\n        \"ignoreLigatures\",\n        \"ignoreMarks\",\n        \"useMarkFilteringSet\"\n    ])\n});\nfunction $b6dd765146ad212a$export$df0008c6ff2da22a(SubTable) {\n    let Lookup = new $gfJaN$restructure.Struct({\n        lookupType: $gfJaN$restructure.uint16,\n        flags: $b6dd765146ad212a$var$LookupFlags,\n        subTableCount: $gfJaN$restructure.uint16,\n        subTables: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, SubTable), \"subTableCount\"),\n        markFilteringSet: new $gfJaN$restructure.Optional($gfJaN$restructure.uint16, (t)=>t.flags.flags.useMarkFilteringSet)\n    });\n    return new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, Lookup), $gfJaN$restructure.uint16);\n}\n//#################\n// Coverage Table #\n//#################\nlet $b6dd765146ad212a$var$RangeRecord = new $gfJaN$restructure.Struct({\n    start: $gfJaN$restructure.uint16,\n    end: $gfJaN$restructure.uint16,\n    startCoverageIndex: $gfJaN$restructure.uint16\n});\nlet $b6dd765146ad212a$export$17608c3f81a6111 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        glyphCount: $gfJaN$restructure.uint16,\n        glyphs: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"glyphCount\")\n    },\n    2: {\n        rangeCount: $gfJaN$restructure.uint16,\n        rangeRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$RangeRecord, \"rangeCount\")\n    }\n});\n//#########################\n// Class Definition Table #\n//#########################\nlet $b6dd765146ad212a$var$ClassRangeRecord = new $gfJaN$restructure.Struct({\n    start: $gfJaN$restructure.uint16,\n    end: $gfJaN$restructure.uint16,\n    class: $gfJaN$restructure.uint16\n});\nlet $b6dd765146ad212a$export$843d551fbbafef71 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        startGlyph: $gfJaN$restructure.uint16,\n        glyphCount: $gfJaN$restructure.uint16,\n        classValueArray: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"glyphCount\")\n    },\n    2: {\n        classRangeCount: $gfJaN$restructure.uint16,\n        classRangeRecord: new $gfJaN$restructure.Array($b6dd765146ad212a$var$ClassRangeRecord, \"classRangeCount\")\n    }\n});\nlet $b6dd765146ad212a$export$8215d14a63d9fb10 = new $gfJaN$restructure.Struct({\n    a: $gfJaN$restructure.uint16,\n    b: $gfJaN$restructure.uint16,\n    deltaFormat: $gfJaN$restructure.uint16\n});\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\nlet $b6dd765146ad212a$var$LookupRecord = new $gfJaN$restructure.Struct({\n    sequenceIndex: $gfJaN$restructure.uint16,\n    lookupListIndex: $gfJaN$restructure.uint16\n});\nlet $b6dd765146ad212a$var$Rule = new $gfJaN$restructure.Struct({\n    glyphCount: $gfJaN$restructure.uint16,\n    lookupCount: $gfJaN$restructure.uint16,\n    input: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.glyphCount - 1),\n    lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n});\nlet $b6dd765146ad212a$var$RuleSet = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$Rule), $gfJaN$restructure.uint16);\nlet $b6dd765146ad212a$var$ClassRule = new $gfJaN$restructure.Struct({\n    glyphCount: $gfJaN$restructure.uint16,\n    lookupCount: $gfJaN$restructure.uint16,\n    classes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.glyphCount - 1),\n    lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n});\nlet $b6dd765146ad212a$var$ClassSet = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ClassRule), $gfJaN$restructure.uint16);\nlet $b6dd765146ad212a$export$841858b892ce1f4c = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111),\n        ruleSetCount: $gfJaN$restructure.uint16,\n        ruleSets: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$RuleSet), \"ruleSetCount\")\n    },\n    2: {\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111),\n        classDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$843d551fbbafef71),\n        classSetCnt: $gfJaN$restructure.uint16,\n        classSet: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ClassSet), \"classSetCnt\")\n    },\n    3: {\n        glyphCount: $gfJaN$restructure.uint16,\n        lookupCount: $gfJaN$restructure.uint16,\n        coverages: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111), \"glyphCount\"),\n        lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n    }\n});\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\nlet $b6dd765146ad212a$var$ChainRule = new $gfJaN$restructure.Struct({\n    backtrackGlyphCount: $gfJaN$restructure.uint16,\n    backtrack: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"backtrackGlyphCount\"),\n    inputGlyphCount: $gfJaN$restructure.uint16,\n    input: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.inputGlyphCount - 1),\n    lookaheadGlyphCount: $gfJaN$restructure.uint16,\n    lookahead: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"lookaheadGlyphCount\"),\n    lookupCount: $gfJaN$restructure.uint16,\n    lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n});\nlet $b6dd765146ad212a$var$ChainRuleSet = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ChainRule), $gfJaN$restructure.uint16);\nlet $b6dd765146ad212a$export$5e6d09e6861162f6 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111),\n        chainCount: $gfJaN$restructure.uint16,\n        chainRuleSets: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ChainRuleSet), \"chainCount\")\n    },\n    2: {\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111),\n        backtrackClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$843d551fbbafef71),\n        inputClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$843d551fbbafef71),\n        lookaheadClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$843d551fbbafef71),\n        chainCount: $gfJaN$restructure.uint16,\n        chainClassSet: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$var$ChainRuleSet), \"chainCount\")\n    },\n    3: {\n        backtrackGlyphCount: $gfJaN$restructure.uint16,\n        backtrackCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111), \"backtrackGlyphCount\"),\n        inputGlyphCount: $gfJaN$restructure.uint16,\n        inputCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111), \"inputGlyphCount\"),\n        lookaheadGlyphCount: $gfJaN$restructure.uint16,\n        lookaheadCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b6dd765146ad212a$export$17608c3f81a6111), \"lookaheadGlyphCount\"),\n        lookupCount: $gfJaN$restructure.uint16,\n        lookupRecords: new $gfJaN$restructure.Array($b6dd765146ad212a$var$LookupRecord, \"lookupCount\")\n    }\n});\n\n\n\n/*******************\n * Variation Store *\n *******************/ let $2e4adcda047b3383$var$F2DOT14 = new $gfJaN$restructure.Fixed(16, \"BE\", 14);\nlet $2e4adcda047b3383$var$RegionAxisCoordinates = new $gfJaN$restructure.Struct({\n    startCoord: $2e4adcda047b3383$var$F2DOT14,\n    peakCoord: $2e4adcda047b3383$var$F2DOT14,\n    endCoord: $2e4adcda047b3383$var$F2DOT14\n});\nlet $2e4adcda047b3383$var$VariationRegionList = new $gfJaN$restructure.Struct({\n    axisCount: $gfJaN$restructure.uint16,\n    regionCount: $gfJaN$restructure.uint16,\n    variationRegions: new $gfJaN$restructure.Array(new $gfJaN$restructure.Array($2e4adcda047b3383$var$RegionAxisCoordinates, \"axisCount\"), \"regionCount\")\n});\nlet $2e4adcda047b3383$var$DeltaSet = new $gfJaN$restructure.Struct({\n    shortDeltas: new $gfJaN$restructure.Array($gfJaN$restructure.int16, (t)=>t.parent.shortDeltaCount),\n    regionDeltas: new $gfJaN$restructure.Array($gfJaN$restructure.int8, (t)=>t.parent.regionIndexCount - t.parent.shortDeltaCount),\n    deltas: (t)=>t.shortDeltas.concat(t.regionDeltas)\n});\nlet $2e4adcda047b3383$var$ItemVariationData = new $gfJaN$restructure.Struct({\n    itemCount: $gfJaN$restructure.uint16,\n    shortDeltaCount: $gfJaN$restructure.uint16,\n    regionIndexCount: $gfJaN$restructure.uint16,\n    regionIndexes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"regionIndexCount\"),\n    deltaSets: new $gfJaN$restructure.Array($2e4adcda047b3383$var$DeltaSet, \"itemCount\")\n});\nlet $2e4adcda047b3383$export$fe1b122a2710f241 = new $gfJaN$restructure.Struct({\n    format: $gfJaN$restructure.uint16,\n    variationRegionList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$VariationRegionList),\n    variationDataCount: $gfJaN$restructure.uint16,\n    itemVariationData: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$ItemVariationData), \"variationDataCount\")\n});\n/**********************\n * Feature Variations *\n **********************/ let $2e4adcda047b3383$var$ConditionTable = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        axisIndex: $gfJaN$restructure.uint16,\n        axisIndex: $gfJaN$restructure.uint16,\n        filterRangeMinValue: $2e4adcda047b3383$var$F2DOT14,\n        filterRangeMaxValue: $2e4adcda047b3383$var$F2DOT14\n    }\n});\nlet $2e4adcda047b3383$var$ConditionSet = new $gfJaN$restructure.Struct({\n    conditionCount: $gfJaN$restructure.uint16,\n    conditionTable: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$ConditionTable), \"conditionCount\")\n});\nlet $2e4adcda047b3383$var$FeatureTableSubstitutionRecord = new $gfJaN$restructure.Struct({\n    featureIndex: $gfJaN$restructure.uint16,\n    alternateFeatureTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $b6dd765146ad212a$export$6e91cf7616333d5), {\n        type: \"parent\"\n    })\n});\nlet $2e4adcda047b3383$var$FeatureTableSubstitution = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    substitutionCount: $gfJaN$restructure.uint16,\n    substitutions: new $gfJaN$restructure.Array($2e4adcda047b3383$var$FeatureTableSubstitutionRecord, \"substitutionCount\")\n});\nlet $2e4adcda047b3383$var$FeatureVariationRecord = new $gfJaN$restructure.Struct({\n    conditionSet: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$ConditionSet, {\n        type: \"parent\"\n    }),\n    featureTableSubstitution: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $2e4adcda047b3383$var$FeatureTableSubstitution, {\n        type: \"parent\"\n    })\n});\nlet $2e4adcda047b3383$export$441b70b7971dd419 = new $gfJaN$restructure.Struct({\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    featureVariationRecordCount: $gfJaN$restructure.uint32,\n    featureVariationRecords: new $gfJaN$restructure.Array($2e4adcda047b3383$var$FeatureVariationRecord, \"featureVariationRecordCount\")\n});\n\n\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\nclass $5b547cf9e5da519b$var$PredefinedOp {\n    decode(stream, parent, operands) {\n        if (this.predefinedOps[operands[0]]) return this.predefinedOps[operands[0]];\n        return this.type.decode(stream, parent, operands);\n    }\n    size(value, ctx) {\n        return this.type.size(value, ctx);\n    }\n    encode(stream, value, ctx) {\n        let index = this.predefinedOps.indexOf(value);\n        if (index !== -1) return index;\n        return this.type.encode(stream, value, ctx);\n    }\n    constructor(predefinedOps, type){\n        this.predefinedOps = predefinedOps;\n        this.type = type;\n    }\n}\nclass $5b547cf9e5da519b$var$CFFEncodingVersion extends $gfJaN$restructure.Number {\n    decode(stream) {\n        return $gfJaN$restructure.uint8.decode(stream) & 0x7f;\n    }\n    constructor(){\n        super(\"UInt8\");\n    }\n}\nlet $5b547cf9e5da519b$var$Range1 = new $gfJaN$restructure.Struct({\n    first: $gfJaN$restructure.uint16,\n    nLeft: $gfJaN$restructure.uint8\n});\nlet $5b547cf9e5da519b$var$Range2 = new $gfJaN$restructure.Struct({\n    first: $gfJaN$restructure.uint16,\n    nLeft: $gfJaN$restructure.uint16\n});\nlet $5b547cf9e5da519b$var$CFFCustomEncoding = new $gfJaN$restructure.VersionedStruct(new $5b547cf9e5da519b$var$CFFEncodingVersion(), {\n    0: {\n        nCodes: $gfJaN$restructure.uint8,\n        codes: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"nCodes\")\n    },\n    1: {\n        nRanges: $gfJaN$restructure.uint8,\n        ranges: new $gfJaN$restructure.Array($5b547cf9e5da519b$var$Range1, \"nRanges\")\n    }\n});\nlet $5b547cf9e5da519b$var$CFFEncoding = new $5b547cf9e5da519b$var$PredefinedOp([\n    (0, $c4ffe47cba1d7f36$export$dee0027060fa13bd),\n    (0, $c4ffe47cba1d7f36$export$4f58f497e14a53c3)\n], new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$CFFCustomEncoding, {\n    lazy: true\n}));\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\nclass $5b547cf9e5da519b$var$RangeArray extends $gfJaN$restructure.Array {\n    decode(stream, parent) {\n        let length = (0, $gfJaN$restructure.resolveLength)(this.length, stream, parent);\n        let count = 0;\n        let res = [];\n        while(count < length){\n            let range = this.type.decode(stream, parent);\n            range.offset = count;\n            count += range.nLeft + 1;\n            res.push(range);\n        }\n        return res;\n    }\n}\nlet $5b547cf9e5da519b$var$CFFCustomCharset = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint8, {\n    0: {\n        glyphs: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.parent.CharStrings.length - 1)\n    },\n    1: {\n        ranges: new $5b547cf9e5da519b$var$RangeArray($5b547cf9e5da519b$var$Range1, (t)=>t.parent.CharStrings.length - 1)\n    },\n    2: {\n        ranges: new $5b547cf9e5da519b$var$RangeArray($5b547cf9e5da519b$var$Range2, (t)=>t.parent.CharStrings.length - 1)\n    }\n});\nlet $5b547cf9e5da519b$var$CFFCharset = new $5b547cf9e5da519b$var$PredefinedOp([\n    (0, $1e7c7c16984e4427$export$c33b50336c234f16),\n    (0, $1e7c7c16984e4427$export$3ed0f9e1fee8d489),\n    (0, $1e7c7c16984e4427$export$dc28be11139d4120)\n], new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$CFFCustomCharset, {\n    lazy: true\n}));\nlet $5b547cf9e5da519b$var$FDRange3 = new $gfJaN$restructure.Struct({\n    first: $gfJaN$restructure.uint16,\n    fd: $gfJaN$restructure.uint8\n});\nlet $5b547cf9e5da519b$var$FDRange4 = new $gfJaN$restructure.Struct({\n    first: $gfJaN$restructure.uint32,\n    fd: $gfJaN$restructure.uint16\n});\nlet $5b547cf9e5da519b$var$FDSelect = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint8, {\n    0: {\n        fds: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, (t)=>t.parent.CharStrings.length)\n    },\n    3: {\n        nRanges: $gfJaN$restructure.uint16,\n        ranges: new $gfJaN$restructure.Array($5b547cf9e5da519b$var$FDRange3, \"nRanges\"),\n        sentinel: $gfJaN$restructure.uint16\n    },\n    4: {\n        nRanges: $gfJaN$restructure.uint32,\n        ranges: new $gfJaN$restructure.Array($5b547cf9e5da519b$var$FDRange4, \"nRanges\"),\n        sentinel: $gfJaN$restructure.uint32\n    }\n});\nlet $5b547cf9e5da519b$var$ptr = new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)((0, $15a0cbb3d09cf7ee$export$2e2bcd8739ae039));\nclass $5b547cf9e5da519b$var$CFFPrivateOp {\n    decode(stream, parent, operands) {\n        parent.length = operands[0];\n        return $5b547cf9e5da519b$var$ptr.decode(stream, parent, [\n            operands[1]\n        ]);\n    }\n    size(dict, ctx) {\n        return [\n            (0, $15a0cbb3d09cf7ee$export$2e2bcd8739ae039).size(dict, ctx, false),\n            $5b547cf9e5da519b$var$ptr.size(dict, ctx)[0]\n        ];\n    }\n    encode(stream, dict, ctx) {\n        return [\n            (0, $15a0cbb3d09cf7ee$export$2e2bcd8739ae039).size(dict, ctx, false),\n            $5b547cf9e5da519b$var$ptr.encode(stream, dict, ctx)[0]\n        ];\n    }\n}\nlet $5b547cf9e5da519b$var$FontDict = new (0, $efe622f40a9c35bd$export$2e2bcd8739ae039)([\n    // key       name                   type(s)                                 default\n    [\n        18,\n        \"Private\",\n        new $5b547cf9e5da519b$var$CFFPrivateOp,\n        null\n    ],\n    [\n        [\n            12,\n            38\n        ],\n        \"FontName\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        [\n            12,\n            5\n        ],\n        \"PaintType\",\n        \"number\",\n        0\n    ], \n]);\nlet $5b547cf9e5da519b$var$CFFTopDict = new (0, $efe622f40a9c35bd$export$2e2bcd8739ae039)([\n    // key       name                   type(s)                                 default\n    [\n        [\n            12,\n            30\n        ],\n        \"ROS\",\n        [\n            \"sid\",\n            \"sid\",\n            \"number\"\n        ],\n        null\n    ],\n    [\n        0,\n        \"version\",\n        \"sid\",\n        null\n    ],\n    [\n        1,\n        \"Notice\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            0\n        ],\n        \"Copyright\",\n        \"sid\",\n        null\n    ],\n    [\n        2,\n        \"FullName\",\n        \"sid\",\n        null\n    ],\n    [\n        3,\n        \"FamilyName\",\n        \"sid\",\n        null\n    ],\n    [\n        4,\n        \"Weight\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            1\n        ],\n        \"isFixedPitch\",\n        \"boolean\",\n        false\n    ],\n    [\n        [\n            12,\n            2\n        ],\n        \"ItalicAngle\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            3\n        ],\n        \"UnderlinePosition\",\n        \"number\",\n        -100\n    ],\n    [\n        [\n            12,\n            4\n        ],\n        \"UnderlineThickness\",\n        \"number\",\n        50\n    ],\n    [\n        [\n            12,\n            5\n        ],\n        \"PaintType\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            6\n        ],\n        \"CharstringType\",\n        \"number\",\n        2\n    ],\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        13,\n        \"UniqueID\",\n        \"number\",\n        null\n    ],\n    [\n        5,\n        \"FontBBox\",\n        \"array\",\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ],\n    [\n        [\n            12,\n            8\n        ],\n        \"StrokeWidth\",\n        \"number\",\n        0\n    ],\n    [\n        14,\n        \"XUID\",\n        \"array\",\n        null\n    ],\n    [\n        15,\n        \"charset\",\n        $5b547cf9e5da519b$var$CFFCharset,\n        (0, $1e7c7c16984e4427$export$c33b50336c234f16)\n    ],\n    [\n        16,\n        \"Encoding\",\n        $5b547cf9e5da519b$var$CFFEncoding,\n        (0, $c4ffe47cba1d7f36$export$dee0027060fa13bd)\n    ],\n    [\n        17,\n        \"CharStrings\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039)),\n        null\n    ],\n    [\n        18,\n        \"Private\",\n        new $5b547cf9e5da519b$var$CFFPrivateOp,\n        null\n    ],\n    [\n        [\n            12,\n            20\n        ],\n        \"SyntheticBase\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            21\n        ],\n        \"PostScript\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            22\n        ],\n        \"BaseFontName\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            23\n        ],\n        \"BaseFontBlend\",\n        \"delta\",\n        null\n    ],\n    // CID font specific\n    [\n        [\n            12,\n            31\n        ],\n        \"CIDFontVersion\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            32\n        ],\n        \"CIDFontRevision\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            33\n        ],\n        \"CIDFontType\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            34\n        ],\n        \"CIDCount\",\n        \"number\",\n        8720\n    ],\n    [\n        [\n            12,\n            35\n        ],\n        \"UIDBase\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            37\n        ],\n        \"FDSelect\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$FDSelect),\n        null\n    ],\n    [\n        [\n            12,\n            36\n        ],\n        \"FDArray\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$FontDict)),\n        null\n    ],\n    [\n        [\n            12,\n            38\n        ],\n        \"FontName\",\n        \"sid\",\n        null\n    ]\n]);\nlet $5b547cf9e5da519b$var$VariationStore = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint16,\n    itemVariationStore: (0, $2e4adcda047b3383$export$fe1b122a2710f241)\n});\nlet $5b547cf9e5da519b$var$CFF2TopDict = new (0, $efe622f40a9c35bd$export$2e2bcd8739ae039)([\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        17,\n        \"CharStrings\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039)),\n        null\n    ],\n    [\n        [\n            12,\n            37\n        ],\n        \"FDSelect\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$FDSelect),\n        null\n    ],\n    [\n        [\n            12,\n            36\n        ],\n        \"FDArray\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)(new (0, $9eaea3754914a290$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$FontDict)),\n        null\n    ],\n    [\n        24,\n        \"vstore\",\n        new (0, $4aa1b0749c2770f8$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$VariationStore),\n        null\n    ],\n    [\n        25,\n        \"maxstack\",\n        \"number\",\n        193\n    ]\n]);\nlet $5b547cf9e5da519b$var$CFFTop = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.fixed16, {\n    1: {\n        hdrSize: $gfJaN$restructure.uint8,\n        offSize: $gfJaN$restructure.uint8,\n        nameIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)(new $gfJaN$restructure.String(\"length\")),\n        topDictIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)($5b547cf9e5da519b$var$CFFTopDict),\n        stringIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)(new $gfJaN$restructure.String(\"length\")),\n        globalSubrIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)\n    },\n    2: {\n        hdrSize: $gfJaN$restructure.uint8,\n        length: $gfJaN$restructure.uint16,\n        topDict: $5b547cf9e5da519b$var$CFF2TopDict,\n        globalSubrIndex: new (0, $9eaea3754914a290$export$2e2bcd8739ae039)\n    }\n});\nvar $5b547cf9e5da519b$export$2e2bcd8739ae039 = $5b547cf9e5da519b$var$CFFTop;\n\n\n\n\nclass $f717432b360040c7$var$CFFFont {\n    static decode(stream) {\n        return new $f717432b360040c7$var$CFFFont(stream);\n    }\n    decode() {\n        let start = this.stream.pos;\n        let top = (0, $5b547cf9e5da519b$export$2e2bcd8739ae039).decode(this.stream);\n        for(let key in top){\n            let val = top[key];\n            this[key] = val;\n        }\n        if (this.version < 2) {\n            if (this.topDictIndex.length !== 1) throw new Error(\"Only a single font is allowed in CFF\");\n            this.topDict = this.topDictIndex[0];\n        }\n        this.isCIDFont = this.topDict.ROS != null;\n        return this;\n    }\n    string(sid) {\n        if (this.version >= 2) return null;\n        if (sid < (0, $860d3574d7fa3a51$export$2e2bcd8739ae039).length) return (0, $860d3574d7fa3a51$export$2e2bcd8739ae039)[sid];\n        return this.stringIndex[sid - (0, $860d3574d7fa3a51$export$2e2bcd8739ae039).length];\n    }\n    get postscriptName() {\n        if (this.version < 2) return this.nameIndex[0];\n        return null;\n    }\n    get fullName() {\n        return this.string(this.topDict.FullName);\n    }\n    get familyName() {\n        return this.string(this.topDict.FamilyName);\n    }\n    getCharString(glyph) {\n        this.stream.pos = this.topDict.CharStrings[glyph].offset;\n        return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n    }\n    getGlyphName(gid) {\n        // CFF2 glyph names are in the post table.\n        if (this.version >= 2) return null;\n        // CID-keyed fonts don't have glyph names\n        if (this.isCIDFont) return null;\n        let { charset: charset  } = this.topDict;\n        if (Array.isArray(charset)) return charset[gid];\n        if (gid === 0) return \".notdef\";\n        gid -= 1;\n        switch(charset.version){\n            case 0:\n                return this.string(charset.glyphs[gid]);\n            case 1:\n            case 2:\n                for(let i = 0; i < charset.ranges.length; i++){\n                    let range = charset.ranges[i];\n                    if (range.offset <= gid && gid <= range.offset + range.nLeft) return this.string(range.first + (gid - range.offset));\n                }\n                break;\n        }\n        return null;\n    }\n    fdForGlyph(gid) {\n        if (!this.topDict.FDSelect) return null;\n        switch(this.topDict.FDSelect.version){\n            case 0:\n                return this.topDict.FDSelect.fds[gid];\n            case 3:\n            case 4:\n                let { ranges: ranges  } = this.topDict.FDSelect;\n                let low = 0;\n                let high = ranges.length - 1;\n                while(low <= high){\n                    let mid = low + high >> 1;\n                    if (gid < ranges[mid].first) high = mid - 1;\n                    else if (mid < high && gid >= ranges[mid + 1].first) low = mid + 1;\n                    else return ranges[mid].fd;\n                }\n            default:\n                throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`);\n        }\n    }\n    privateDictForGlyph(gid) {\n        if (this.topDict.FDSelect) {\n            let fd = this.fdForGlyph(gid);\n            if (this.topDict.FDArray[fd]) return this.topDict.FDArray[fd].Private;\n            return null;\n        }\n        if (this.version < 2) return this.topDict.Private;\n        return this.topDict.FDArray[0].Private;\n    }\n    constructor(stream){\n        this.stream = stream;\n        this.decode();\n    }\n}\nvar $f717432b360040c7$export$2e2bcd8739ae039 = $f717432b360040c7$var$CFFFont;\n\n\n\nlet $8cb7ae73ed7aa7d8$var$VerticalOrigin = new $gfJaN$restructure.Struct({\n    glyphIndex: $gfJaN$restructure.uint16,\n    vertOriginY: $gfJaN$restructure.int16\n});\nvar $8cb7ae73ed7aa7d8$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    defaultVertOriginY: $gfJaN$restructure.int16,\n    numVertOriginYMetrics: $gfJaN$restructure.uint16,\n    metrics: new $gfJaN$restructure.Array($8cb7ae73ed7aa7d8$var$VerticalOrigin, \"numVertOriginYMetrics\")\n});\n\n\n\n\nlet $20e0c7bbecb76d75$export$16b227cb15d716a0 = new $gfJaN$restructure.Struct({\n    height: $gfJaN$restructure.uint8,\n    width: $gfJaN$restructure.uint8,\n    horiBearingX: $gfJaN$restructure.int8,\n    horiBearingY: $gfJaN$restructure.int8,\n    horiAdvance: $gfJaN$restructure.uint8,\n    vertBearingX: $gfJaN$restructure.int8,\n    vertBearingY: $gfJaN$restructure.int8,\n    vertAdvance: $gfJaN$restructure.uint8\n});\nlet $20e0c7bbecb76d75$export$62c53e75f69bfe12 = new $gfJaN$restructure.Struct({\n    height: $gfJaN$restructure.uint8,\n    width: $gfJaN$restructure.uint8,\n    bearingX: $gfJaN$restructure.int8,\n    bearingY: $gfJaN$restructure.int8,\n    advance: $gfJaN$restructure.uint8\n});\nlet $20e0c7bbecb76d75$var$EBDTComponent = new $gfJaN$restructure.Struct({\n    glyph: $gfJaN$restructure.uint16,\n    xOffset: $gfJaN$restructure.int8,\n    yOffset: $gfJaN$restructure.int8\n});\nclass $20e0c7bbecb76d75$var$ByteAligned {\n}\nclass $20e0c7bbecb76d75$var$BitAligned {\n}\nlet $20e0c7bbecb76d75$export$f1f5ddeb20d14f = new $gfJaN$restructure.VersionedStruct(\"version\", {\n    1: {\n        metrics: $20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        data: $20e0c7bbecb76d75$var$ByteAligned\n    },\n    2: {\n        metrics: $20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        data: $20e0c7bbecb76d75$var$BitAligned\n    },\n    // format 3 is deprecated\n    // format 4 is not supported by Microsoft\n    5: {\n        data: $20e0c7bbecb76d75$var$BitAligned\n    },\n    6: {\n        metrics: $20e0c7bbecb76d75$export$16b227cb15d716a0,\n        data: $20e0c7bbecb76d75$var$ByteAligned\n    },\n    7: {\n        metrics: $20e0c7bbecb76d75$export$16b227cb15d716a0,\n        data: $20e0c7bbecb76d75$var$BitAligned\n    },\n    8: {\n        metrics: $20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        pad: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8),\n        numComponents: $gfJaN$restructure.uint16,\n        components: new $gfJaN$restructure.Array($20e0c7bbecb76d75$var$EBDTComponent, \"numComponents\")\n    },\n    9: {\n        metrics: $20e0c7bbecb76d75$export$16b227cb15d716a0,\n        pad: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8),\n        numComponents: $gfJaN$restructure.uint16,\n        components: new $gfJaN$restructure.Array($20e0c7bbecb76d75$var$EBDTComponent, \"numComponents\")\n    },\n    17: {\n        metrics: $20e0c7bbecb76d75$export$62c53e75f69bfe12,\n        dataLen: $gfJaN$restructure.uint32,\n        data: new $gfJaN$restructure.Buffer(\"dataLen\")\n    },\n    18: {\n        metrics: $20e0c7bbecb76d75$export$16b227cb15d716a0,\n        dataLen: $gfJaN$restructure.uint32,\n        data: new $gfJaN$restructure.Buffer(\"dataLen\")\n    },\n    19: {\n        dataLen: $gfJaN$restructure.uint32,\n        data: new $gfJaN$restructure.Buffer(\"dataLen\")\n    }\n});\n\n\nlet $035bb95c0cdb1f6d$var$SBitLineMetrics = new $gfJaN$restructure.Struct({\n    ascender: $gfJaN$restructure.int8,\n    descender: $gfJaN$restructure.int8,\n    widthMax: $gfJaN$restructure.uint8,\n    caretSlopeNumerator: $gfJaN$restructure.int8,\n    caretSlopeDenominator: $gfJaN$restructure.int8,\n    caretOffset: $gfJaN$restructure.int8,\n    minOriginSB: $gfJaN$restructure.int8,\n    minAdvanceSB: $gfJaN$restructure.int8,\n    maxBeforeBL: $gfJaN$restructure.int8,\n    minAfterBL: $gfJaN$restructure.int8,\n    pad: new $gfJaN$restructure.Reserved($gfJaN$restructure.int8, 2)\n});\nlet $035bb95c0cdb1f6d$var$CodeOffsetPair = new $gfJaN$restructure.Struct({\n    glyphCode: $gfJaN$restructure.uint16,\n    offset: $gfJaN$restructure.uint16\n});\nlet $035bb95c0cdb1f6d$var$IndexSubtable = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    header: {\n        imageFormat: $gfJaN$restructure.uint16,\n        imageDataOffset: $gfJaN$restructure.uint32\n    },\n    1: {\n        offsetArray: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, (t)=>t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n    },\n    2: {\n        imageSize: $gfJaN$restructure.uint32,\n        bigMetrics: (0, $20e0c7bbecb76d75$export$16b227cb15d716a0)\n    },\n    3: {\n        offsetArray: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n    },\n    4: {\n        numGlyphs: $gfJaN$restructure.uint32,\n        glyphArray: new $gfJaN$restructure.Array($035bb95c0cdb1f6d$var$CodeOffsetPair, (t)=>t.numGlyphs + 1)\n    },\n    5: {\n        imageSize: $gfJaN$restructure.uint32,\n        bigMetrics: (0, $20e0c7bbecb76d75$export$16b227cb15d716a0),\n        numGlyphs: $gfJaN$restructure.uint32,\n        glyphCodeArray: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numGlyphs\")\n    }\n});\nlet $035bb95c0cdb1f6d$var$IndexSubtableArray = new $gfJaN$restructure.Struct({\n    firstGlyphIndex: $gfJaN$restructure.uint16,\n    lastGlyphIndex: $gfJaN$restructure.uint16,\n    subtable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $035bb95c0cdb1f6d$var$IndexSubtable)\n});\nlet $035bb95c0cdb1f6d$var$BitmapSizeTable = new $gfJaN$restructure.Struct({\n    indexSubTableArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($035bb95c0cdb1f6d$var$IndexSubtableArray, 1), {\n        type: \"parent\"\n    }),\n    indexTablesSize: $gfJaN$restructure.uint32,\n    numberOfIndexSubTables: $gfJaN$restructure.uint32,\n    colorRef: $gfJaN$restructure.uint32,\n    hori: $035bb95c0cdb1f6d$var$SBitLineMetrics,\n    vert: $035bb95c0cdb1f6d$var$SBitLineMetrics,\n    startGlyphIndex: $gfJaN$restructure.uint16,\n    endGlyphIndex: $gfJaN$restructure.uint16,\n    ppemX: $gfJaN$restructure.uint8,\n    ppemY: $gfJaN$restructure.uint8,\n    bitDepth: $gfJaN$restructure.uint8,\n    flags: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n        \"horizontal\",\n        \"vertical\"\n    ])\n});\nvar $035bb95c0cdb1f6d$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint32,\n    numSizes: $gfJaN$restructure.uint32,\n    sizes: new $gfJaN$restructure.Array($035bb95c0cdb1f6d$var$BitmapSizeTable, \"numSizes\")\n});\n\n\n\nlet $73d13900b55a3c0c$var$ImageTable = new $gfJaN$restructure.Struct({\n    ppem: $gfJaN$restructure.uint16,\n    resolution: $gfJaN$restructure.uint16,\n    imageOffsets: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, \"void\"), (t)=>t.parent.parent.maxp.numGlyphs + 1)\n});\nvar // This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n$73d13900b55a3c0c$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    flags: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n        \"renderOutlines\"\n    ]),\n    numImgTables: $gfJaN$restructure.uint32,\n    imageTables: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $73d13900b55a3c0c$var$ImageTable), \"numImgTables\")\n});\n\n\n\nlet $97f6b8be3a347a8f$var$LayerRecord = new $gfJaN$restructure.Struct({\n    gid: $gfJaN$restructure.uint16,\n    paletteIndex: $gfJaN$restructure.uint16 // Index value to use in the appropriate palette. This value must\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\nlet $97f6b8be3a347a8f$var$BaseGlyphRecord = new $gfJaN$restructure.Struct({\n    gid: $gfJaN$restructure.uint16,\n    // and is not rendered for color.\n    firstLayerIndex: $gfJaN$restructure.uint16,\n    // There will be numLayers consecutive entries for this base glyph.\n    numLayers: $gfJaN$restructure.uint16\n});\nvar $97f6b8be3a347a8f$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numBaseGlyphRecords: $gfJaN$restructure.uint16,\n    baseGlyphRecord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($97f6b8be3a347a8f$var$BaseGlyphRecord, \"numBaseGlyphRecords\")),\n    layerRecords: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($97f6b8be3a347a8f$var$LayerRecord, \"numLayerRecords\"), {\n        lazy: true\n    }),\n    numLayerRecords: $gfJaN$restructure.uint16\n});\n\n\n\nlet $16ca60ecbdee30ea$var$ColorRecord = new $gfJaN$restructure.Struct({\n    blue: $gfJaN$restructure.uint8,\n    green: $gfJaN$restructure.uint8,\n    red: $gfJaN$restructure.uint8,\n    alpha: $gfJaN$restructure.uint8\n});\nvar $16ca60ecbdee30ea$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    header: {\n        numPaletteEntries: $gfJaN$restructure.uint16,\n        numPalettes: $gfJaN$restructure.uint16,\n        numColorRecords: $gfJaN$restructure.uint16,\n        colorRecords: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($16ca60ecbdee30ea$var$ColorRecord, \"numColorRecords\")),\n        colorRecordIndices: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numPalettes\")\n    },\n    0: {},\n    1: {\n        offsetPaletteTypeArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($gfJaN$restructure.uint32, \"numPalettes\")),\n        offsetPaletteLabelArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numPalettes\")),\n        offsetPaletteEntryLabelArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numPaletteEntries\"))\n    }\n});\n\n\n\n\n\nlet $7327e41706f9d5c7$var$BaseCoord = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        coordinate: $gfJaN$restructure.int16 // X or Y value, in design units\n    },\n    2: {\n        coordinate: $gfJaN$restructure.int16,\n        referenceGlyph: $gfJaN$restructure.uint16,\n        baseCoordPoint: $gfJaN$restructure.uint16 // Index of contour point on the referenceGlyph\n    },\n    3: {\n        coordinate: $gfJaN$restructure.int16,\n        deviceTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10)) // Device table for X or Y value\n    }\n});\nlet $7327e41706f9d5c7$var$BaseValues = new $gfJaN$restructure.Struct({\n    defaultIndex: $gfJaN$restructure.uint16,\n    baseCoordCount: $gfJaN$restructure.uint16,\n    baseCoords: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord), \"baseCoordCount\")\n});\nlet $7327e41706f9d5c7$var$FeatMinMaxRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    minCoord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord, {\n        type: \"parent\"\n    }),\n    maxCoord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord, {\n        type: \"parent\"\n    }) // May be NULL\n});\nlet $7327e41706f9d5c7$var$MinMax = new $gfJaN$restructure.Struct({\n    minCoord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord),\n    maxCoord: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseCoord),\n    featMinMaxCount: $gfJaN$restructure.uint16,\n    featMinMaxRecords: new $gfJaN$restructure.Array($7327e41706f9d5c7$var$FeatMinMaxRecord, \"featMinMaxCount\") // In alphabetical order\n});\nlet $7327e41706f9d5c7$var$BaseLangSysRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    minMax: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$MinMax, {\n        type: \"parent\"\n    })\n});\nlet $7327e41706f9d5c7$var$BaseScript = new $gfJaN$restructure.Struct({\n    baseValues: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseValues),\n    defaultMinMax: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$MinMax),\n    baseLangSysCount: $gfJaN$restructure.uint16,\n    baseLangSysRecords: new $gfJaN$restructure.Array($7327e41706f9d5c7$var$BaseLangSysRecord, \"baseLangSysCount\") // in alphabetical order by BaseLangSysTag\n});\nlet $7327e41706f9d5c7$var$BaseScriptRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    script: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseScript, {\n        type: \"parent\"\n    })\n});\nlet $7327e41706f9d5c7$var$BaseScriptList = new $gfJaN$restructure.Array($7327e41706f9d5c7$var$BaseScriptRecord, $gfJaN$restructure.uint16);\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nlet $7327e41706f9d5c7$var$BaseTagList = new $gfJaN$restructure.Array(new $gfJaN$restructure.String(4), $gfJaN$restructure.uint16);\nlet $7327e41706f9d5c7$var$Axis = new $gfJaN$restructure.Struct({\n    baseTagList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseTagList),\n    baseScriptList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$BaseScriptList)\n});\nvar $7327e41706f9d5c7$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    header: {\n        horizAxis: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$Axis),\n        vertAxis: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7327e41706f9d5c7$var$Axis) // May be NULL\n    },\n    0x00010000: {},\n    0x00010001: {\n        itemVariationStore: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$fe1b122a2710f241))\n    }\n});\n\n\n\n\n\nlet $7e48bbe9e5345664$var$AttachPoint = new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16);\nlet $7e48bbe9e5345664$var$AttachList = new $gfJaN$restructure.Struct({\n    coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n    glyphCount: $gfJaN$restructure.uint16,\n    attachPoints: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$AttachPoint), \"glyphCount\")\n});\nlet $7e48bbe9e5345664$var$CaretValue = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        coordinate: $gfJaN$restructure.int16\n    },\n    2: {\n        caretValuePoint: $gfJaN$restructure.uint16\n    },\n    3: {\n        coordinate: $gfJaN$restructure.int16,\n        deviceTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10))\n    }\n});\nlet $7e48bbe9e5345664$var$LigGlyph = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$CaretValue), $gfJaN$restructure.uint16);\nlet $7e48bbe9e5345664$var$LigCaretList = new $gfJaN$restructure.Struct({\n    coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n    ligGlyphCount: $gfJaN$restructure.uint16,\n    ligGlyphs: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$LigGlyph), \"ligGlyphCount\")\n});\nlet $7e48bbe9e5345664$var$MarkGlyphSetsDef = new $gfJaN$restructure.Struct({\n    markSetTableFormat: $gfJaN$restructure.uint16,\n    markSetCount: $gfJaN$restructure.uint16,\n    coverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $b6dd765146ad212a$export$17608c3f81a6111)), \"markSetCount\")\n});\nvar $7e48bbe9e5345664$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    header: {\n        glyphClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$843d551fbbafef71)),\n        attachList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$AttachList),\n        ligCaretList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$LigCaretList),\n        markAttachClassDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$843d551fbbafef71))\n    },\n    0x00010000: {},\n    0x00010002: {\n        markGlyphSetsDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$MarkGlyphSetsDef)\n    },\n    0x00010003: {\n        markGlyphSetsDef: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $7e48bbe9e5345664$var$MarkGlyphSetsDef),\n        itemVariationStore: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$fe1b122a2710f241))\n    }\n});\n\n\n\n\n\nlet $b687332511a4da75$var$ValueFormat = new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n    \"xPlacement\",\n    \"yPlacement\",\n    \"xAdvance\",\n    \"yAdvance\",\n    \"xPlaDevice\",\n    \"yPlaDevice\",\n    \"xAdvDevice\",\n    \"yAdvDevice\"\n]);\nlet $b687332511a4da75$var$types = {\n    xPlacement: $gfJaN$restructure.int16,\n    yPlacement: $gfJaN$restructure.int16,\n    xAdvance: $gfJaN$restructure.int16,\n    yAdvance: $gfJaN$restructure.int16,\n    xPlaDevice: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    yPlaDevice: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    xAdvDevice: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    yAdvDevice: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    })\n};\nclass $b687332511a4da75$var$ValueRecord {\n    buildStruct(parent) {\n        let struct = parent;\n        while(!struct[this.key] && struct.parent)struct = struct.parent;\n        if (!struct[this.key]) return;\n        let fields = {};\n        fields.rel = ()=>struct._startOffset;\n        let format = struct[this.key];\n        for(let key in format)if (format[key]) fields[key] = $b687332511a4da75$var$types[key];\n        return new $gfJaN$restructure.Struct(fields);\n    }\n    size(val, ctx) {\n        return this.buildStruct(ctx).size(val, ctx);\n    }\n    decode(stream, parent) {\n        let res = this.buildStruct(parent).decode(stream, parent);\n        delete res.rel;\n        return res;\n    }\n    constructor(key = \"valueFormat\"){\n        this.key = key;\n    }\n}\nlet $b687332511a4da75$var$PairValueRecord = new $gfJaN$restructure.Struct({\n    secondGlyph: $gfJaN$restructure.uint16,\n    value1: new $b687332511a4da75$var$ValueRecord(\"valueFormat1\"),\n    value2: new $b687332511a4da75$var$ValueRecord(\"valueFormat2\")\n});\nlet $b687332511a4da75$var$PairSet = new $gfJaN$restructure.Array($b687332511a4da75$var$PairValueRecord, $gfJaN$restructure.uint16);\nlet $b687332511a4da75$var$Class2Record = new $gfJaN$restructure.Struct({\n    value1: new $b687332511a4da75$var$ValueRecord(\"valueFormat1\"),\n    value2: new $b687332511a4da75$var$ValueRecord(\"valueFormat2\")\n});\nlet $b687332511a4da75$var$Anchor = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    1: {\n        xCoordinate: $gfJaN$restructure.int16,\n        yCoordinate: $gfJaN$restructure.int16\n    },\n    2: {\n        xCoordinate: $gfJaN$restructure.int16,\n        yCoordinate: $gfJaN$restructure.int16,\n        anchorPoint: $gfJaN$restructure.uint16\n    },\n    3: {\n        xCoordinate: $gfJaN$restructure.int16,\n        yCoordinate: $gfJaN$restructure.int16,\n        xDeviceTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10)),\n        yDeviceTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$8215d14a63d9fb10))\n    }\n});\nlet $b687332511a4da75$var$EntryExitRecord = new $gfJaN$restructure.Struct({\n    entryAnchor: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor, {\n        type: \"parent\"\n    }),\n    exitAnchor: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor, {\n        type: \"parent\"\n    })\n});\nlet $b687332511a4da75$var$MarkRecord = new $gfJaN$restructure.Struct({\n    class: $gfJaN$restructure.uint16,\n    markAnchor: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor, {\n        type: \"parent\"\n    })\n});\nlet $b687332511a4da75$var$MarkArray = new $gfJaN$restructure.Array($b687332511a4da75$var$MarkRecord, $gfJaN$restructure.uint16);\nlet $b687332511a4da75$var$BaseRecord = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor), (t)=>t.parent.classCount);\nlet $b687332511a4da75$var$BaseArray = new $gfJaN$restructure.Array($b687332511a4da75$var$BaseRecord, $gfJaN$restructure.uint16);\nlet $b687332511a4da75$var$ComponentRecord = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$Anchor), (t)=>t.parent.parent.classCount);\nlet $b687332511a4da75$var$LigatureAttach = new $gfJaN$restructure.Array($b687332511a4da75$var$ComponentRecord, $gfJaN$restructure.uint16);\nlet $b687332511a4da75$var$LigatureArray = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$LigatureAttach), $gfJaN$restructure.uint16);\nlet $b687332511a4da75$export$73a8cfb19cd43a0f = new $gfJaN$restructure.VersionedStruct(\"lookupType\", {\n    1: new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n        1: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            valueFormat: $b687332511a4da75$var$ValueFormat,\n            value: new $b687332511a4da75$var$ValueRecord()\n        },\n        2: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            valueFormat: $b687332511a4da75$var$ValueFormat,\n            valueCount: $gfJaN$restructure.uint16,\n            values: new $gfJaN$restructure.LazyArray(new $b687332511a4da75$var$ValueRecord(), \"valueCount\")\n        }\n    }),\n    2: new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n        1: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            valueFormat1: $b687332511a4da75$var$ValueFormat,\n            valueFormat2: $b687332511a4da75$var$ValueFormat,\n            pairSetCount: $gfJaN$restructure.uint16,\n            pairSets: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$PairSet), \"pairSetCount\")\n        },\n        2: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            valueFormat1: $b687332511a4da75$var$ValueFormat,\n            valueFormat2: $b687332511a4da75$var$ValueFormat,\n            classDef1: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$843d551fbbafef71)),\n            classDef2: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$843d551fbbafef71)),\n            class1Count: $gfJaN$restructure.uint16,\n            class2Count: $gfJaN$restructure.uint16,\n            classRecords: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.LazyArray($b687332511a4da75$var$Class2Record, \"class2Count\"), \"class1Count\")\n        }\n    }),\n    3: {\n        format: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        entryExitCount: $gfJaN$restructure.uint16,\n        entryExitRecords: new $gfJaN$restructure.Array($b687332511a4da75$var$EntryExitRecord, \"entryExitCount\")\n    },\n    4: {\n        format: $gfJaN$restructure.uint16,\n        markCoverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        baseCoverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        classCount: $gfJaN$restructure.uint16,\n        markArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$MarkArray),\n        baseArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$BaseArray)\n    },\n    5: {\n        format: $gfJaN$restructure.uint16,\n        markCoverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        ligatureCoverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        classCount: $gfJaN$restructure.uint16,\n        markArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$MarkArray),\n        ligatureArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$LigatureArray)\n    },\n    6: {\n        format: $gfJaN$restructure.uint16,\n        mark1Coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        mark2Coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        classCount: $gfJaN$restructure.uint16,\n        mark1Array: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$MarkArray),\n        mark2Array: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $b687332511a4da75$var$BaseArray)\n    },\n    7: (0, $b6dd765146ad212a$export$841858b892ce1f4c),\n    8: (0, $b6dd765146ad212a$export$5e6d09e6861162f6),\n    9: {\n        posFormat: $gfJaN$restructure.uint16,\n        lookupType: $gfJaN$restructure.uint16,\n        extension: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, null)\n    }\n});\n// Fix circular reference\n$b687332511a4da75$export$73a8cfb19cd43a0f.versions[9].extension.type = $b687332511a4da75$export$73a8cfb19cd43a0f;\nvar $b687332511a4da75$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    header: {\n        scriptList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$3e15fc05ce864229)),\n        featureList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$aa18130def4b6cb4)),\n        lookupList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new (0, $b6dd765146ad212a$export$df0008c6ff2da22a)($b687332511a4da75$export$73a8cfb19cd43a0f))\n    },\n    0x00010000: {},\n    0x00010001: {\n        featureVariations: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$441b70b7971dd419))\n    }\n});\n\n\n\n\n\nlet $99ccad60b96f92fb$var$Sequence = new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16);\nlet $99ccad60b96f92fb$var$AlternateSet = $99ccad60b96f92fb$var$Sequence;\nlet $99ccad60b96f92fb$var$Ligature = new $gfJaN$restructure.Struct({\n    glyph: $gfJaN$restructure.uint16,\n    compCount: $gfJaN$restructure.uint16,\n    components: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.compCount - 1)\n});\nlet $99ccad60b96f92fb$var$LigatureSet = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $99ccad60b96f92fb$var$Ligature), $gfJaN$restructure.uint16);\nlet $99ccad60b96f92fb$var$GSUBLookup = new $gfJaN$restructure.VersionedStruct(\"lookupType\", {\n    1: new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n        1: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            deltaGlyphID: $gfJaN$restructure.int16\n        },\n        2: {\n            coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n            glyphCount: $gfJaN$restructure.uint16,\n            substitute: new $gfJaN$restructure.LazyArray($gfJaN$restructure.uint16, \"glyphCount\")\n        }\n    }),\n    2: {\n        substFormat: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        count: $gfJaN$restructure.uint16,\n        sequences: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $99ccad60b96f92fb$var$Sequence), \"count\")\n    },\n    3: {\n        substFormat: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        count: $gfJaN$restructure.uint16,\n        alternateSet: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $99ccad60b96f92fb$var$AlternateSet), \"count\")\n    },\n    4: {\n        substFormat: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        count: $gfJaN$restructure.uint16,\n        ligatureSets: new $gfJaN$restructure.LazyArray(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $99ccad60b96f92fb$var$LigatureSet), \"count\")\n    },\n    5: (0, $b6dd765146ad212a$export$841858b892ce1f4c),\n    6: (0, $b6dd765146ad212a$export$5e6d09e6861162f6),\n    7: {\n        substFormat: $gfJaN$restructure.uint16,\n        lookupType: $gfJaN$restructure.uint16,\n        extension: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, null)\n    },\n    8: {\n        substFormat: $gfJaN$restructure.uint16,\n        coverage: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)),\n        backtrackCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)), \"backtrackGlyphCount\"),\n        lookaheadGlyphCount: $gfJaN$restructure.uint16,\n        lookaheadCoverage: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$17608c3f81a6111)), \"lookaheadGlyphCount\"),\n        glyphCount: $gfJaN$restructure.uint16,\n        substitutes: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"glyphCount\")\n    }\n});\n// Fix circular reference\n$99ccad60b96f92fb$var$GSUBLookup.versions[7].extension.type = $99ccad60b96f92fb$var$GSUBLookup;\nvar $99ccad60b96f92fb$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    header: {\n        scriptList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$3e15fc05ce864229)),\n        featureList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, (0, $b6dd765146ad212a$export$aa18130def4b6cb4)),\n        lookupList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new (0, $b6dd765146ad212a$export$df0008c6ff2da22a)($99ccad60b96f92fb$var$GSUBLookup))\n    },\n    0x00010000: {},\n    0x00010001: {\n        featureVariations: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$441b70b7971dd419))\n    }\n});\n\n\n\n\n\nlet $573d5042c76c4940$var$JstfGSUBModList = new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16);\nlet $573d5042c76c4940$var$JstfPriority = new $gfJaN$restructure.Struct({\n    shrinkageEnableGSUB: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageDisableGSUB: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageEnableGPOS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageDisableGPOS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    shrinkageJstfMax: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new (0, $b6dd765146ad212a$export$df0008c6ff2da22a)((0, $b687332511a4da75$export$73a8cfb19cd43a0f))),\n    extensionEnableGSUB: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    extensionDisableGSUB: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    extensionEnableGPOS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    extensionDisableGPOS: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfGSUBModList),\n    extensionJstfMax: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new (0, $b6dd765146ad212a$export$df0008c6ff2da22a)((0, $b687332511a4da75$export$73a8cfb19cd43a0f)))\n});\nlet $573d5042c76c4940$var$JstfLangSys = new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfPriority), $gfJaN$restructure.uint16);\nlet $573d5042c76c4940$var$JstfLangSysRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    jstfLangSys: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfLangSys)\n});\nlet $573d5042c76c4940$var$JstfScript = new $gfJaN$restructure.Struct({\n    extenderGlyphs: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16)),\n    defaultLangSys: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfLangSys),\n    langSysCount: $gfJaN$restructure.uint16,\n    langSysRecords: new $gfJaN$restructure.Array($573d5042c76c4940$var$JstfLangSysRecord, \"langSysCount\")\n});\nlet $573d5042c76c4940$var$JstfScriptRecord = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    script: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $573d5042c76c4940$var$JstfScript, {\n        type: \"parent\"\n    })\n});\nvar $573d5042c76c4940$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint32,\n    scriptCount: $gfJaN$restructure.uint16,\n    scriptList: new $gfJaN$restructure.Array($573d5042c76c4940$var$JstfScriptRecord, \"scriptCount\")\n});\n\n\n\n\n\n// TODO: add this to restructure\nclass $a5875b80d6087f61$var$VariableSizeNumber {\n    decode(stream, parent) {\n        switch(this.size(0, parent)){\n            case 1:\n                return stream.readUInt8();\n            case 2:\n                return stream.readUInt16BE();\n            case 3:\n                return stream.readUInt24BE();\n            case 4:\n                return stream.readUInt32BE();\n        }\n    }\n    size(val, parent) {\n        return (0, $gfJaN$restructure.resolveLength)(this._size, null, parent);\n    }\n    constructor(size){\n        this._size = size;\n    }\n}\nlet $a5875b80d6087f61$var$MapDataEntry = new $gfJaN$restructure.Struct({\n    entry: new $a5875b80d6087f61$var$VariableSizeNumber((t)=>((t.parent.entryFormat & 0x0030) >> 4) + 1),\n    outerIndex: (t)=>t.entry >> (t.parent.entryFormat & 0x000F) + 1,\n    innerIndex: (t)=>t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1\n});\nlet $a5875b80d6087f61$var$DeltaSetIndexMap = new $gfJaN$restructure.Struct({\n    entryFormat: $gfJaN$restructure.uint16,\n    mapCount: $gfJaN$restructure.uint16,\n    mapData: new $gfJaN$restructure.Array($a5875b80d6087f61$var$MapDataEntry, \"mapCount\")\n});\nvar $a5875b80d6087f61$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    itemVariationStore: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, (0, $2e4adcda047b3383$export$fe1b122a2710f241)),\n    advanceWidthMapping: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $a5875b80d6087f61$var$DeltaSetIndexMap),\n    LSBMapping: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $a5875b80d6087f61$var$DeltaSetIndexMap),\n    RSBMapping: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $a5875b80d6087f61$var$DeltaSetIndexMap)\n});\n\n\n\nlet $4423bc1ac09bbbd1$var$Signature = new $gfJaN$restructure.Struct({\n    format: $gfJaN$restructure.uint32,\n    length: $gfJaN$restructure.uint32,\n    offset: $gfJaN$restructure.uint32\n});\nlet $4423bc1ac09bbbd1$var$SignatureBlock = new $gfJaN$restructure.Struct({\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16, 2),\n    cbSignature: $gfJaN$restructure.uint32,\n    signature: new $gfJaN$restructure.Buffer(\"cbSignature\")\n});\nvar $4423bc1ac09bbbd1$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    ulVersion: $gfJaN$restructure.uint32,\n    usNumSigs: $gfJaN$restructure.uint16,\n    usFlag: $gfJaN$restructure.uint16,\n    signatures: new $gfJaN$restructure.Array($4423bc1ac09bbbd1$var$Signature, \"usNumSigs\"),\n    signatureBlocks: new $gfJaN$restructure.Array($4423bc1ac09bbbd1$var$SignatureBlock, \"usNumSigs\")\n});\n\n\n\nlet $7b50e3f8d83263de$var$GaspRange = new $gfJaN$restructure.Struct({\n    rangeMaxPPEM: $gfJaN$restructure.uint16,\n    rangeGaspBehavior: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint16, [\n        \"grayscale\",\n        \"gridfit\",\n        \"symmetricSmoothing\",\n        \"symmetricGridfit\" // only in version 1, for ClearType\n    ])\n});\nvar $7b50e3f8d83263de$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numRanges: $gfJaN$restructure.uint16,\n    gaspRanges: new $gfJaN$restructure.Array($7b50e3f8d83263de$var$GaspRange, \"numRanges\") // Sorted by ppem\n});\n\n\n\nlet $7bf92ec372cd2307$var$DeviceRecord = new $gfJaN$restructure.Struct({\n    pixelSize: $gfJaN$restructure.uint8,\n    maximumWidth: $gfJaN$restructure.uint8,\n    widths: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, (t)=>t.parent.parent.maxp.numGlyphs)\n});\nvar // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n$7bf92ec372cd2307$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numRecords: $gfJaN$restructure.int16,\n    sizeDeviceRecord: $gfJaN$restructure.int32,\n    records: new $gfJaN$restructure.Array($7bf92ec372cd2307$var$DeviceRecord, \"numRecords\")\n});\n\n\n\nlet $a3f544bcf76542d1$var$KernPair = new $gfJaN$restructure.Struct({\n    left: $gfJaN$restructure.uint16,\n    right: $gfJaN$restructure.uint16,\n    value: $gfJaN$restructure.int16\n});\nlet $a3f544bcf76542d1$var$ClassTable = new $gfJaN$restructure.Struct({\n    firstGlyph: $gfJaN$restructure.uint16,\n    nGlyphs: $gfJaN$restructure.uint16,\n    offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"nGlyphs\"),\n    max: (t)=>t.offsets.length && Math.max.apply(Math, t.offsets)\n});\nlet $a3f544bcf76542d1$var$Kern2Array = new $gfJaN$restructure.Struct({\n    off: (t)=>t._startOffset - t.parent.parent._startOffset,\n    len: (t)=>((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2),\n    values: new $gfJaN$restructure.LazyArray($gfJaN$restructure.int16, \"len\")\n});\nlet $a3f544bcf76542d1$var$KernSubtable = new $gfJaN$restructure.VersionedStruct(\"format\", {\n    0: {\n        nPairs: $gfJaN$restructure.uint16,\n        searchRange: $gfJaN$restructure.uint16,\n        entrySelector: $gfJaN$restructure.uint16,\n        rangeShift: $gfJaN$restructure.uint16,\n        pairs: new $gfJaN$restructure.Array($a3f544bcf76542d1$var$KernPair, \"nPairs\")\n    },\n    2: {\n        rowWidth: $gfJaN$restructure.uint16,\n        leftTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $a3f544bcf76542d1$var$ClassTable, {\n            type: \"parent\"\n        }),\n        rightTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $a3f544bcf76542d1$var$ClassTable, {\n            type: \"parent\"\n        }),\n        array: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $a3f544bcf76542d1$var$Kern2Array, {\n            type: \"parent\"\n        })\n    },\n    3: {\n        glyphCount: $gfJaN$restructure.uint16,\n        kernValueCount: $gfJaN$restructure.uint8,\n        leftClassCount: $gfJaN$restructure.uint8,\n        rightClassCount: $gfJaN$restructure.uint8,\n        flags: $gfJaN$restructure.uint8,\n        kernValue: new $gfJaN$restructure.Array($gfJaN$restructure.int16, \"kernValueCount\"),\n        leftClass: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"glyphCount\"),\n        rightClass: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"glyphCount\"),\n        kernIndex: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, (t)=>t.leftClassCount * t.rightClassCount)\n    }\n});\nlet $a3f544bcf76542d1$var$KernTable = new $gfJaN$restructure.VersionedStruct(\"version\", {\n    0: {\n        subVersion: $gfJaN$restructure.uint16,\n        length: $gfJaN$restructure.uint16,\n        format: $gfJaN$restructure.uint8,\n        coverage: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n            \"horizontal\",\n            \"minimum\",\n            \"crossStream\",\n            \"override\" // If set to 1 the value in this table replaces the accumulated value\n        ]),\n        subtable: $a3f544bcf76542d1$var$KernSubtable,\n        padding: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, (t)=>t.length - t._currentOffset)\n    },\n    1: {\n        length: $gfJaN$restructure.uint32,\n        coverage: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n            null,\n            null,\n            null,\n            null,\n            null,\n            \"variation\",\n            \"crossStream\",\n            \"vertical\" // Set if table has vertical kerning values\n        ]),\n        format: $gfJaN$restructure.uint8,\n        tupleIndex: $gfJaN$restructure.uint16,\n        subtable: $a3f544bcf76542d1$var$KernSubtable,\n        padding: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, (t)=>t.length - t._currentOffset)\n    }\n});\nvar $a3f544bcf76542d1$export$2e2bcd8739ae039 = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n    0: {\n        nTables: $gfJaN$restructure.uint16,\n        tables: new $gfJaN$restructure.Array($a3f544bcf76542d1$var$KernTable, \"nTables\")\n    },\n    1: {\n        reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n        nTables: $gfJaN$restructure.uint32,\n        tables: new $gfJaN$restructure.Array($a3f544bcf76542d1$var$KernTable, \"nTables\")\n    }\n});\n\n\n\nvar // Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n$86687befb45925d0$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numGlyphs: $gfJaN$restructure.uint16,\n    yPels: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, \"numGlyphs\")\n});\n\n\n\nvar // PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n$91429006e51e0fe8$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    fontNumber: $gfJaN$restructure.uint32,\n    pitch: $gfJaN$restructure.uint16,\n    xHeight: $gfJaN$restructure.uint16,\n    style: $gfJaN$restructure.uint16,\n    typeFamily: $gfJaN$restructure.uint16,\n    capHeight: $gfJaN$restructure.uint16,\n    symbolSet: $gfJaN$restructure.uint16,\n    typeface: new $gfJaN$restructure.String(16),\n    characterComplement: new $gfJaN$restructure.String(8),\n    fileName: new $gfJaN$restructure.String(6),\n    strokeWeight: new $gfJaN$restructure.String(1),\n    widthType: new $gfJaN$restructure.String(1),\n    serifStyle: $gfJaN$restructure.uint8,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8)\n});\n\n\n\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\nlet $627850fc9deed59a$var$Ratio = new $gfJaN$restructure.Struct({\n    bCharSet: $gfJaN$restructure.uint8,\n    xRatio: $gfJaN$restructure.uint8,\n    yStartRatio: $gfJaN$restructure.uint8,\n    yEndRatio: $gfJaN$restructure.uint8 // Ending y-Ratio value\n});\nlet $627850fc9deed59a$var$vTable = new $gfJaN$restructure.Struct({\n    yPelHeight: $gfJaN$restructure.uint16,\n    yMax: $gfJaN$restructure.int16,\n    yMin: $gfJaN$restructure.int16 // Minimum value (in pels) for this yPelHeight\n});\nlet $627850fc9deed59a$var$VdmxGroup = new $gfJaN$restructure.Struct({\n    recs: $gfJaN$restructure.uint16,\n    startsz: $gfJaN$restructure.uint8,\n    endsz: $gfJaN$restructure.uint8,\n    entries: new $gfJaN$restructure.Array($627850fc9deed59a$var$vTable, \"recs\") // The VDMX records\n});\nvar $627850fc9deed59a$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    numRecs: $gfJaN$restructure.uint16,\n    numRatios: $gfJaN$restructure.uint16,\n    ratioRanges: new $gfJaN$restructure.Array($627850fc9deed59a$var$Ratio, \"numRatios\"),\n    offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numRatios\"),\n    groups: new $gfJaN$restructure.Array($627850fc9deed59a$var$VdmxGroup, \"numRecs\") // The actual VDMX groupings\n});\n\n\n\nvar // Vertical Header Table\n$65c33f5f068fc77f$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    ascent: $gfJaN$restructure.int16,\n    descent: $gfJaN$restructure.int16,\n    lineGap: $gfJaN$restructure.int16,\n    advanceHeightMax: $gfJaN$restructure.int16,\n    minTopSideBearing: $gfJaN$restructure.int16,\n    minBottomSideBearing: $gfJaN$restructure.int16,\n    yMaxExtent: $gfJaN$restructure.int16,\n    caretSlopeRise: $gfJaN$restructure.int16,\n    caretSlopeRun: $gfJaN$restructure.int16,\n    caretOffset: $gfJaN$restructure.int16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.int16, 4),\n    metricDataFormat: $gfJaN$restructure.int16,\n    numberOfMetrics: $gfJaN$restructure.uint16 // Number of advance heights in the Vertical Metrics table\n});\n\n\n\nlet $597d739523b65bb3$var$VmtxEntry = new $gfJaN$restructure.Struct({\n    advance: $gfJaN$restructure.uint16,\n    bearing: $gfJaN$restructure.int16 // The top sidebearing of the glyph\n});\nvar // Vertical Metrics Table\n$597d739523b65bb3$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    metrics: new $gfJaN$restructure.LazyArray($597d739523b65bb3$var$VmtxEntry, (t)=>t.parent.vhea.numberOfMetrics),\n    bearings: new $gfJaN$restructure.LazyArray($gfJaN$restructure.int16, (t)=>t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics)\n});\n\n\n\nlet $35aa0c87d9c3d3a0$var$shortFrac = new $gfJaN$restructure.Fixed(16, \"BE\", 14);\nlet $35aa0c87d9c3d3a0$var$Correspondence = new $gfJaN$restructure.Struct({\n    fromCoord: $35aa0c87d9c3d3a0$var$shortFrac,\n    toCoord: $35aa0c87d9c3d3a0$var$shortFrac\n});\nlet $35aa0c87d9c3d3a0$var$Segment = new $gfJaN$restructure.Struct({\n    pairCount: $gfJaN$restructure.uint16,\n    correspondence: new $gfJaN$restructure.Array($35aa0c87d9c3d3a0$var$Correspondence, \"pairCount\")\n});\nvar $35aa0c87d9c3d3a0$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    axisCount: $gfJaN$restructure.uint32,\n    segment: new $gfJaN$restructure.Array($35aa0c87d9c3d3a0$var$Segment, \"axisCount\")\n});\n\n\n\n\nclass $22801616bd931ca3$var$UnboundedArrayAccessor {\n    getItem(index) {\n        if (this._items[index] == null) {\n            let pos = this.stream.pos;\n            this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n            this._items[index] = this.type.decode(this.stream, this.parent);\n            this.stream.pos = pos;\n        }\n        return this._items[index];\n    }\n    inspect() {\n        return `[UnboundedArray ${this.type.constructor.name}]`;\n    }\n    constructor(type, stream, parent){\n        this.type = type;\n        this.stream = stream;\n        this.parent = parent;\n        this.base = this.stream.pos;\n        this._items = [];\n    }\n}\nclass $22801616bd931ca3$export$c5af1eebc882e39a extends $gfJaN$restructure.Array {\n    decode(stream, parent) {\n        return new $22801616bd931ca3$var$UnboundedArrayAccessor(this.type, stream, parent);\n    }\n    constructor(type){\n        super(type, 0);\n    }\n}\nlet $22801616bd931ca3$export$8351f8c2ae2f103c = function(ValueType = $gfJaN$restructure.uint16) {\n    // Helper class that makes internal structures invisible to pointers\n    class Shadow {\n        decode(stream, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.decode(stream, ctx);\n        }\n        size(val, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.size(val, ctx);\n        }\n        encode(stream, val, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.encode(stream, val, ctx);\n        }\n        constructor(type){\n            this.type = type;\n        }\n    }\n    ValueType = new Shadow(ValueType);\n    let BinarySearchHeader = new $gfJaN$restructure.Struct({\n        unitSize: $gfJaN$restructure.uint16,\n        nUnits: $gfJaN$restructure.uint16,\n        searchRange: $gfJaN$restructure.uint16,\n        entrySelector: $gfJaN$restructure.uint16,\n        rangeShift: $gfJaN$restructure.uint16\n    });\n    let LookupSegmentSingle = new $gfJaN$restructure.Struct({\n        lastGlyph: $gfJaN$restructure.uint16,\n        firstGlyph: $gfJaN$restructure.uint16,\n        value: ValueType\n    });\n    let LookupSegmentArray = new $gfJaN$restructure.Struct({\n        lastGlyph: $gfJaN$restructure.uint16,\n        firstGlyph: $gfJaN$restructure.uint16,\n        values: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.Array(ValueType, (t)=>t.lastGlyph - t.firstGlyph + 1), {\n            type: \"parent\"\n        })\n    });\n    let LookupSingle = new $gfJaN$restructure.Struct({\n        glyph: $gfJaN$restructure.uint16,\n        value: ValueType\n    });\n    return new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint16, {\n        0: {\n            values: new $22801616bd931ca3$export$c5af1eebc882e39a(ValueType) // length == number of glyphs maybe?\n        },\n        2: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $gfJaN$restructure.Array(LookupSegmentSingle, (t)=>t.binarySearchHeader.nUnits)\n        },\n        4: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $gfJaN$restructure.Array(LookupSegmentArray, (t)=>t.binarySearchHeader.nUnits)\n        },\n        6: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $gfJaN$restructure.Array(LookupSingle, (t)=>t.binarySearchHeader.nUnits)\n        },\n        8: {\n            firstGlyph: $gfJaN$restructure.uint16,\n            count: $gfJaN$restructure.uint16,\n            values: new $gfJaN$restructure.Array(ValueType, \"count\")\n        }\n    });\n};\nfunction $22801616bd931ca3$export$79f7d93d790934ba(entryData = {}, lookupType = $gfJaN$restructure.uint16) {\n    let entry = Object.assign({\n        newState: $gfJaN$restructure.uint16,\n        flags: $gfJaN$restructure.uint16\n    }, entryData);\n    let Entry = new $gfJaN$restructure.Struct(entry);\n    let StateArray = new $22801616bd931ca3$export$c5af1eebc882e39a(new $gfJaN$restructure.Array($gfJaN$restructure.uint16, (t)=>t.nClasses));\n    let StateHeader = new $gfJaN$restructure.Struct({\n        nClasses: $gfJaN$restructure.uint32,\n        classTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $22801616bd931ca3$export$8351f8c2ae2f103c(lookupType)),\n        stateArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, StateArray),\n        entryTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $22801616bd931ca3$export$c5af1eebc882e39a(Entry))\n    });\n    return StateHeader;\n}\nfunction $22801616bd931ca3$export$105027425199cc51(entryData = {}, lookupType = $gfJaN$restructure.uint16) {\n    let ClassLookupTable = new $gfJaN$restructure.Struct({\n        version () {\n            return 8;\n        },\n        firstGlyph: $gfJaN$restructure.uint16,\n        values: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, $gfJaN$restructure.uint16)\n    });\n    let entry = Object.assign({\n        newStateOffset: $gfJaN$restructure.uint16,\n        // convert offset to stateArray index\n        newState: (t)=>(t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses,\n        flags: $gfJaN$restructure.uint16\n    }, entryData);\n    let Entry = new $gfJaN$restructure.Struct(entry);\n    let StateArray = new $22801616bd931ca3$export$c5af1eebc882e39a(new $gfJaN$restructure.Array($gfJaN$restructure.uint8, (t)=>t.nClasses));\n    let StateHeader1 = new $gfJaN$restructure.Struct({\n        nClasses: $gfJaN$restructure.uint16,\n        classTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, ClassLookupTable),\n        stateArray: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, StateArray),\n        entryTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $22801616bd931ca3$export$c5af1eebc882e39a(Entry))\n    });\n    return StateHeader1;\n}\n\n\nlet $3a5ca96d3e3aaf20$var$BslnSubtable = new $gfJaN$restructure.VersionedStruct(\"format\", {\n    0: {\n        deltas: new $gfJaN$restructure.Array($gfJaN$restructure.int16, 32)\n    },\n    1: {\n        deltas: new $gfJaN$restructure.Array($gfJaN$restructure.int16, 32),\n        mappingData: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)($gfJaN$restructure.uint16)\n    },\n    2: {\n        standardGlyph: $gfJaN$restructure.uint16,\n        controlPoints: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, 32)\n    },\n    3: {\n        standardGlyph: $gfJaN$restructure.uint16,\n        controlPoints: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, 32),\n        mappingData: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)($gfJaN$restructure.uint16)\n    }\n});\nvar $3a5ca96d3e3aaf20$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    format: $gfJaN$restructure.uint16,\n    defaultBaseline: $gfJaN$restructure.uint16,\n    subtable: $3a5ca96d3e3aaf20$var$BslnSubtable\n});\n\n\n\nlet $8d4241d96b2b0589$var$Setting = new $gfJaN$restructure.Struct({\n    setting: $gfJaN$restructure.uint16,\n    nameIndex: $gfJaN$restructure.int16,\n    name: (t)=>t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\nlet $8d4241d96b2b0589$var$FeatureName = new $gfJaN$restructure.Struct({\n    feature: $gfJaN$restructure.uint16,\n    nSettings: $gfJaN$restructure.uint16,\n    settingTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array($8d4241d96b2b0589$var$Setting, \"nSettings\"), {\n        type: \"parent\"\n    }),\n    featureFlags: new $gfJaN$restructure.Bitfield($gfJaN$restructure.uint8, [\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        \"hasDefault\",\n        \"exclusive\"\n    ]),\n    defaultSetting: $gfJaN$restructure.uint8,\n    nameIndex: $gfJaN$restructure.int16,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\nvar $8d4241d96b2b0589$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    featureNameCount: $gfJaN$restructure.uint16,\n    reserved1: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    reserved2: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint32),\n    featureNames: new $gfJaN$restructure.Array($8d4241d96b2b0589$var$FeatureName, \"featureNameCount\")\n});\n\n\n\nlet $a79cd5132b1cf476$var$Axis = new $gfJaN$restructure.Struct({\n    axisTag: new $gfJaN$restructure.String(4),\n    minValue: $gfJaN$restructure.fixed32,\n    defaultValue: $gfJaN$restructure.fixed32,\n    maxValue: $gfJaN$restructure.fixed32,\n    flags: $gfJaN$restructure.uint16,\n    nameID: $gfJaN$restructure.uint16,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameID]\n});\nlet $a79cd5132b1cf476$var$Instance = new $gfJaN$restructure.Struct({\n    nameID: $gfJaN$restructure.uint16,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameID],\n    flags: $gfJaN$restructure.uint16,\n    coord: new $gfJaN$restructure.Array($gfJaN$restructure.fixed32, (t)=>t.parent.axisCount),\n    postscriptNameID: new $gfJaN$restructure.Optional($gfJaN$restructure.uint16, (t)=>t.parent.instanceSize - t._currentOffset > 0)\n});\nvar $a79cd5132b1cf476$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    offsetToData: $gfJaN$restructure.uint16,\n    countSizePairs: $gfJaN$restructure.uint16,\n    axisCount: $gfJaN$restructure.uint16,\n    axisSize: $gfJaN$restructure.uint16,\n    instanceCount: $gfJaN$restructure.uint16,\n    instanceSize: $gfJaN$restructure.uint16,\n    axis: new $gfJaN$restructure.Array($a79cd5132b1cf476$var$Axis, \"axisCount\"),\n    instance: new $gfJaN$restructure.Array($a79cd5132b1cf476$var$Instance, \"instanceCount\")\n});\n\n\n\nlet $3f36f1a5e6989457$var$shortFrac = new $gfJaN$restructure.Fixed(16, \"BE\", 14);\nclass $3f36f1a5e6989457$var$Offset {\n    static decode(stream, parent) {\n        // In short format, offsets are multiplied by 2.\n        // This doesn't seem to be documented by Apple, but it\n        // is implemented this way in Freetype.\n        return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n    }\n}\nlet $3f36f1a5e6989457$var$gvar = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    axisCount: $gfJaN$restructure.uint16,\n    globalCoordCount: $gfJaN$restructure.uint16,\n    globalCoords: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new $gfJaN$restructure.Array(new $gfJaN$restructure.Array($3f36f1a5e6989457$var$shortFrac, \"axisCount\"), \"globalCoordCount\")),\n    glyphCount: $gfJaN$restructure.uint16,\n    flags: $gfJaN$restructure.uint16,\n    offsetToData: $gfJaN$restructure.uint32,\n    offsets: new $gfJaN$restructure.Array(new $gfJaN$restructure.Pointer($3f36f1a5e6989457$var$Offset, \"void\", {\n        relativeTo: (ctx)=>ctx.offsetToData,\n        allowNull: false\n    }), (t)=>t.glyphCount + 1)\n});\nvar $3f36f1a5e6989457$export$2e2bcd8739ae039 = $3f36f1a5e6989457$var$gvar;\n\n\n\n\nlet $0bd8fe7a6d1d9fb4$var$ClassTable = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint16,\n    coverage: $gfJaN$restructure.uint16,\n    subFeatureFlags: $gfJaN$restructure.uint32,\n    stateTable: new (0, $22801616bd931ca3$export$105027425199cc51)\n});\nlet $0bd8fe7a6d1d9fb4$var$WidthDeltaRecord = new $gfJaN$restructure.Struct({\n    justClass: $gfJaN$restructure.uint32,\n    beforeGrowLimit: $gfJaN$restructure.fixed32,\n    beforeShrinkLimit: $gfJaN$restructure.fixed32,\n    afterGrowLimit: $gfJaN$restructure.fixed32,\n    afterShrinkLimit: $gfJaN$restructure.fixed32,\n    growFlags: $gfJaN$restructure.uint16,\n    shrinkFlags: $gfJaN$restructure.uint16\n});\nlet $0bd8fe7a6d1d9fb4$var$WidthDeltaCluster = new $gfJaN$restructure.Array($0bd8fe7a6d1d9fb4$var$WidthDeltaRecord, $gfJaN$restructure.uint32);\nlet $0bd8fe7a6d1d9fb4$var$ActionData = new $gfJaN$restructure.VersionedStruct(\"actionType\", {\n    0: {\n        lowerLimit: $gfJaN$restructure.fixed32,\n        upperLimit: $gfJaN$restructure.fixed32,\n        order: $gfJaN$restructure.uint16,\n        glyphs: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, $gfJaN$restructure.uint16)\n    },\n    1: {\n        addGlyph: $gfJaN$restructure.uint16\n    },\n    2: {\n        substThreshold: $gfJaN$restructure.fixed32,\n        addGlyph: $gfJaN$restructure.uint16,\n        substGlyph: $gfJaN$restructure.uint16\n    },\n    3: {},\n    4: {\n        variationAxis: $gfJaN$restructure.uint32,\n        minimumLimit: $gfJaN$restructure.fixed32,\n        noStretchValue: $gfJaN$restructure.fixed32,\n        maximumLimit: $gfJaN$restructure.fixed32\n    },\n    5: {\n        flags: $gfJaN$restructure.uint16,\n        glyph: $gfJaN$restructure.uint16\n    }\n});\nlet $0bd8fe7a6d1d9fb4$var$Action = new $gfJaN$restructure.Struct({\n    actionClass: $gfJaN$restructure.uint16,\n    actionType: $gfJaN$restructure.uint16,\n    actionLength: $gfJaN$restructure.uint32,\n    actionData: $0bd8fe7a6d1d9fb4$var$ActionData,\n    padding: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, (t)=>t.actionLength - t._currentOffset)\n});\nlet $0bd8fe7a6d1d9fb4$var$PostcompensationAction = new $gfJaN$restructure.Array($0bd8fe7a6d1d9fb4$var$Action, $gfJaN$restructure.uint32);\nlet $0bd8fe7a6d1d9fb4$var$PostCompensationTable = new $gfJaN$restructure.Struct({\n    lookupTable: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$PostcompensationAction))\n});\nlet $0bd8fe7a6d1d9fb4$var$JustificationTable = new $gfJaN$restructure.Struct({\n    classTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$ClassTable, {\n        type: \"parent\"\n    }),\n    wdcOffset: $gfJaN$restructure.uint16,\n    postCompensationTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$PostCompensationTable, {\n        type: \"parent\"\n    }),\n    widthDeltaClusters: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$WidthDeltaCluster, {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.wdcOffset\n    }))\n});\nvar $0bd8fe7a6d1d9fb4$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint32,\n    format: $gfJaN$restructure.uint16,\n    horizontal: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$JustificationTable),\n    vertical: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $0bd8fe7a6d1d9fb4$var$JustificationTable)\n});\n\n\n\n\nlet $ef40c6dc80fd50a2$var$LigatureData = {\n    action: $gfJaN$restructure.uint16\n};\nlet $ef40c6dc80fd50a2$var$ContextualData = {\n    markIndex: $gfJaN$restructure.uint16,\n    currentIndex: $gfJaN$restructure.uint16\n};\nlet $ef40c6dc80fd50a2$var$InsertionData = {\n    currentInsertIndex: $gfJaN$restructure.uint16,\n    markedInsertIndex: $gfJaN$restructure.uint16\n};\nlet $ef40c6dc80fd50a2$var$SubstitutionTable = new $gfJaN$restructure.Struct({\n    items: new (0, $22801616bd931ca3$export$c5af1eebc882e39a)(new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)))\n});\nlet $ef40c6dc80fd50a2$var$SubtableData = new $gfJaN$restructure.VersionedStruct(\"type\", {\n    0: {\n        stateTable: new (0, $22801616bd931ca3$export$79f7d93d790934ba)\n    },\n    1: {\n        stateTable: new (0, $22801616bd931ca3$export$79f7d93d790934ba)($ef40c6dc80fd50a2$var$ContextualData),\n        substitutionTable: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $ef40c6dc80fd50a2$var$SubstitutionTable)\n    },\n    2: {\n        stateTable: new (0, $22801616bd931ca3$export$79f7d93d790934ba)($ef40c6dc80fd50a2$var$LigatureData),\n        ligatureActions: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$c5af1eebc882e39a)($gfJaN$restructure.uint32)),\n        components: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$c5af1eebc882e39a)($gfJaN$restructure.uint16)),\n        ligatureList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$c5af1eebc882e39a)($gfJaN$restructure.uint16))\n    },\n    4: {\n        lookupTable: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)\n    },\n    5: {\n        stateTable: new (0, $22801616bd931ca3$export$79f7d93d790934ba)($ef40c6dc80fd50a2$var$InsertionData),\n        insertionActions: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, new (0, $22801616bd931ca3$export$c5af1eebc882e39a)($gfJaN$restructure.uint16))\n    }\n});\nlet $ef40c6dc80fd50a2$var$Subtable = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint32,\n    coverage: $gfJaN$restructure.uint24,\n    type: $gfJaN$restructure.uint8,\n    subFeatureFlags: $gfJaN$restructure.uint32,\n    table: $ef40c6dc80fd50a2$var$SubtableData,\n    padding: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, (t)=>t.length - t._currentOffset)\n});\nlet $ef40c6dc80fd50a2$var$FeatureEntry = new $gfJaN$restructure.Struct({\n    featureType: $gfJaN$restructure.uint16,\n    featureSetting: $gfJaN$restructure.uint16,\n    enableFlags: $gfJaN$restructure.uint32,\n    disableFlags: $gfJaN$restructure.uint32\n});\nlet $ef40c6dc80fd50a2$var$MorxChain = new $gfJaN$restructure.Struct({\n    defaultFlags: $gfJaN$restructure.uint32,\n    chainLength: $gfJaN$restructure.uint32,\n    nFeatureEntries: $gfJaN$restructure.uint32,\n    nSubtables: $gfJaN$restructure.uint32,\n    features: new $gfJaN$restructure.Array($ef40c6dc80fd50a2$var$FeatureEntry, \"nFeatureEntries\"),\n    subtables: new $gfJaN$restructure.Array($ef40c6dc80fd50a2$var$Subtable, \"nSubtables\")\n});\nvar $ef40c6dc80fd50a2$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint16,\n    unused: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    nChains: $gfJaN$restructure.uint32,\n    chains: new $gfJaN$restructure.Array($ef40c6dc80fd50a2$var$MorxChain, \"nChains\")\n});\n\n\n\n\nlet $ab24dea08b58a7cc$var$OpticalBounds = new $gfJaN$restructure.Struct({\n    left: $gfJaN$restructure.int16,\n    top: $gfJaN$restructure.int16,\n    right: $gfJaN$restructure.int16,\n    bottom: $gfJaN$restructure.int16\n});\nvar $ab24dea08b58a7cc$export$2e2bcd8739ae039 = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.fixed32,\n    format: $gfJaN$restructure.uint16,\n    lookupTable: new (0, $22801616bd931ca3$export$8351f8c2ae2f103c)($ab24dea08b58a7cc$var$OpticalBounds)\n});\n\n\nlet $5825c04ce8f7102d$var$tables = {};\nvar $5825c04ce8f7102d$export$2e2bcd8739ae039 = $5825c04ce8f7102d$var$tables;\n$5825c04ce8f7102d$var$tables.cmap = (0, $e4ae0436c91af89f$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.head = (0, $55a60976afb7c261$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.hhea = (0, $dde72b7b5b650596$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.hmtx = (0, $a7c40184072c9a5b$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.maxp = (0, $521197722369f691$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.name = (0, $51a9f4feb3a3b2b1$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables[\"OS/2\"] = (0, $114ea85db469b435$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.post = (0, $f93b30299e1ea0f5$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.fpgm = (0, $873d79fea57d3161$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.loca = (0, $83c4155666d50c37$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.prep = (0, $b12598db7cdf7042$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables[\"cvt \"] = (0, $8fb09b0f473d61a0$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.glyf = (0, $7707bdf21a3d89cc$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables[\"CFF \"] = (0, $f717432b360040c7$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables[\"CFF2\"] = (0, $f717432b360040c7$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.VORG = (0, $8cb7ae73ed7aa7d8$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.EBLC = (0, $035bb95c0cdb1f6d$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.CBLC = $5825c04ce8f7102d$var$tables.EBLC;\n$5825c04ce8f7102d$var$tables.sbix = (0, $73d13900b55a3c0c$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.COLR = (0, $97f6b8be3a347a8f$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.CPAL = (0, $16ca60ecbdee30ea$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.BASE = (0, $7327e41706f9d5c7$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.GDEF = (0, $7e48bbe9e5345664$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.GPOS = (0, $b687332511a4da75$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.GSUB = (0, $99ccad60b96f92fb$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.JSTF = (0, $573d5042c76c4940$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.HVAR = (0, $a5875b80d6087f61$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.DSIG = (0, $4423bc1ac09bbbd1$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.gasp = (0, $7b50e3f8d83263de$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.hdmx = (0, $7bf92ec372cd2307$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.kern = (0, $a3f544bcf76542d1$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.LTSH = (0, $86687befb45925d0$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.PCLT = (0, $91429006e51e0fe8$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.VDMX = (0, $627850fc9deed59a$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.vhea = (0, $65c33f5f068fc77f$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.vmtx = (0, $597d739523b65bb3$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.avar = (0, $35aa0c87d9c3d3a0$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.bsln = (0, $3a5ca96d3e3aaf20$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.feat = (0, $8d4241d96b2b0589$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.fvar = (0, $a79cd5132b1cf476$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.gvar = (0, $3f36f1a5e6989457$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.just = (0, $0bd8fe7a6d1d9fb4$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.morx = (0, $ef40c6dc80fd50a2$export$2e2bcd8739ae039);\n$5825c04ce8f7102d$var$tables.opbd = (0, $ab24dea08b58a7cc$export$2e2bcd8739ae039);\n\n\nlet $df50e1efe10a1247$var$TableEntry = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    checkSum: $gfJaN$restructure.uint32,\n    offset: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, \"void\", {\n        type: \"global\"\n    }),\n    length: $gfJaN$restructure.uint32\n});\nlet $df50e1efe10a1247$var$Directory = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    numTables: $gfJaN$restructure.uint16,\n    searchRange: $gfJaN$restructure.uint16,\n    entrySelector: $gfJaN$restructure.uint16,\n    rangeShift: $gfJaN$restructure.uint16,\n    tables: new $gfJaN$restructure.Array($df50e1efe10a1247$var$TableEntry, \"numTables\")\n});\n$df50e1efe10a1247$var$Directory.process = function() {\n    let tables = {};\n    for (let table of this.tables)tables[table.tag] = table;\n    this.tables = tables;\n};\n$df50e1efe10a1247$var$Directory.preEncode = function() {\n    if (!Array.isArray(this.tables)) {\n        let tables = [];\n        for(let tag in this.tables){\n            let table = this.tables[tag];\n            if (table) tables.push({\n                tag: tag,\n                checkSum: 0,\n                offset: new $gfJaN$restructure.VoidPointer((0, $5825c04ce8f7102d$export$2e2bcd8739ae039)[tag], table),\n                length: (0, $5825c04ce8f7102d$export$2e2bcd8739ae039)[tag].size(table)\n            });\n        }\n        this.tables = tables;\n    }\n    this.tag = \"true\";\n    this.numTables = this.tables.length;\n    let maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n    let maxPowerOf2 = Math.pow(2, maxExponentFor2);\n    this.searchRange = maxPowerOf2 * 16;\n    this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n    this.rangeShift = this.numTables * 16 - this.searchRange;\n};\nvar $df50e1efe10a1247$export$2e2bcd8739ae039 = $df50e1efe10a1247$var$Directory;\n\n\n\n\nfunction $66a5b9fb5318558a$export$2e0ae67339d5f1ac(arr, cmp) {\n    let min = 0;\n    let max = arr.length - 1;\n    while(min <= max){\n        let mid = min + max >> 1;\n        let res = cmp(arr[mid]);\n        if (res < 0) max = mid - 1;\n        else if (res > 0) min = mid + 1;\n        else return mid;\n    }\n    return -1;\n}\nfunction $66a5b9fb5318558a$export$d02631cccf789723(index, end) {\n    let range1 = [];\n    while(index < end)range1.push(index++);\n    return range1;\n}\nconst $66a5b9fb5318558a$export$3d28c1996ced1f14 = new TextDecoder(\"ascii\");\n// Based on https://github.com/niklasvh/base64-arraybuffer. MIT license.\nconst $66a5b9fb5318558a$var$CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst $66a5b9fb5318558a$var$LOOKUP = new Uint8Array(256);\nfor(let i = 0; i < $66a5b9fb5318558a$var$CHARS.length; i++)$66a5b9fb5318558a$var$LOOKUP[$66a5b9fb5318558a$var$CHARS.charCodeAt(i)] = i;\nfunction $66a5b9fb5318558a$export$94fdf11bafc8de6b(base64) {\n    let bufferLength = base64.length * 0.75;\n    if (base64[base64.length - 1] === \"=\") {\n        bufferLength--;\n        if (base64[base64.length - 2] === \"=\") bufferLength--;\n    }\n    let bytes = new Uint8Array(bufferLength);\n    let p = 0;\n    for(let i1 = 0, len = base64.length; i1 < len; i1 += 4){\n        let encoded1 = $66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1)];\n        let encoded2 = $66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1 + 1)];\n        let encoded3 = $66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1 + 2)];\n        let encoded4 = $66a5b9fb5318558a$var$LOOKUP[base64.charCodeAt(i1 + 3)];\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return bytes;\n}\n\n\n\n\n\nclass $0d6e160064c86e50$export$2e2bcd8739ae039 {\n    findSubtable(cmapTable, pairs) {\n        for (let [platformID, encodingID] of pairs)for (let cmap of cmapTable.tables){\n            if (cmap.platformID === platformID && cmap.encodingID === encodingID) return cmap.table;\n        }\n        return null;\n    }\n    lookup(codepoint, variationSelector) {\n        // If there is no Unicode cmap in this font, we need to re-encode\n        // the codepoint in the encoding that the cmap supports.\n        if (this.encoding) codepoint = this.encoding.get(codepoint) || codepoint;\n        else if (variationSelector) {\n            let gid = this.getVariationSelector(codepoint, variationSelector);\n            if (gid) return gid;\n        }\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                return cmap.codeMap.get(codepoint) || 0;\n            case 4:\n                {\n                    let min = 0;\n                    let max = cmap.segCount - 1;\n                    while(min <= max){\n                        let mid = min + max >> 1;\n                        if (codepoint < cmap.startCode.get(mid)) max = mid - 1;\n                        else if (codepoint > cmap.endCode.get(mid)) min = mid + 1;\n                        else {\n                            let rangeOffset = cmap.idRangeOffset.get(mid);\n                            let gid;\n                            if (rangeOffset === 0) gid = codepoint + cmap.idDelta.get(mid);\n                            else {\n                                let index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                                gid = cmap.glyphIndexArray.get(index) || 0;\n                                if (gid !== 0) gid += cmap.idDelta.get(mid);\n                            }\n                            return gid & 0xffff;\n                        }\n                    }\n                    return 0;\n                }\n            case 8:\n                throw new Error(\"TODO: cmap format 8\");\n            case 6:\n            case 10:\n                return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n            case 12:\n            case 13:\n                {\n                    let min = 0;\n                    let max = cmap.nGroups - 1;\n                    while(min <= max){\n                        let mid = min + max >> 1;\n                        let group = cmap.groups.get(mid);\n                        if (codepoint < group.startCharCode) max = mid - 1;\n                        else if (codepoint > group.endCharCode) min = mid + 1;\n                        else {\n                            if (cmap.version === 12) return group.glyphID + (codepoint - group.startCharCode);\n                            else return group.glyphID;\n                        }\n                    }\n                    return 0;\n                }\n            case 14:\n                throw new Error(\"TODO: cmap format 14\");\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    getVariationSelector(codepoint, variationSelector) {\n        if (!this.uvs) return 0;\n        let selectors = this.uvs.varSelectors.toArray();\n        let i = (0, $66a5b9fb5318558a$export$2e0ae67339d5f1ac)(selectors, (x)=>variationSelector - x.varSelector);\n        let sel = selectors[i];\n        if (i !== -1 && sel.defaultUVS) i = (0, $66a5b9fb5318558a$export$2e0ae67339d5f1ac)(sel.defaultUVS, (x)=>codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? 1 : 0);\n        if (i !== -1 && sel.nonDefaultUVS) {\n            i = (0, $66a5b9fb5318558a$export$2e0ae67339d5f1ac)(sel.nonDefaultUVS, (x)=>codepoint - x.unicodeValue);\n            if (i !== -1) return sel.nonDefaultUVS[i].glyphID;\n        }\n        return 0;\n    }\n    getCharacterSet() {\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                return (0, $66a5b9fb5318558a$export$d02631cccf789723)(0, cmap.codeMap.length);\n            case 4:\n                {\n                    let res = [];\n                    let endCodes = cmap.endCode.toArray();\n                    for(let i = 0; i < endCodes.length; i++){\n                        let tail = endCodes[i] + 1;\n                        let start = cmap.startCode.get(i);\n                        res.push(...(0, $66a5b9fb5318558a$export$d02631cccf789723)(start, tail));\n                    }\n                    return res;\n                }\n            case 8:\n                throw new Error(\"TODO: cmap format 8\");\n            case 6:\n            case 10:\n                return (0, $66a5b9fb5318558a$export$d02631cccf789723)(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n            case 12:\n            case 13:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())res.push(...(0, $66a5b9fb5318558a$export$d02631cccf789723)(group.startCharCode, group.endCharCode + 1));\n                    return res;\n                }\n            case 14:\n                throw new Error(\"TODO: cmap format 14\");\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    codePointsForGlyph(gid) {\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                {\n                    let res = [];\n                    for(let i = 0; i < 256; i++)if (cmap.codeMap.get(i) === gid) res.push(i);\n                    return res;\n                }\n            case 4:\n                {\n                    let res = [];\n                    for(let i = 0; i < cmap.segCount; i++){\n                        let end = cmap.endCode.get(i);\n                        let start = cmap.startCode.get(i);\n                        let rangeOffset = cmap.idRangeOffset.get(i);\n                        let delta = cmap.idDelta.get(i);\n                        for(var c = start; c <= end; c++){\n                            let g = 0;\n                            if (rangeOffset === 0) g = c + delta;\n                            else {\n                                let index = rangeOffset / 2 + (c - start) - (cmap.segCount - i);\n                                g = cmap.glyphIndexArray.get(index) || 0;\n                                if (g !== 0) g += delta;\n                            }\n                            if (g === gid) res.push(c);\n                        }\n                    }\n                    return res;\n                }\n            case 12:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) res.push(group.startCharCode + (gid - group.glyphID));\n                    return res;\n                }\n            case 13:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())if (gid === group.glyphID) res.push(...(0, $66a5b9fb5318558a$export$d02631cccf789723)(group.startCharCode, group.endCharCode + 1));\n                    return res;\n                }\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    constructor(cmapTable){\n        // Attempt to find a Unicode cmap first\n        this.encoding = null;\n        this.cmap = this.findSubtable(cmapTable, [\n            // 32-bit subtables\n            [\n                3,\n                10\n            ],\n            [\n                0,\n                6\n            ],\n            [\n                0,\n                4\n            ],\n            // 16-bit subtables\n            [\n                3,\n                1\n            ],\n            [\n                0,\n                3\n            ],\n            [\n                0,\n                2\n            ],\n            [\n                0,\n                1\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        // If not unicode cmap was found, take the first table with a supported encoding.\n        if (!this.cmap) for (let cmap of cmapTable.tables){\n            let encoding = (0, $e2613b812f052cbe$export$badc544e0651b6b1)(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n            let mapping = (0, $e2613b812f052cbe$export$1dceb3c14ed68bee)(encoding);\n            if (mapping) {\n                this.cmap = cmap.table;\n                this.encoding = mapping;\n            }\n        }\n        if (!this.cmap) throw new Error(\"Could not find a supported cmap table\");\n        this.uvs = this.findSubtable(cmapTable, [\n            [\n                0,\n                5\n            ]\n        ]);\n        if (this.uvs && this.uvs.version !== 14) this.uvs = null;\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0d6e160064c86e50$export$2e2bcd8739ae039.prototype, \"getCharacterSet\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0d6e160064c86e50$export$2e2bcd8739ae039.prototype, \"codePointsForGlyph\", null);\n\n\n\nclass $4646d52c2a559cdb$export$2e2bcd8739ae039 {\n    process(glyphs, positions) {\n        for(let glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++){\n            let left = glyphs[glyphIndex].id;\n            let right = glyphs[glyphIndex + 1].id;\n            positions[glyphIndex].xAdvance += this.getKerning(left, right);\n        }\n    }\n    getKerning(left, right) {\n        let res = 0;\n        for (let table of this.kern.tables){\n            if (table.coverage.crossStream) continue;\n            switch(table.version){\n                case 0:\n                    if (!table.coverage.horizontal) continue;\n                    break;\n                case 1:\n                    if (table.coverage.vertical || table.coverage.variation) continue;\n                    break;\n                default:\n                    throw new Error(`Unsupported kerning table version ${table.version}`);\n            }\n            let val = 0;\n            let s = table.subtable;\n            switch(table.format){\n                case 0:\n                    let pairIdx = (0, $66a5b9fb5318558a$export$2e0ae67339d5f1ac)(s.pairs, function(pair) {\n                        return left - pair.left || right - pair.right;\n                    });\n                    if (pairIdx >= 0) val = s.pairs[pairIdx].value;\n                    break;\n                case 2:\n                    let leftOffset = 0, rightOffset = 0;\n                    if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n                    else leftOffset = s.array.off;\n                    if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n                    let index = (leftOffset + rightOffset - s.array.off) / 2;\n                    val = s.array.values.get(index);\n                    break;\n                case 3:\n                    if (left >= s.glyphCount || right >= s.glyphCount) return 0;\n                    val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n                    break;\n                default:\n                    throw new Error(`Unsupported kerning sub-table format ${table.format}`);\n            }\n            // Microsoft supports the override flag, which resets the result\n            // Otherwise, the sum of the results from all subtables is returned\n            if (table.coverage.override) res = val;\n            else res += val;\n        }\n        return res;\n    }\n    constructor(font){\n        this.kern = font.kern;\n    }\n}\n\n\n\nclass $a57a26817cd35108$export$2e2bcd8739ae039 {\n    positionGlyphs(glyphs, positions) {\n        // find each base + mark cluster, and position the marks relative to the base\n        let clusterStart = 0;\n        let clusterEnd = 0;\n        for(let index = 0; index < glyphs.length; index++){\n            let glyph = glyphs[index];\n            if (glyph.isMark) clusterEnd = index;\n            else {\n                if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n                clusterStart = clusterEnd = index;\n            }\n        }\n        if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        return positions;\n    }\n    positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n        let base = glyphs[clusterStart];\n        let baseBox = base.cbox.copy();\n        // adjust bounding box for ligature glyphs\n        if (base.codePoints.length > 1) // LTR. TODO: RTL support.\n        baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n        let xOffset = -positions[clusterStart].xAdvance;\n        let yOffset = 0;\n        let yGap = this.font.unitsPerEm / 16;\n        // position each of the mark glyphs relative to the base glyph\n        for(let index = clusterStart + 1; index <= clusterEnd; index++){\n            let mark = glyphs[index];\n            let markBox = mark.cbox;\n            let position = positions[index];\n            let combiningClass = this.getCombiningClass(mark.codePoints[0]);\n            if (combiningClass !== \"Not_Reordered\") {\n                position.xOffset = position.yOffset = 0;\n                // x positioning\n                switch(combiningClass){\n                    case \"Double_Above\":\n                    case \"Double_Below\":\n                        // LTR. TODO: RTL support.\n                        position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n                        break;\n                    case \"Attached_Below_Left\":\n                    case \"Below_Left\":\n                    case \"Above_Left\":\n                        // left align\n                        position.xOffset += baseBox.minX - markBox.minX;\n                        break;\n                    case \"Attached_Above_Right\":\n                    case \"Below_Right\":\n                    case \"Above_Right\":\n                        // right align\n                        position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n                        break;\n                    default:\n                        // center align\n                        position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n                }\n                // y positioning\n                switch(combiningClass){\n                    case \"Double_Below\":\n                    case \"Below_Left\":\n                    case \"Below\":\n                    case \"Below_Right\":\n                    case \"Attached_Below_Left\":\n                    case \"Attached_Below\":\n                        // add a small gap between the glyphs if they are not attached\n                        if (combiningClass === \"Attached_Below_Left\" || combiningClass === \"Attached_Below\") baseBox.minY += yGap;\n                        position.yOffset = -baseBox.minY - markBox.maxY;\n                        baseBox.minY += markBox.height;\n                        break;\n                    case \"Double_Above\":\n                    case \"Above_Left\":\n                    case \"Above\":\n                    case \"Above_Right\":\n                    case \"Attached_Above\":\n                    case \"Attached_Above_Right\":\n                        // add a small gap between the glyphs if they are not attached\n                        if (combiningClass === \"Attached_Above\" || combiningClass === \"Attached_Above_Right\") baseBox.maxY += yGap;\n                        position.yOffset = baseBox.maxY - markBox.minY;\n                        baseBox.maxY += markBox.height;\n                        break;\n                }\n                position.xAdvance = position.yAdvance = 0;\n                position.xOffset += xOffset;\n                position.yOffset += yOffset;\n            } else {\n                xOffset -= position.xAdvance;\n                yOffset -= position.yAdvance;\n            }\n        }\n        return;\n    }\n    getCombiningClass(codePoint) {\n        let combiningClass = (0, $gfJaN$unicodeproperties.getCombiningClass)(codePoint);\n        // Thai / Lao need some per-character work\n        if ((codePoint & -256) === 0x0e00) {\n            if (combiningClass === \"Not_Reordered\") switch(codePoint){\n                case 0x0e31:\n                case 0x0e34:\n                case 0x0e35:\n                case 0x0e36:\n                case 0x0e37:\n                case 0x0e47:\n                case 0x0e4c:\n                case 0x0e3d:\n                case 0x0e4e:\n                    return \"Above_Right\";\n                case 0x0eb1:\n                case 0x0eb4:\n                case 0x0eb5:\n                case 0x0eb6:\n                case 0x0eb7:\n                case 0x0ebb:\n                case 0x0ecc:\n                case 0x0ecd:\n                    return \"Above\";\n                case 0x0ebc:\n                    return \"Below\";\n            }\n            else if (codePoint === 0x0e3a) return \"Below_Right\";\n        }\n        switch(combiningClass){\n            // Hebrew\n            case \"CCC10\":\n            case \"CCC11\":\n            case \"CCC12\":\n            case \"CCC13\":\n            case \"CCC14\":\n            case \"CCC15\":\n            case \"CCC16\":\n            case \"CCC17\":\n            case \"CCC18\":\n            case \"CCC20\":\n            case \"CCC22\":\n                return \"Below\";\n            case \"CCC23\":\n                return \"Attached_Above\";\n            case \"CCC24\":\n                return \"Above_Right\";\n            case \"CCC25\":\n            case \"CCC19\":\n                return \"Above_Left\";\n            case \"CCC26\":\n                return \"Above\";\n            case \"CCC21\":\n                break;\n            // Arabic and Syriac\n            case \"CCC27\":\n            case \"CCC28\":\n            case \"CCC30\":\n            case \"CCC31\":\n            case \"CCC33\":\n            case \"CCC34\":\n            case \"CCC35\":\n            case \"CCC36\":\n                return \"Above\";\n            case \"CCC29\":\n            case \"CCC32\":\n                return \"Below\";\n            // Thai\n            case \"CCC103\":\n                return \"Below_Right\";\n            case \"CCC107\":\n                return \"Above_Right\";\n            // Lao\n            case \"CCC118\":\n                return \"Below\";\n            case \"CCC122\":\n                return \"Above\";\n            // Tibetan\n            case \"CCC129\":\n            case \"CCC132\":\n                return \"Below\";\n            case \"CCC130\":\n                return \"Above\";\n        }\n        return combiningClass;\n    }\n    constructor(font){\n        this.font = font;\n    }\n}\n\n\nclass $0e2da1c4ce69e8ad$export$2e2bcd8739ae039 {\n    /**\n   * The width of the bounding box\n   * @type {number}\n   */ get width() {\n        return this.maxX - this.minX;\n    }\n    /**\n   * The height of the bounding box\n   * @type {number}\n   */ get height() {\n        return this.maxY - this.minY;\n    }\n    addPoint(x, y) {\n        if (Math.abs(x) !== Infinity) {\n            if (x < this.minX) this.minX = x;\n            if (x > this.maxX) this.maxX = x;\n        }\n        if (Math.abs(y) !== Infinity) {\n            if (y < this.minY) this.minY = y;\n            if (y > this.maxY) this.maxY = y;\n        }\n    }\n    copy() {\n        return new $0e2da1c4ce69e8ad$export$2e2bcd8739ae039(this.minX, this.minY, this.maxX, this.maxY);\n    }\n    constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity){\n        /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */ this.minX = minX;\n        /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */ this.minY = minY;\n        /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */ this.maxX = maxX;\n        /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */ this.maxY = maxY;\n    }\n}\n\n\n\n// This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nconst $e38a1a895f6aeb54$var$UNICODE_SCRIPTS = {\n    Caucasian_Albanian: \"aghb\",\n    Arabic: \"arab\",\n    Imperial_Aramaic: \"armi\",\n    Armenian: \"armn\",\n    Avestan: \"avst\",\n    Balinese: \"bali\",\n    Bamum: \"bamu\",\n    Bassa_Vah: \"bass\",\n    Batak: \"batk\",\n    Bengali: [\n        \"bng2\",\n        \"beng\"\n    ],\n    Bopomofo: \"bopo\",\n    Brahmi: \"brah\",\n    Braille: \"brai\",\n    Buginese: \"bugi\",\n    Buhid: \"buhd\",\n    Chakma: \"cakm\",\n    Canadian_Aboriginal: \"cans\",\n    Carian: \"cari\",\n    Cham: \"cham\",\n    Cherokee: \"cher\",\n    Coptic: \"copt\",\n    Cypriot: \"cprt\",\n    Cyrillic: \"cyrl\",\n    Devanagari: [\n        \"dev2\",\n        \"deva\"\n    ],\n    Deseret: \"dsrt\",\n    Duployan: \"dupl\",\n    Egyptian_Hieroglyphs: \"egyp\",\n    Elbasan: \"elba\",\n    Ethiopic: \"ethi\",\n    Georgian: \"geor\",\n    Glagolitic: \"glag\",\n    Gothic: \"goth\",\n    Grantha: \"gran\",\n    Greek: \"grek\",\n    Gujarati: [\n        \"gjr2\",\n        \"gujr\"\n    ],\n    Gurmukhi: [\n        \"gur2\",\n        \"guru\"\n    ],\n    Hangul: \"hang\",\n    Han: \"hani\",\n    Hanunoo: \"hano\",\n    Hebrew: \"hebr\",\n    Hiragana: \"hira\",\n    Pahawh_Hmong: \"hmng\",\n    Katakana_Or_Hiragana: \"hrkt\",\n    Old_Italic: \"ital\",\n    Javanese: \"java\",\n    Kayah_Li: \"kali\",\n    Katakana: \"kana\",\n    Kharoshthi: \"khar\",\n    Khmer: \"khmr\",\n    Khojki: \"khoj\",\n    Kannada: [\n        \"knd2\",\n        \"knda\"\n    ],\n    Kaithi: \"kthi\",\n    Tai_Tham: \"lana\",\n    Lao: \"lao \",\n    Latin: \"latn\",\n    Lepcha: \"lepc\",\n    Limbu: \"limb\",\n    Linear_A: \"lina\",\n    Linear_B: \"linb\",\n    Lisu: \"lisu\",\n    Lycian: \"lyci\",\n    Lydian: \"lydi\",\n    Mahajani: \"mahj\",\n    Mandaic: \"mand\",\n    Manichaean: \"mani\",\n    Mende_Kikakui: \"mend\",\n    Meroitic_Cursive: \"merc\",\n    Meroitic_Hieroglyphs: \"mero\",\n    Malayalam: [\n        \"mlm2\",\n        \"mlym\"\n    ],\n    Modi: \"modi\",\n    Mongolian: \"mong\",\n    Mro: \"mroo\",\n    Meetei_Mayek: \"mtei\",\n    Myanmar: [\n        \"mym2\",\n        \"mymr\"\n    ],\n    Old_North_Arabian: \"narb\",\n    Nabataean: \"nbat\",\n    Nko: \"nko \",\n    Ogham: \"ogam\",\n    Ol_Chiki: \"olck\",\n    Old_Turkic: \"orkh\",\n    Oriya: [\n        \"ory2\",\n        \"orya\"\n    ],\n    Osmanya: \"osma\",\n    Palmyrene: \"palm\",\n    Pau_Cin_Hau: \"pauc\",\n    Old_Permic: \"perm\",\n    Phags_Pa: \"phag\",\n    Inscriptional_Pahlavi: \"phli\",\n    Psalter_Pahlavi: \"phlp\",\n    Phoenician: \"phnx\",\n    Miao: \"plrd\",\n    Inscriptional_Parthian: \"prti\",\n    Rejang: \"rjng\",\n    Runic: \"runr\",\n    Samaritan: \"samr\",\n    Old_South_Arabian: \"sarb\",\n    Saurashtra: \"saur\",\n    Shavian: \"shaw\",\n    Sharada: \"shrd\",\n    Siddham: \"sidd\",\n    Khudawadi: \"sind\",\n    Sinhala: \"sinh\",\n    Sora_Sompeng: \"sora\",\n    Sundanese: \"sund\",\n    Syloti_Nagri: \"sylo\",\n    Syriac: \"syrc\",\n    Tagbanwa: \"tagb\",\n    Takri: \"takr\",\n    Tai_Le: \"tale\",\n    New_Tai_Lue: \"talu\",\n    Tamil: [\n        \"tml2\",\n        \"taml\"\n    ],\n    Tai_Viet: \"tavt\",\n    Telugu: [\n        \"tel2\",\n        \"telu\"\n    ],\n    Tifinagh: \"tfng\",\n    Tagalog: \"tglg\",\n    Thaana: \"thaa\",\n    Thai: \"thai\",\n    Tibetan: \"tibt\",\n    Tirhuta: \"tirh\",\n    Ugaritic: \"ugar\",\n    Vai: \"vai \",\n    Warang_Citi: \"wara\",\n    Old_Persian: \"xpeo\",\n    Cuneiform: \"xsux\",\n    Yi: \"yi  \",\n    Inherited: \"zinh\",\n    Common: \"zyyy\",\n    Unknown: \"zzzz\"\n};\nconst $e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS = {};\nfor(let script in $e38a1a895f6aeb54$var$UNICODE_SCRIPTS){\n    let tag = $e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script];\n    if (Array.isArray(tag)) for (let t of tag)$e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS[t] = script;\n    else $e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS[tag] = script;\n}\nfunction $e38a1a895f6aeb54$export$b32f0b5f69d65e51(script1) {\n    return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script1];\n}\nfunction $e38a1a895f6aeb54$export$ce50e82f12a827a4(tag) {\n    return $e38a1a895f6aeb54$var$OPENTYPE_SCRIPTS[tag];\n}\nfunction $e38a1a895f6aeb54$export$e5cb25e204fb8450(string) {\n    let len = string.length;\n    let idx = 0;\n    while(idx < len){\n        let code = string.charCodeAt(idx++);\n        // Check if this is a high surrogate\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n            let next = string.charCodeAt(idx);\n            // Check if this is a low surrogate\n            if (0xdc00 <= next && next <= 0xdfff) {\n                idx++;\n                code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n            }\n        }\n        let script2 = (0, $gfJaN$unicodeproperties.getScript)(code);\n        if (script2 !== \"Common\" && script2 !== \"Inherited\" && script2 !== \"Unknown\") return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script2];\n    }\n    return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS.Unknown;\n}\nfunction $e38a1a895f6aeb54$export$16fab0757cfc223d(codePoints) {\n    for(let i = 0; i < codePoints.length; i++){\n        let codePoint = codePoints[i];\n        let script3 = (0, $gfJaN$unicodeproperties.getScript)(codePoint);\n        if (script3 !== \"Common\" && script3 !== \"Inherited\" && script3 !== \"Unknown\") return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS[script3];\n    }\n    return $e38a1a895f6aeb54$var$UNICODE_SCRIPTS.Unknown;\n}\n// The scripts in this map are written from right to left\nconst $e38a1a895f6aeb54$var$RTL = {\n    arab: true,\n    hebr: true,\n    syrc: true,\n    thaa: true,\n    cprt: true,\n    khar: true,\n    phnx: true,\n    \"nko \": true,\n    lydi: true,\n    avst: true,\n    armi: true,\n    phli: true,\n    prti: true,\n    sarb: true,\n    orkh: true,\n    samr: true,\n    mand: true,\n    merc: true,\n    mero: true,\n    // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n    mani: true,\n    mend: true,\n    nbat: true,\n    narb: true,\n    palm: true,\n    phlp: true // Psalter Pahlavi\n};\nfunction $e38a1a895f6aeb54$export$9fddb9d0dd7d8a54(script4) {\n    if ($e38a1a895f6aeb54$var$RTL[script4]) return \"rtl\";\n    return \"ltr\";\n}\n\n\nclass $b19c79ec7a94fa39$export$2e2bcd8739ae039 {\n    /**\n   * The total advance width of the run.\n   * @type {number}\n   */ get advanceWidth() {\n        let width = 0;\n        for (let position of this.positions)width += position.xAdvance;\n        return width;\n    }\n    /**\n  * The total advance height of the run.\n  * @type {number}\n  */ get advanceHeight() {\n        let height = 0;\n        for (let position of this.positions)height += position.yAdvance;\n        return height;\n    }\n    /**\n  * The bounding box containing all glyphs in the run.\n  * @type {BBox}\n  */ get bbox() {\n        let bbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039);\n        let x = 0;\n        let y = 0;\n        for(let index = 0; index < this.glyphs.length; index++){\n            let glyph = this.glyphs[index];\n            let p = this.positions[index];\n            let b = glyph.bbox;\n            bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n            bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n            x += p.xAdvance;\n            y += p.yAdvance;\n        }\n        return bbox;\n    }\n    constructor(glyphs, features, script, language, direction){\n        /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */ this.glyphs = glyphs;\n        /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */ this.positions = null;\n        /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */ this.script = script;\n        /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */ this.language = language || null;\n        /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */ this.direction = direction || $e38a1a895f6aeb54$export$9fddb9d0dd7d8a54(script);\n        /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */ this.features = {};\n        // Convert features to an object\n        if (Array.isArray(features)) for (let tag of features)this.features[tag] = true;\n        else if (typeof features === \"object\") this.features = features;\n    }\n}\n\n\nclass $9195cf1266c12ea5$export$2e2bcd8739ae039 {\n    constructor(xAdvance = 0, yAdvance = 0, xOffset = 0, yOffset = 0){\n        /**\n     * The amount to move the virtual pen in the X direction after rendering this glyph.\n     * @type {number}\n     */ this.xAdvance = xAdvance;\n        /**\n     * The amount to move the virtual pen in the Y direction after rendering this glyph.\n     * @type {number}\n     */ this.yAdvance = yAdvance;\n        /**\n     * The offset from the pen position in the X direction at which to render this glyph.\n     * @type {number}\n     */ this.xOffset = xOffset;\n        /**\n     * The offset from the pen position in the Y direction at which to render this glyph.\n     * @type {number}\n     */ this.yOffset = yOffset;\n    }\n}\n\n\n\n// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nconst $2b7f887ebcb5888a$var$features = {\n    allTypographicFeatures: {\n        code: 0,\n        exclusive: false,\n        allTypeFeatures: 0\n    },\n    ligatures: {\n        code: 1,\n        exclusive: false,\n        requiredLigatures: 0,\n        commonLigatures: 2,\n        rareLigatures: 4,\n        // logos: 6\n        rebusPictures: 8,\n        diphthongLigatures: 10,\n        squaredLigatures: 12,\n        abbrevSquaredLigatures: 14,\n        symbolLigatures: 16,\n        contextualLigatures: 18,\n        historicalLigatures: 20\n    },\n    cursiveConnection: {\n        code: 2,\n        exclusive: true,\n        unconnected: 0,\n        partiallyConnected: 1,\n        cursive: 2\n    },\n    letterCase: {\n        code: 3,\n        exclusive: true\n    },\n    // upperAndLowerCase: 0          # deprecated\n    // allCaps: 1                    # deprecated\n    // allLowerCase: 2               # deprecated\n    // smallCaps: 3                  # deprecated\n    // initialCaps: 4                # deprecated\n    // initialCapsAndSmallCaps: 5    # deprecated\n    verticalSubstitution: {\n        code: 4,\n        exclusive: false,\n        substituteVerticalForms: 0\n    },\n    linguisticRearrangement: {\n        code: 5,\n        exclusive: false,\n        linguisticRearrangement: 0\n    },\n    numberSpacing: {\n        code: 6,\n        exclusive: true,\n        monospacedNumbers: 0,\n        proportionalNumbers: 1,\n        thirdWidthNumbers: 2,\n        quarterWidthNumbers: 3\n    },\n    smartSwash: {\n        code: 8,\n        exclusive: false,\n        wordInitialSwashes: 0,\n        wordFinalSwashes: 2,\n        // lineInitialSwashes: 4\n        // lineFinalSwashes: 6\n        nonFinalSwashes: 8\n    },\n    diacritics: {\n        code: 9,\n        exclusive: true,\n        showDiacritics: 0,\n        hideDiacritics: 1,\n        decomposeDiacritics: 2\n    },\n    verticalPosition: {\n        code: 10,\n        exclusive: true,\n        normalPosition: 0,\n        superiors: 1,\n        inferiors: 2,\n        ordinals: 3,\n        scientificInferiors: 4\n    },\n    fractions: {\n        code: 11,\n        exclusive: true,\n        noFractions: 0,\n        verticalFractions: 1,\n        diagonalFractions: 2\n    },\n    overlappingCharacters: {\n        code: 13,\n        exclusive: false,\n        preventOverlap: 0\n    },\n    typographicExtras: {\n        code: 14,\n        exclusive: false,\n        // hyphensToEmDash: 0\n        // hyphenToEnDash: 2\n        slashedZero: 4\n    },\n    // formInterrobang: 6\n    // smartQuotes: 8\n    // periodsToEllipsis: 10\n    mathematicalExtras: {\n        code: 15,\n        exclusive: false,\n        // hyphenToMinus: 0\n        // asteristoMultiply: 2\n        // slashToDivide: 4\n        // inequalityLigatures: 6\n        // exponents: 8\n        mathematicalGreek: 10\n    },\n    ornamentSets: {\n        code: 16,\n        exclusive: true,\n        noOrnaments: 0,\n        dingbats: 1,\n        piCharacters: 2,\n        fleurons: 3,\n        decorativeBorders: 4,\n        internationalSymbols: 5,\n        mathSymbols: 6\n    },\n    characterAlternatives: {\n        code: 17,\n        exclusive: true,\n        noAlternates: 0\n    },\n    // user defined options\n    designComplexity: {\n        code: 18,\n        exclusive: true,\n        designLevel1: 0,\n        designLevel2: 1,\n        designLevel3: 2,\n        designLevel4: 3,\n        designLevel5: 4\n    },\n    styleOptions: {\n        code: 19,\n        exclusive: true,\n        noStyleOptions: 0,\n        displayText: 1,\n        engravedText: 2,\n        illuminatedCaps: 3,\n        titlingCaps: 4,\n        tallCaps: 5\n    },\n    characterShape: {\n        code: 20,\n        exclusive: true,\n        traditionalCharacters: 0,\n        simplifiedCharacters: 1,\n        JIS1978Characters: 2,\n        JIS1983Characters: 3,\n        JIS1990Characters: 4,\n        traditionalAltOne: 5,\n        traditionalAltTwo: 6,\n        traditionalAltThree: 7,\n        traditionalAltFour: 8,\n        traditionalAltFive: 9,\n        expertCharacters: 10,\n        JIS2004Characters: 11,\n        hojoCharacters: 12,\n        NLCCharacters: 13,\n        traditionalNamesCharacters: 14\n    },\n    numberCase: {\n        code: 21,\n        exclusive: true,\n        lowerCaseNumbers: 0,\n        upperCaseNumbers: 1\n    },\n    textSpacing: {\n        code: 22,\n        exclusive: true,\n        proportionalText: 0,\n        monospacedText: 1,\n        halfWidthText: 2,\n        thirdWidthText: 3,\n        quarterWidthText: 4,\n        altProportionalText: 5,\n        altHalfWidthText: 6\n    },\n    transliteration: {\n        code: 23,\n        exclusive: true,\n        noTransliteration: 0\n    },\n    // hanjaToHangul: 1\n    // hiraganaToKatakana: 2\n    // katakanaToHiragana: 3\n    // kanaToRomanization: 4\n    // romanizationToHiragana: 5\n    // romanizationToKatakana: 6\n    // hanjaToHangulAltOne: 7\n    // hanjaToHangulAltTwo: 8\n    // hanjaToHangulAltThree: 9\n    annotation: {\n        code: 24,\n        exclusive: true,\n        noAnnotation: 0,\n        boxAnnotation: 1,\n        roundedBoxAnnotation: 2,\n        circleAnnotation: 3,\n        invertedCircleAnnotation: 4,\n        parenthesisAnnotation: 5,\n        periodAnnotation: 6,\n        romanNumeralAnnotation: 7,\n        diamondAnnotation: 8,\n        invertedBoxAnnotation: 9,\n        invertedRoundedBoxAnnotation: 10\n    },\n    kanaSpacing: {\n        code: 25,\n        exclusive: true,\n        fullWidthKana: 0,\n        proportionalKana: 1\n    },\n    ideographicSpacing: {\n        code: 26,\n        exclusive: true,\n        fullWidthIdeographs: 0,\n        proportionalIdeographs: 1,\n        halfWidthIdeographs: 2\n    },\n    unicodeDecomposition: {\n        code: 27,\n        exclusive: false,\n        canonicalComposition: 0,\n        compatibilityComposition: 2,\n        transcodingComposition: 4\n    },\n    rubyKana: {\n        code: 28,\n        exclusive: false,\n        // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n        // rubyKana: 1     # deprecated - use rubyKanaOn instead\n        rubyKana: 2\n    },\n    CJKSymbolAlternatives: {\n        code: 29,\n        exclusive: true,\n        noCJKSymbolAlternatives: 0,\n        CJKSymbolAltOne: 1,\n        CJKSymbolAltTwo: 2,\n        CJKSymbolAltThree: 3,\n        CJKSymbolAltFour: 4,\n        CJKSymbolAltFive: 5\n    },\n    ideographicAlternatives: {\n        code: 30,\n        exclusive: true,\n        noIdeographicAlternatives: 0,\n        ideographicAltOne: 1,\n        ideographicAltTwo: 2,\n        ideographicAltThree: 3,\n        ideographicAltFour: 4,\n        ideographicAltFive: 5\n    },\n    CJKVerticalRomanPlacement: {\n        code: 31,\n        exclusive: true,\n        CJKVerticalRomanCentered: 0,\n        CJKVerticalRomanHBaseline: 1\n    },\n    italicCJKRoman: {\n        code: 32,\n        exclusive: false,\n        // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n        // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n        CJKItalicRoman: 2\n    },\n    caseSensitiveLayout: {\n        code: 33,\n        exclusive: false,\n        caseSensitiveLayout: 0,\n        caseSensitiveSpacing: 2\n    },\n    alternateKana: {\n        code: 34,\n        exclusive: false,\n        alternateHorizKana: 0,\n        alternateVertKana: 2\n    },\n    stylisticAlternatives: {\n        code: 35,\n        exclusive: false,\n        noStylisticAlternates: 0,\n        stylisticAltOne: 2,\n        stylisticAltTwo: 4,\n        stylisticAltThree: 6,\n        stylisticAltFour: 8,\n        stylisticAltFive: 10,\n        stylisticAltSix: 12,\n        stylisticAltSeven: 14,\n        stylisticAltEight: 16,\n        stylisticAltNine: 18,\n        stylisticAltTen: 20,\n        stylisticAltEleven: 22,\n        stylisticAltTwelve: 24,\n        stylisticAltThirteen: 26,\n        stylisticAltFourteen: 28,\n        stylisticAltFifteen: 30,\n        stylisticAltSixteen: 32,\n        stylisticAltSeventeen: 34,\n        stylisticAltEighteen: 36,\n        stylisticAltNineteen: 38,\n        stylisticAltTwenty: 40\n    },\n    contextualAlternates: {\n        code: 36,\n        exclusive: false,\n        contextualAlternates: 0,\n        swashAlternates: 2,\n        contextualSwashAlternates: 4\n    },\n    lowerCase: {\n        code: 37,\n        exclusive: true,\n        defaultLowerCase: 0,\n        lowerCaseSmallCaps: 1,\n        lowerCasePetiteCaps: 2\n    },\n    upperCase: {\n        code: 38,\n        exclusive: true,\n        defaultUpperCase: 0,\n        upperCaseSmallCaps: 1,\n        upperCasePetiteCaps: 2\n    },\n    languageTag: {\n        code: 39,\n        exclusive: true\n    },\n    CJKRomanSpacing: {\n        code: 103,\n        exclusive: true,\n        halfWidthCJKRoman: 0,\n        proportionalCJKRoman: 1,\n        defaultCJKRoman: 2,\n        fullWidthCJKRoman: 3\n    }\n};\nconst $2b7f887ebcb5888a$var$feature = (name, selector)=>[\n        $2b7f887ebcb5888a$var$features[name].code,\n        $2b7f887ebcb5888a$var$features[name][selector]\n    ];\nconst $2b7f887ebcb5888a$var$OTMapping = {\n    rlig: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"requiredLigatures\"),\n    clig: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"contextualLigatures\"),\n    dlig: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"rareLigatures\"),\n    hlig: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"historicalLigatures\"),\n    liga: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"commonLigatures\"),\n    hist: $2b7f887ebcb5888a$var$feature(\"ligatures\", \"historicalLigatures\"),\n    smcp: $2b7f887ebcb5888a$var$feature(\"lowerCase\", \"lowerCaseSmallCaps\"),\n    pcap: $2b7f887ebcb5888a$var$feature(\"lowerCase\", \"lowerCasePetiteCaps\"),\n    frac: $2b7f887ebcb5888a$var$feature(\"fractions\", \"diagonalFractions\"),\n    dnom: $2b7f887ebcb5888a$var$feature(\"fractions\", \"diagonalFractions\"),\n    numr: $2b7f887ebcb5888a$var$feature(\"fractions\", \"diagonalFractions\"),\n    afrc: $2b7f887ebcb5888a$var$feature(\"fractions\", \"verticalFractions\"),\n    // aalt\n    // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n    // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n    // unic, vatu, vhal, vjmo, vpal, vrt2\n    // dist -> trak table?\n    // kern, vkrn -> kern table\n    // lfbd + opbd + rtbd -> opbd table?\n    // mark, mkmk -> acnt table?\n    // locl -> languageTag + ltag table\n    case: $2b7f887ebcb5888a$var$feature(\"caseSensitiveLayout\", \"caseSensitiveLayout\"),\n    ccmp: $2b7f887ebcb5888a$var$feature(\"unicodeDecomposition\", \"canonicalComposition\"),\n    cpct: $2b7f887ebcb5888a$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n    valt: $2b7f887ebcb5888a$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n    swsh: $2b7f887ebcb5888a$var$feature(\"contextualAlternates\", \"swashAlternates\"),\n    cswh: $2b7f887ebcb5888a$var$feature(\"contextualAlternates\", \"contextualSwashAlternates\"),\n    curs: $2b7f887ebcb5888a$var$feature(\"cursiveConnection\", \"cursive\"),\n    c2pc: $2b7f887ebcb5888a$var$feature(\"upperCase\", \"upperCasePetiteCaps\"),\n    c2sc: $2b7f887ebcb5888a$var$feature(\"upperCase\", \"upperCaseSmallCaps\"),\n    init: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordInitialSwashes\"),\n    fin2: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    medi: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n    med2: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n    fin3: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    fina: $2b7f887ebcb5888a$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    pkna: $2b7f887ebcb5888a$var$feature(\"kanaSpacing\", \"proportionalKana\"),\n    half: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"halfWidthText\"),\n    halt: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"altHalfWidthText\"),\n    hkna: $2b7f887ebcb5888a$var$feature(\"alternateKana\", \"alternateHorizKana\"),\n    vkna: $2b7f887ebcb5888a$var$feature(\"alternateKana\", \"alternateVertKana\"),\n    // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n    ital: $2b7f887ebcb5888a$var$feature(\"italicCJKRoman\", \"CJKItalicRoman\"),\n    lnum: $2b7f887ebcb5888a$var$feature(\"numberCase\", \"upperCaseNumbers\"),\n    onum: $2b7f887ebcb5888a$var$feature(\"numberCase\", \"lowerCaseNumbers\"),\n    mgrk: $2b7f887ebcb5888a$var$feature(\"mathematicalExtras\", \"mathematicalGreek\"),\n    // nalt: not enough info. what type of annotation?\n    // ornm: ditto, which ornament style?\n    calt: $2b7f887ebcb5888a$var$feature(\"contextualAlternates\", \"contextualAlternates\"),\n    vrt2: $2b7f887ebcb5888a$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n    vert: $2b7f887ebcb5888a$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n    tnum: $2b7f887ebcb5888a$var$feature(\"numberSpacing\", \"monospacedNumbers\"),\n    pnum: $2b7f887ebcb5888a$var$feature(\"numberSpacing\", \"proportionalNumbers\"),\n    sups: $2b7f887ebcb5888a$var$feature(\"verticalPosition\", \"superiors\"),\n    subs: $2b7f887ebcb5888a$var$feature(\"verticalPosition\", \"inferiors\"),\n    ordn: $2b7f887ebcb5888a$var$feature(\"verticalPosition\", \"ordinals\"),\n    pwid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"proportionalText\"),\n    hwid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"halfWidthText\"),\n    qwid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"quarterWidthText\"),\n    twid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"thirdWidthText\"),\n    fwid: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"proportionalText\"),\n    palt: $2b7f887ebcb5888a$var$feature(\"textSpacing\", \"altProportionalText\"),\n    trad: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"traditionalCharacters\"),\n    smpl: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"simplifiedCharacters\"),\n    jp78: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS1978Characters\"),\n    jp83: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS1983Characters\"),\n    jp90: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS1990Characters\"),\n    jp04: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"JIS2004Characters\"),\n    expt: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"expertCharacters\"),\n    hojo: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"hojoCharacters\"),\n    nlck: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"NLCCharacters\"),\n    tnam: $2b7f887ebcb5888a$var$feature(\"characterShape\", \"traditionalNamesCharacters\"),\n    ruby: $2b7f887ebcb5888a$var$feature(\"rubyKana\", \"rubyKana\"),\n    titl: $2b7f887ebcb5888a$var$feature(\"styleOptions\", \"titlingCaps\"),\n    zero: $2b7f887ebcb5888a$var$feature(\"typographicExtras\", \"slashedZero\"),\n    ss01: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltOne\"),\n    ss02: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTwo\"),\n    ss03: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltThree\"),\n    ss04: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFour\"),\n    ss05: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFive\"),\n    ss06: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSix\"),\n    ss07: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSeven\"),\n    ss08: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltEight\"),\n    ss09: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltNine\"),\n    ss10: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTen\"),\n    ss11: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltEleven\"),\n    ss12: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTwelve\"),\n    ss13: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltThirteen\"),\n    ss14: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFourteen\"),\n    ss15: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltFifteen\"),\n    ss16: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSixteen\"),\n    ss17: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltSeventeen\"),\n    ss18: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltEighteen\"),\n    ss19: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltNineteen\"),\n    ss20: $2b7f887ebcb5888a$var$feature(\"stylisticAlternatives\", \"stylisticAltTwenty\")\n};\n// salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\nfor(let i = 1; i <= 99; i++)$2b7f887ebcb5888a$var$OTMapping[`cv${`00${i}`.slice(-2)}`] = [\n    $2b7f887ebcb5888a$var$features.characterAlternatives.code,\n    i\n];\n// create inverse mapping\nlet $2b7f887ebcb5888a$var$AATMapping = {};\nfor(let ot in $2b7f887ebcb5888a$var$OTMapping){\n    let aat = $2b7f887ebcb5888a$var$OTMapping[ot];\n    if ($2b7f887ebcb5888a$var$AATMapping[aat[0]] == null) $2b7f887ebcb5888a$var$AATMapping[aat[0]] = {};\n    $2b7f887ebcb5888a$var$AATMapping[aat[0]][aat[1]] = ot;\n}\nfunction $2b7f887ebcb5888a$export$b813f7d2a1677c16(features1) {\n    let res = {};\n    for(let k in features1){\n        let r;\n        if (r = $2b7f887ebcb5888a$var$OTMapping[k]) {\n            if (res[r[0]] == null) res[r[0]] = {};\n            res[r[0]][r[1]] = features1[k];\n        }\n    }\n    return res;\n}\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction $2b7f887ebcb5888a$var$mapFeatureStrings(f) {\n    let [type, setting] = f;\n    if (isNaN(type)) var typeCode = $2b7f887ebcb5888a$var$features[type] && $2b7f887ebcb5888a$var$features[type].code;\n    else var typeCode = type;\n    if (isNaN(setting)) var settingCode = $2b7f887ebcb5888a$var$features[type] && $2b7f887ebcb5888a$var$features[type][setting];\n    else var settingCode = setting;\n    return [\n        typeCode,\n        settingCode\n    ];\n}\nfunction $2b7f887ebcb5888a$export$bd6df347a4f391c4(features2) {\n    let res = {};\n    if (Array.isArray(features2)) for(let k = 0; k < features2.length; k++){\n        let r;\n        let f = $2b7f887ebcb5888a$var$mapFeatureStrings(features2[k]);\n        if (r = $2b7f887ebcb5888a$var$AATMapping[f[0]] && $2b7f887ebcb5888a$var$AATMapping[f[0]][f[1]]) res[r] = true;\n    }\n    else if (typeof features2 === \"object\") for(let type in features2){\n        let feature1 = features2[type];\n        for(let setting in feature1){\n            let r;\n            let f = $2b7f887ebcb5888a$var$mapFeatureStrings([\n                type,\n                setting\n            ]);\n            if (feature1[setting] && (r = $2b7f887ebcb5888a$var$AATMapping[f[0]] && $2b7f887ebcb5888a$var$AATMapping[f[0]][f[1]])) res[r] = true;\n        }\n    }\n    return Object.keys(res);\n}\n\n\n\n\n\n\n\nclass $f3d63ae925545400$export$2e2bcd8739ae039 {\n    lookup(glyph) {\n        switch(this.table.version){\n            case 0:\n                return this.table.values.getItem(glyph);\n            case 2:\n            case 4:\n                {\n                    let min = 0;\n                    let max = this.table.binarySearchHeader.nUnits - 1;\n                    while(min <= max){\n                        var mid = min + max >> 1;\n                        var seg = this.table.segments[mid];\n                        // special end of search value\n                        if (seg.firstGlyph === 0xffff) return null;\n                        if (glyph < seg.firstGlyph) max = mid - 1;\n                        else if (glyph > seg.lastGlyph) min = mid + 1;\n                        else {\n                            if (this.table.version === 2) return seg.value;\n                            else return seg.values[glyph - seg.firstGlyph];\n                        }\n                    }\n                    return null;\n                }\n            case 6:\n                {\n                    let min = 0;\n                    let max = this.table.binarySearchHeader.nUnits - 1;\n                    while(min <= max){\n                        var mid = min + max >> 1;\n                        var seg = this.table.segments[mid];\n                        // special end of search value\n                        if (seg.glyph === 0xffff) return null;\n                        if (glyph < seg.glyph) max = mid - 1;\n                        else if (glyph > seg.glyph) min = mid + 1;\n                        else return seg.value;\n                    }\n                    return null;\n                }\n            case 8:\n                return this.table.values[glyph - this.table.firstGlyph];\n            default:\n                throw new Error(`Unknown lookup table format: ${this.table.version}`);\n        }\n    }\n    glyphsForValue(classValue) {\n        let res = [];\n        switch(this.table.version){\n            case 2:\n            case 4:\n                for (let segment of this.table.segments)if (this.table.version === 2 && segment.value === classValue) res.push(...(0, $66a5b9fb5318558a$export$d02631cccf789723)(segment.firstGlyph, segment.lastGlyph + 1));\n                else {\n                    for(let index = 0; index < segment.values.length; index++)if (segment.values[index] === classValue) res.push(segment.firstGlyph + index);\n                }\n                break;\n            case 6:\n                for (let segment1 of this.table.segments)if (segment1.value === classValue) res.push(segment1.glyph);\n                break;\n            case 8:\n                for(let i = 0; i < this.table.values.length; i++)if (this.table.values[i] === classValue) res.push(this.table.firstGlyph + i);\n                break;\n            default:\n                throw new Error(`Unknown lookup table format: ${this.table.version}`);\n        }\n        return res;\n    }\n    constructor(table){\n        this.table = table;\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $f3d63ae925545400$export$2e2bcd8739ae039.prototype, \"glyphsForValue\", null);\n\n\nconst $860c6347bb941b91$var$START_OF_TEXT_STATE = 0;\nconst $860c6347bb941b91$var$START_OF_LINE_STATE = 1;\nconst $860c6347bb941b91$var$END_OF_TEXT_CLASS = 0;\nconst $860c6347bb941b91$var$OUT_OF_BOUNDS_CLASS = 1;\nconst $860c6347bb941b91$var$DELETED_GLYPH_CLASS = 2;\nconst $860c6347bb941b91$var$END_OF_LINE_CLASS = 3;\nconst $860c6347bb941b91$var$DONT_ADVANCE = 0x4000;\nclass $860c6347bb941b91$export$2e2bcd8739ae039 {\n    process(glyphs, reverse, processEntry) {\n        let currentState = $860c6347bb941b91$var$START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n        let index = reverse ? glyphs.length - 1 : 0;\n        let dir = reverse ? -1 : 1;\n        while(dir === 1 && index <= glyphs.length || dir === -1 && index >= -1){\n            let glyph = null;\n            let classCode = $860c6347bb941b91$var$OUT_OF_BOUNDS_CLASS;\n            let shouldAdvance = true;\n            if (index === glyphs.length || index === -1) classCode = $860c6347bb941b91$var$END_OF_TEXT_CLASS;\n            else {\n                glyph = glyphs[index];\n                if (glyph.id === 0xffff) classCode = $860c6347bb941b91$var$DELETED_GLYPH_CLASS;\n                else {\n                    classCode = this.lookupTable.lookup(glyph.id);\n                    if (classCode == null) classCode = $860c6347bb941b91$var$OUT_OF_BOUNDS_CLASS;\n                }\n            }\n            let row = this.stateTable.stateArray.getItem(currentState);\n            let entryIndex = row[classCode];\n            let entry = this.stateTable.entryTable.getItem(entryIndex);\n            if (classCode !== $860c6347bb941b91$var$END_OF_TEXT_CLASS && classCode !== $860c6347bb941b91$var$DELETED_GLYPH_CLASS) {\n                processEntry(glyph, entry, index);\n                shouldAdvance = !(entry.flags & $860c6347bb941b91$var$DONT_ADVANCE);\n            }\n            currentState = entry.newState;\n            if (shouldAdvance) index += dir;\n        }\n        return glyphs;\n    }\n    /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */ traverse(opts, state = 0, visited = new Set) {\n        if (visited.has(state)) return;\n        visited.add(state);\n        let { nClasses: nClasses , stateArray: stateArray , entryTable: entryTable  } = this.stateTable;\n        let row = stateArray.getItem(state);\n        // Skip predefined classes\n        for(let classCode = 4; classCode < nClasses; classCode++){\n            let entryIndex = row[classCode];\n            let entry = entryTable.getItem(entryIndex);\n            // Try all glyphs in the class\n            for (let glyph of this.lookupTable.glyphsForValue(classCode)){\n                if (opts.enter) opts.enter(glyph, entry);\n                if (entry.newState !== 0) this.traverse(opts, entry.newState, visited);\n                if (opts.exit) opts.exit(glyph, entry);\n            }\n        }\n    }\n    constructor(stateTable){\n        this.stateTable = stateTable;\n        this.lookupTable = new (0, $f3d63ae925545400$export$2e2bcd8739ae039)(stateTable.classTable);\n    }\n}\n\n\n\n\n// indic replacement flags\nconst $99be642f82069918$var$MARK_FIRST = 0x8000;\nconst $99be642f82069918$var$MARK_LAST = 0x2000;\nconst $99be642f82069918$var$VERB = 0x000F;\n// contextual substitution and glyph insertion flag\nconst $99be642f82069918$var$SET_MARK = 0x8000;\n// ligature entry flags\nconst $99be642f82069918$var$SET_COMPONENT = 0x8000;\nconst $99be642f82069918$var$PERFORM_ACTION = 0x2000;\n// ligature action masks\nconst $99be642f82069918$var$LAST_MASK = 0x80000000;\nconst $99be642f82069918$var$STORE_MASK = 0x40000000;\nconst $99be642f82069918$var$OFFSET_MASK = 0x3FFFFFFF;\nconst $99be642f82069918$var$VERTICAL_ONLY = 0x800000;\nconst $99be642f82069918$var$REVERSE_DIRECTION = 0x400000;\nconst $99be642f82069918$var$HORIZONTAL_AND_VERTICAL = 0x200000;\n// glyph insertion flags\nconst $99be642f82069918$var$CURRENT_IS_KASHIDA_LIKE = 0x2000;\nconst $99be642f82069918$var$MARKED_IS_KASHIDA_LIKE = 0x1000;\nconst $99be642f82069918$var$CURRENT_INSERT_BEFORE = 0x0800;\nconst $99be642f82069918$var$MARKED_INSERT_BEFORE = 0x0400;\nconst $99be642f82069918$var$CURRENT_INSERT_COUNT = 0x03E0;\nconst $99be642f82069918$var$MARKED_INSERT_COUNT = 0x001F;\nclass $99be642f82069918$export$2e2bcd8739ae039 {\n    // Processes an array of glyphs and applies the specified features\n    // Features should be in the form of {featureType:{featureSetting:boolean}}\n    process(glyphs, features = {}) {\n        for (let chain of this.morx.chains){\n            let flags = chain.defaultFlags;\n            // enable/disable the requested features\n            for (let feature of chain.features){\n                let f;\n                if (f = features[feature.featureType]) {\n                    if (f[feature.featureSetting]) {\n                        flags &= feature.disableFlags;\n                        flags |= feature.enableFlags;\n                    } else if (f[feature.featureSetting] === false) {\n                        flags |= ~feature.disableFlags;\n                        flags &= ~feature.enableFlags;\n                    }\n                }\n            }\n            for (let subtable of chain.subtables)if (subtable.subFeatureFlags & flags) this.processSubtable(subtable, glyphs);\n        }\n        // remove deleted glyphs\n        let index = glyphs.length - 1;\n        while(index >= 0){\n            if (glyphs[index].id === 0xffff) glyphs.splice(index, 1);\n            index--;\n        }\n        return glyphs;\n    }\n    processSubtable(subtable, glyphs) {\n        this.subtable = subtable;\n        this.glyphs = glyphs;\n        if (this.subtable.type === 4) {\n            this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n            return;\n        }\n        this.ligatureStack = [];\n        this.markedGlyph = null;\n        this.firstGlyph = null;\n        this.lastGlyph = null;\n        this.markedIndex = null;\n        let stateMachine = this.getStateMachine(subtable);\n        let process = this.getProcessor();\n        let reverse = !!(this.subtable.coverage & $99be642f82069918$var$REVERSE_DIRECTION);\n        return stateMachine.process(this.glyphs, reverse, process);\n    }\n    getStateMachine(subtable) {\n        return new (0, $860c6347bb941b91$export$2e2bcd8739ae039)(subtable.table.stateTable);\n    }\n    getProcessor() {\n        switch(this.subtable.type){\n            case 0:\n                return this.processIndicRearragement;\n            case 1:\n                return this.processContextualSubstitution;\n            case 2:\n                return this.processLigature;\n            case 4:\n                return this.processNoncontextualSubstitutions;\n            case 5:\n                return this.processGlyphInsertion;\n            default:\n                throw new Error(`Invalid morx subtable type: ${this.subtable.type}`);\n        }\n    }\n    processIndicRearragement(glyph, entry, index) {\n        if (entry.flags & $99be642f82069918$var$MARK_FIRST) this.firstGlyph = index;\n        if (entry.flags & $99be642f82069918$var$MARK_LAST) this.lastGlyph = index;\n        $99be642f82069918$var$reorderGlyphs(this.glyphs, entry.flags & $99be642f82069918$var$VERB, this.firstGlyph, this.lastGlyph);\n    }\n    processContextualSubstitution(glyph, entry, index) {\n        let subsitutions = this.subtable.table.substitutionTable.items;\n        if (entry.markIndex !== 0xffff) {\n            let lookup = subsitutions.getItem(entry.markIndex);\n            let lookupTable = new (0, $f3d63ae925545400$export$2e2bcd8739ae039)(lookup);\n            glyph = this.glyphs[this.markedGlyph];\n            var gid = lookupTable.lookup(glyph.id);\n            if (gid) this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n        if (entry.currentIndex !== 0xffff) {\n            let lookup = subsitutions.getItem(entry.currentIndex);\n            let lookupTable = new (0, $f3d63ae925545400$export$2e2bcd8739ae039)(lookup);\n            glyph = this.glyphs[index];\n            var gid = lookupTable.lookup(glyph.id);\n            if (gid) this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n        if (entry.flags & $99be642f82069918$var$SET_MARK) this.markedGlyph = index;\n    }\n    processLigature(glyph, entry, index) {\n        if (entry.flags & $99be642f82069918$var$SET_COMPONENT) this.ligatureStack.push(index);\n        if (entry.flags & $99be642f82069918$var$PERFORM_ACTION) {\n            let actions = this.subtable.table.ligatureActions;\n            let components = this.subtable.table.components;\n            let ligatureList = this.subtable.table.ligatureList;\n            let actionIndex = entry.action;\n            let last = false;\n            let ligatureIndex = 0;\n            let codePoints = [];\n            let ligatureGlyphs = [];\n            while(!last){\n                let componentGlyph = this.ligatureStack.pop();\n                codePoints.unshift(...this.glyphs[componentGlyph].codePoints);\n                let action = actions.getItem(actionIndex++);\n                last = !!(action & $99be642f82069918$var$LAST_MASK);\n                let store = !!(action & $99be642f82069918$var$STORE_MASK);\n                let offset = (action & $99be642f82069918$var$OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n                offset += this.glyphs[componentGlyph].id;\n                let component = components.getItem(offset);\n                ligatureIndex += component;\n                if (last || store) {\n                    let ligatureEntry = ligatureList.getItem(ligatureIndex);\n                    this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n                    ligatureGlyphs.push(componentGlyph);\n                    ligatureIndex = 0;\n                    codePoints = [];\n                } else this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n            }\n            // Put ligature glyph indexes back on the stack\n            this.ligatureStack.push(...ligatureGlyphs);\n        }\n    }\n    processNoncontextualSubstitutions(subtable, glyphs, index) {\n        let lookupTable = new (0, $f3d63ae925545400$export$2e2bcd8739ae039)(subtable.table.lookupTable);\n        for(index = 0; index < glyphs.length; index++){\n            let glyph = glyphs[index];\n            if (glyph.id !== 0xffff) {\n                let gid = lookupTable.lookup(glyph.id);\n                if (gid) glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n            }\n        }\n    }\n    _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n        let insertions = [];\n        while(count--){\n            let gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n            insertions.push(this.font.getGlyph(gid));\n        }\n        if (!isBefore) glyphIndex++;\n        this.glyphs.splice(glyphIndex, 0, ...insertions);\n    }\n    processGlyphInsertion(glyph, entry, index) {\n        if (entry.flags & $99be642f82069918$var$SET_MARK) this.markedIndex = index;\n        if (entry.markedInsertIndex !== 0xffff) {\n            let count = (entry.flags & $99be642f82069918$var$MARKED_INSERT_COUNT) >>> 5;\n            let isBefore = !!(entry.flags & $99be642f82069918$var$MARKED_INSERT_BEFORE);\n            this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n        }\n        if (entry.currentInsertIndex !== 0xffff) {\n            let count = (entry.flags & $99be642f82069918$var$CURRENT_INSERT_COUNT) >>> 5;\n            let isBefore = !!(entry.flags & $99be642f82069918$var$CURRENT_INSERT_BEFORE);\n            this._insertGlyphs(index, entry.currentInsertIndex, count, isBefore);\n        }\n    }\n    getSupportedFeatures() {\n        let features = [];\n        for (let chain of this.morx.chains)for (let feature of chain.features)features.push([\n            feature.featureType,\n            feature.featureSetting\n        ]);\n        return features;\n    }\n    generateInputs(gid) {\n        if (!this.inputCache) this.generateInputCache();\n        return this.inputCache[gid] || [];\n    }\n    generateInputCache() {\n        this.inputCache = {};\n        for (let chain of this.morx.chains){\n            let flags = chain.defaultFlags;\n            for (let subtable of chain.subtables)if (subtable.subFeatureFlags & flags) this.generateInputsForSubtable(subtable);\n        }\n    }\n    generateInputsForSubtable(subtable) {\n        // Currently, only supporting ligature subtables.\n        if (subtable.type !== 2) return;\n        let reverse = !!(subtable.coverage & $99be642f82069918$var$REVERSE_DIRECTION);\n        if (reverse) throw new Error(\"Reverse subtable, not supported.\");\n        this.subtable = subtable;\n        this.ligatureStack = [];\n        let stateMachine = this.getStateMachine(subtable);\n        let process = this.getProcessor();\n        let input = [];\n        let stack = [];\n        this.glyphs = [];\n        stateMachine.traverse({\n            enter: (glyph, entry)=>{\n                let glyphs = this.glyphs;\n                stack.push({\n                    glyphs: glyphs.slice(),\n                    ligatureStack: this.ligatureStack.slice()\n                });\n                // Add glyph to input and glyphs to process.\n                let g1 = this.font.getGlyph(glyph);\n                input.push(g1);\n                glyphs.push(input[input.length - 1]);\n                // Process ligature substitution\n                process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n                // Add input to result if only one matching (non-deleted) glyph remains.\n                let count = 0;\n                let found = 0;\n                for(let i = 0; i < glyphs.length && count <= 1; i++)if (glyphs[i].id !== 0xffff) {\n                    count++;\n                    found = glyphs[i].id;\n                }\n                if (count === 1) {\n                    let result = input.map((g)=>g.id);\n                    let cache1 = this.inputCache[found];\n                    if (cache1) cache1.push(result);\n                    else this.inputCache[found] = [\n                        result\n                    ];\n                }\n            },\n            exit: ()=>{\n                ({ glyphs: this.glyphs , ligatureStack: this.ligatureStack  } = stack.pop());\n                input.pop();\n            }\n        });\n    }\n    constructor(font){\n        this.processIndicRearragement = this.processIndicRearragement.bind(this);\n        this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n        this.processLigature = this.processLigature.bind(this);\n        this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n        this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n        this.font = font;\n        this.morx = font.morx;\n        this.inputCache = null;\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $99be642f82069918$export$2e2bcd8739ae039.prototype, \"getStateMachine\", null);\n// swaps the glyphs in rangeA with those in rangeB\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\nfunction $99be642f82069918$var$swap(glyphs, rangeA, rangeB, reverseA = false, reverseB = false) {\n    let end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n    if (reverseB) end.reverse();\n    let start = glyphs.splice(rangeA[0], rangeA[1], ...end);\n    if (reverseA) start.reverse();\n    glyphs.splice(rangeB[0] - (rangeA[1] - 1), 0, ...start);\n    return glyphs;\n}\nfunction $99be642f82069918$var$reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n    let length = lastGlyph - firstGlyph + 1;\n    switch(verb){\n        case 0:\n            return glyphs;\n        case 1:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                0\n            ]);\n        case 2:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 3:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 4:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                0\n            ]);\n        case 5:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                0\n            ], true, false);\n        case 6:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 7:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 8:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 9:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 10:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 11:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                1\n            ], true, false);\n        case 12:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 13:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], true, false);\n        case 14:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 15:\n            return $99be642f82069918$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], true, true);\n        default:\n            throw new Error(`Unknown verb: ${verb}`);\n    }\n}\n\n\nclass $860fcbd64bc12fbc$export$2e2bcd8739ae039 {\n    substitute(glyphRun) {\n        // AAT expects the glyphs to be in visual order prior to morx processing,\n        // so reverse the glyphs if the script is right-to-left.\n        if (glyphRun.direction === \"rtl\") glyphRun.glyphs.reverse();\n        this.morxProcessor.process(glyphRun.glyphs, $2b7f887ebcb5888a$export$b813f7d2a1677c16(glyphRun.features));\n    }\n    getAvailableFeatures(script, language) {\n        return $2b7f887ebcb5888a$export$bd6df347a4f391c4(this.morxProcessor.getSupportedFeatures());\n    }\n    stringsForGlyph(gid) {\n        let glyphStrings = this.morxProcessor.generateInputs(gid);\n        let result = new Set;\n        for (let glyphs of glyphStrings)this._addStrings(glyphs, 0, result, \"\");\n        return result;\n    }\n    _addStrings(glyphs, index, strings, string) {\n        let codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n        for (let codePoint of codePoints){\n            let s = string + String.fromCodePoint(codePoint);\n            if (index < glyphs.length - 1) this._addStrings(glyphs, index + 1, strings, s);\n            else strings.add(s);\n        }\n    }\n    constructor(font){\n        this.font = font;\n        this.morxProcessor = new (0, $99be642f82069918$export$2e2bcd8739ae039)(font);\n        this.fallbackPosition = false;\n    }\n}\n\n\n\nclass $d7e93cca3cf8ce8a$export$2e2bcd8739ae039 {\n    /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */ _addFeatures(features, global) {\n        let stageIndex = this.stages.length - 1;\n        let stage = this.stages[stageIndex];\n        for (let feature of features)if (this.allFeatures[feature] == null) {\n            stage.push(feature);\n            this.allFeatures[feature] = stageIndex;\n            if (global) this.globalFeatures[feature] = true;\n        }\n    }\n    /**\n   * Add features to the last stage\n   */ add(arg, global = true) {\n        if (this.stages.length === 0) this.stages.push([]);\n        if (typeof arg === \"string\") arg = [\n            arg\n        ];\n        if (Array.isArray(arg)) this._addFeatures(arg, global);\n        else if (typeof arg === \"object\") {\n            this._addFeatures(arg.global || [], true);\n            this._addFeatures(arg.local || [], false);\n        } else throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n    /**\n   * Add a new stage\n   */ addStage(arg, global) {\n        if (typeof arg === \"function\") this.stages.push(arg, []);\n        else {\n            this.stages.push([]);\n            this.add(arg, global);\n        }\n    }\n    setFeatureOverrides(features) {\n        if (Array.isArray(features)) this.add(features);\n        else if (typeof features === \"object\") for(let tag in features){\n            if (features[tag]) this.add(tag);\n            else if (this.allFeatures[tag] != null) {\n                let stage = this.stages[this.allFeatures[tag]];\n                stage.splice(stage.indexOf(tag), 1);\n                delete this.allFeatures[tag];\n                delete this.globalFeatures[tag];\n            }\n        }\n    }\n    /**\n   * Assigns the global features to the given glyphs\n   */ assignGlobalFeatures(glyphs) {\n        for (let glyph of glyphs)for(let feature in this.globalFeatures)glyph.features[feature] = true;\n    }\n    /**\n   * Executes the planned stages using the given OTProcessor\n   */ process(processor, glyphs, positions) {\n        for (let stage of this.stages){\n            if (typeof stage === \"function\") {\n                if (!positions) stage(this.font, glyphs, this);\n            } else if (stage.length > 0) processor.applyFeatures(stage, glyphs, positions);\n        }\n    }\n    constructor(font, script, direction){\n        this.font = font;\n        this.script = script;\n        this.direction = direction;\n        this.stages = [];\n        this.globalFeatures = {};\n        this.allFeatures = {};\n    }\n}\n\n\n\n\nconst $d28fb665ee343afc$var$VARIATION_FEATURES = [\n    \"rvrn\"\n];\nconst $d28fb665ee343afc$var$COMMON_FEATURES = [\n    \"ccmp\",\n    \"locl\",\n    \"rlig\",\n    \"mark\",\n    \"mkmk\"\n];\nconst $d28fb665ee343afc$var$FRACTIONAL_FEATURES = [\n    \"frac\",\n    \"numr\",\n    \"dnom\"\n];\nconst $d28fb665ee343afc$var$HORIZONTAL_FEATURES = [\n    \"calt\",\n    \"clig\",\n    \"liga\",\n    \"rclt\",\n    \"curs\",\n    \"kern\"\n];\nconst $d28fb665ee343afc$var$VERTICAL_FEATURES = [\n    \"vert\"\n];\nconst $d28fb665ee343afc$var$DIRECTIONAL_FEATURES = {\n    ltr: [\n        \"ltra\",\n        \"ltrm\"\n    ],\n    rtl: [\n        \"rtla\",\n        \"rtlm\"\n    ]\n};\nclass $d28fb665ee343afc$export$2e2bcd8739ae039 {\n    static plan(plan, glyphs, features) {\n        // Plan the features we want to apply\n        this.planPreprocessing(plan);\n        this.planFeatures(plan);\n        this.planPostprocessing(plan, features);\n        // Assign the global features to all the glyphs\n        plan.assignGlobalFeatures(glyphs);\n        // Assign local features to glyphs\n        this.assignFeatures(plan, glyphs);\n    }\n    static planPreprocessing(plan) {\n        plan.add({\n            global: [\n                ...$d28fb665ee343afc$var$VARIATION_FEATURES,\n                ...$d28fb665ee343afc$var$DIRECTIONAL_FEATURES[plan.direction]\n            ],\n            local: $d28fb665ee343afc$var$FRACTIONAL_FEATURES\n        });\n    }\n    static planFeatures(plan) {\n    // Do nothing by default. Let subclasses override this.\n    }\n    static planPostprocessing(plan, userFeatures) {\n        plan.add([\n            ...$d28fb665ee343afc$var$COMMON_FEATURES,\n            ...$d28fb665ee343afc$var$HORIZONTAL_FEATURES\n        ]);\n        plan.setFeatureOverrides(userFeatures);\n    }\n    static assignFeatures(plan, glyphs) {\n        // Enable contextual fractions\n        for(let i = 0; i < glyphs.length; i++){\n            let glyph = glyphs[i];\n            if (glyph.codePoints[0] === 0x2044) {\n                let start = i;\n                let end = i + 1;\n                // Apply numerator\n                while(start > 0 && (0, $gfJaN$unicodeproperties.isDigit)(glyphs[start - 1].codePoints[0])){\n                    glyphs[start - 1].features.numr = true;\n                    glyphs[start - 1].features.frac = true;\n                    start--;\n                }\n                // Apply denominator\n                while(end < glyphs.length && (0, $gfJaN$unicodeproperties.isDigit)(glyphs[end].codePoints[0])){\n                    glyphs[end].features.dnom = true;\n                    glyphs[end].features.frac = true;\n                    end++;\n                }\n                // Apply fraction slash\n                glyph.features.frac = true;\n                i = end - 1;\n            }\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))($d28fb665ee343afc$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"AFTER_GPOS\");\n\n\n\n\n\n\nconst $17ba6019f27bfcf9$var$trie = new (0, ($parcel$interopDefault($gfJaN$unicodetrie)))((0, $66a5b9fb5318558a$export$94fdf11bafc8de6b)(\"ABABAAAAAACgMQAAAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=\"));\nconst $17ba6019f27bfcf9$var$FEATURES = [\n    \"isol\",\n    \"fina\",\n    \"fin2\",\n    \"fin3\",\n    \"medi\",\n    \"med2\",\n    \"init\"\n];\nconst $17ba6019f27bfcf9$var$ShapingClasses = {\n    Non_Joining: 0,\n    Left_Joining: 1,\n    Right_Joining: 2,\n    Dual_Joining: 3,\n    Join_Causing: 3,\n    ALAPH: 4,\n    \"DALATH RISH\": 5,\n    Transparent: 6\n};\nconst $17ba6019f27bfcf9$var$ISOL = \"isol\";\nconst $17ba6019f27bfcf9$var$FINA = \"fina\";\nconst $17ba6019f27bfcf9$var$FIN2 = \"fin2\";\nconst $17ba6019f27bfcf9$var$FIN3 = \"fin3\";\nconst $17ba6019f27bfcf9$var$MEDI = \"medi\";\nconst $17ba6019f27bfcf9$var$MED2 = \"med2\";\nconst $17ba6019f27bfcf9$var$INIT = \"init\";\nconst $17ba6019f27bfcf9$var$NONE = null;\n// Each entry is [prevAction, curAction, nextState]\nconst $17ba6019f27bfcf9$var$STATE_TABLE = [\n    //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n    // State 0: prev was U,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$FIN2,\n            5\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 2: prev was D/L in ISOL form,  willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$INIT,\n            $17ba6019f27bfcf9$var$FINA,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$INIT,\n            $17ba6019f27bfcf9$var$FINA,\n            3\n        ],\n        [\n            $17ba6019f27bfcf9$var$INIT,\n            $17ba6019f27bfcf9$var$FINA,\n            4\n        ],\n        [\n            $17ba6019f27bfcf9$var$INIT,\n            $17ba6019f27bfcf9$var$FINA,\n            6\n        ]\n    ],\n    // State 3: prev was D in FINA form,  willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$MEDI,\n            $17ba6019f27bfcf9$var$FINA,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$MEDI,\n            $17ba6019f27bfcf9$var$FINA,\n            3\n        ],\n        [\n            $17ba6019f27bfcf9$var$MEDI,\n            $17ba6019f27bfcf9$var$FINA,\n            4\n        ],\n        [\n            $17ba6019f27bfcf9$var$MEDI,\n            $17ba6019f27bfcf9$var$FINA,\n            6\n        ]\n    ],\n    // State 4: prev was FINA ALAPH,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$MED2,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$MED2,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$MED2,\n            $17ba6019f27bfcf9$var$FIN2,\n            5\n        ],\n        [\n            $17ba6019f27bfcf9$var$MED2,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$ISOL,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$ISOL,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$ISOL,\n            $17ba6019f27bfcf9$var$FIN2,\n            5\n        ],\n        [\n            $17ba6019f27bfcf9$var$ISOL,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ],\n    // State 6: prev was DALATH/RISH,  not willing to join.\n    [\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$NONE,\n            0\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            1\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            2\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$FIN3,\n            5\n        ],\n        [\n            $17ba6019f27bfcf9$var$NONE,\n            $17ba6019f27bfcf9$var$ISOL,\n            6\n        ]\n    ]\n];\nclass $17ba6019f27bfcf9$export$2e2bcd8739ae039 extends (0, $d28fb665ee343afc$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.add([\n            \"ccmp\",\n            \"locl\"\n        ]);\n        for(let i = 0; i < $17ba6019f27bfcf9$var$FEATURES.length; i++){\n            let feature = $17ba6019f27bfcf9$var$FEATURES[i];\n            plan.addStage(feature, false);\n        }\n        plan.addStage(\"mset\");\n    }\n    static assignFeatures(plan, glyphs) {\n        super.assignFeatures(plan, glyphs);\n        let prev = -1;\n        let state = 0;\n        let actions = [];\n        // Apply the state machine to map glyphs to features\n        for(let i = 0; i < glyphs.length; i++){\n            let curAction, prevAction;\n            var glyph = glyphs[i];\n            let type = $17ba6019f27bfcf9$var$getShapingClass(glyph.codePoints[0]);\n            if (type === $17ba6019f27bfcf9$var$ShapingClasses.Transparent) {\n                actions[i] = $17ba6019f27bfcf9$var$NONE;\n                continue;\n            }\n            [prevAction, curAction, state] = $17ba6019f27bfcf9$var$STATE_TABLE[state][type];\n            if (prevAction !== $17ba6019f27bfcf9$var$NONE && prev !== -1) actions[prev] = prevAction;\n            actions[i] = curAction;\n            prev = i;\n        }\n        // Apply the chosen features to their respective glyphs\n        for(let index = 0; index < glyphs.length; index++){\n            let feature;\n            var glyph = glyphs[index];\n            if (feature = actions[index]) glyph.features[feature] = true;\n        }\n    }\n}\nfunction $17ba6019f27bfcf9$var$getShapingClass(codePoint) {\n    let res = $17ba6019f27bfcf9$var$trie.get(codePoint);\n    if (res) return res - 1;\n    let category = (0, $gfJaN$unicodeproperties.getCategory)(codePoint);\n    if (category === \"Mn\" || category === \"Me\" || category === \"Cf\") return $17ba6019f27bfcf9$var$ShapingClasses.Transparent;\n    return $17ba6019f27bfcf9$var$ShapingClasses.Non_Joining;\n}\n\n\n\n\n\nclass $d6368085223f631e$export$2e2bcd8739ae039 {\n    reset(options = {}, index = 0) {\n        this.options = options;\n        this.flags = options.flags || {};\n        this.markAttachmentType = options.markAttachmentType || 0;\n        this.index = index;\n    }\n    get cur() {\n        return this.glyphs[this.index] || null;\n    }\n    shouldIgnore(glyph) {\n        return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n    }\n    move(dir) {\n        this.index += dir;\n        while(0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index]))this.index += dir;\n        if (0 > this.index || this.index >= this.glyphs.length) return null;\n        return this.glyphs[this.index];\n    }\n    next() {\n        return this.move(1);\n    }\n    prev() {\n        return this.move(-1);\n    }\n    peek(count = 1) {\n        let idx = this.index;\n        let res = this.increment(count);\n        this.index = idx;\n        return res;\n    }\n    peekIndex(count = 1) {\n        let idx = this.index;\n        this.increment(count);\n        let res = this.index;\n        this.index = idx;\n        return res;\n    }\n    increment(count = 1) {\n        let dir = count < 0 ? -1 : 1;\n        count = Math.abs(count);\n        while(count--)this.move(dir);\n        return this.glyphs[this.index];\n    }\n    constructor(glyphs, options){\n        this.glyphs = glyphs;\n        this.reset(options);\n    }\n}\n\n\n\nconst $7b226e6bbeadedeb$var$DEFAULT_SCRIPTS = [\n    \"DFLT\",\n    \"dflt\",\n    \"latn\"\n];\nclass $7b226e6bbeadedeb$export$2e2bcd8739ae039 {\n    findScript(script) {\n        if (this.table.scriptList == null) return null;\n        if (!Array.isArray(script)) script = [\n            script\n        ];\n        for (let s of script)for (let entry of this.table.scriptList){\n            if (entry.tag === s) return entry;\n        }\n        return null;\n    }\n    selectScript(script, language, direction) {\n        let changed = false;\n        let entry;\n        if (!this.script || script !== this.scriptTag) {\n            entry = this.findScript(script);\n            if (!entry) entry = this.findScript($7b226e6bbeadedeb$var$DEFAULT_SCRIPTS);\n            if (!entry) return this.scriptTag;\n            this.scriptTag = entry.tag;\n            this.script = entry.script;\n            this.language = null;\n            this.languageTag = null;\n            changed = true;\n        }\n        if (!direction || direction !== this.direction) this.direction = direction || $e38a1a895f6aeb54$export$9fddb9d0dd7d8a54(script);\n        if (language && language.length < 4) language += \" \".repeat(4 - language.length);\n        if (!language || language !== this.languageTag) {\n            this.language = null;\n            for (let lang of this.script.langSysRecords)if (lang.tag === language) {\n                this.language = lang.langSys;\n                this.languageTag = lang.tag;\n                break;\n            }\n            if (!this.language) {\n                this.language = this.script.defaultLangSys;\n                this.languageTag = null;\n            }\n            changed = true;\n        }\n        // Build a feature lookup table\n        if (changed) {\n            this.features = {};\n            if (this.language) for (let featureIndex of this.language.featureIndexes){\n                let record = this.table.featureList[featureIndex];\n                let substituteFeature = this.substituteFeatureForVariations(featureIndex);\n                this.features[record.tag] = substituteFeature || record.feature;\n            }\n        }\n        return this.scriptTag;\n    }\n    lookupsForFeatures(userFeatures = [], exclude) {\n        let lookups = [];\n        for (let tag of userFeatures){\n            let feature = this.features[tag];\n            if (!feature) continue;\n            for (let lookupIndex of feature.lookupListIndexes){\n                if (exclude && exclude.indexOf(lookupIndex) !== -1) continue;\n                lookups.push({\n                    feature: tag,\n                    index: lookupIndex,\n                    lookup: this.table.lookupList.get(lookupIndex)\n                });\n            }\n        }\n        lookups.sort((a, b)=>a.index - b.index);\n        return lookups;\n    }\n    substituteFeatureForVariations(featureIndex) {\n        if (this.variationsIndex === -1) return null;\n        let record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n        let substitutions = record.featureTableSubstitution.substitutions;\n        for (let substitution of substitutions){\n            if (substitution.featureIndex === featureIndex) return substitution.alternateFeatureTable;\n        }\n        return null;\n    }\n    findVariationsIndex(coords) {\n        let variations = this.table.featureVariations;\n        if (!variations) return -1;\n        let records = variations.featureVariationRecords;\n        for(let i = 0; i < records.length; i++){\n            let conditions = records[i].conditionSet.conditionTable;\n            if (this.variationConditionsMatch(conditions, coords)) return i;\n        }\n        return -1;\n    }\n    variationConditionsMatch(conditions, coords) {\n        return conditions.every((condition)=>{\n            let coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n            return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n        });\n    }\n    applyFeatures(userFeatures, glyphs, advances) {\n        let lookups = this.lookupsForFeatures(userFeatures);\n        this.applyLookups(lookups, glyphs, advances);\n    }\n    applyLookups(lookups, glyphs, positions) {\n        this.glyphs = glyphs;\n        this.positions = positions;\n        this.glyphIterator = new (0, $d6368085223f631e$export$2e2bcd8739ae039)(glyphs);\n        for (let { feature: feature , lookup: lookup  } of lookups){\n            this.currentFeature = feature;\n            this.glyphIterator.reset(lookup.flags);\n            while(this.glyphIterator.index < glyphs.length){\n                if (!(feature in this.glyphIterator.cur.features)) {\n                    this.glyphIterator.next();\n                    continue;\n                }\n                for (let table of lookup.subTables){\n                    let res = this.applyLookup(lookup.lookupType, table);\n                    if (res) break;\n                }\n                this.glyphIterator.next();\n            }\n        }\n    }\n    applyLookup(lookup, table) {\n        throw new Error(\"applyLookup must be implemented by subclasses\");\n    }\n    applyLookupList(lookupRecords) {\n        let options = this.glyphIterator.options;\n        let glyphIndex = this.glyphIterator.index;\n        for (let lookupRecord of lookupRecords){\n            // Reset flags and find glyph index for this lookup record\n            this.glyphIterator.reset(options, glyphIndex);\n            this.glyphIterator.increment(lookupRecord.sequenceIndex);\n            // Get the lookup and setup flags for subtables\n            let lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n            this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n            // Apply lookup subtables until one matches\n            for (let table of lookup.subTables){\n                if (this.applyLookup(lookup.lookupType, table)) break;\n            }\n        }\n        this.glyphIterator.reset(options, glyphIndex);\n        return true;\n    }\n    coverageIndex(coverage, glyph) {\n        if (glyph == null) glyph = this.glyphIterator.cur.id;\n        switch(coverage.version){\n            case 1:\n                return coverage.glyphs.indexOf(glyph);\n            case 2:\n                for (let range of coverage.rangeRecords){\n                    if (range.start <= glyph && glyph <= range.end) return range.startCoverageIndex + glyph - range.start;\n                }\n                break;\n        }\n        return -1;\n    }\n    match(sequenceIndex, sequence, fn, matched) {\n        let pos = this.glyphIterator.index;\n        let glyph = this.glyphIterator.increment(sequenceIndex);\n        let idx = 0;\n        while(idx < sequence.length && glyph && fn(sequence[idx], glyph)){\n            if (matched) matched.push(this.glyphIterator.index);\n            idx++;\n            glyph = this.glyphIterator.next();\n        }\n        this.glyphIterator.index = pos;\n        if (idx < sequence.length) return false;\n        return matched || true;\n    }\n    sequenceMatches(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (component, glyph)=>component === glyph.id);\n    }\n    sequenceMatchIndices(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (component, glyph)=>{\n            // If the current feature doesn't apply to this glyph,\n            if (!(this.currentFeature in glyph.features)) return false;\n            return component === glyph.id;\n        }, []);\n    }\n    coverageSequenceMatches(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (coverage, glyph)=>this.coverageIndex(coverage, glyph.id) >= 0);\n    }\n    getClassID(glyph, classDef) {\n        switch(classDef.version){\n            case 1:\n                let i = glyph - classDef.startGlyph;\n                if (i >= 0 && i < classDef.classValueArray.length) return classDef.classValueArray[i];\n                break;\n            case 2:\n                for (let range of classDef.classRangeRecord){\n                    if (range.start <= glyph && glyph <= range.end) return range.class;\n                }\n                break;\n        }\n        return 0;\n    }\n    classSequenceMatches(sequenceIndex, sequence, classDef) {\n        return this.match(sequenceIndex, sequence, (classID, glyph)=>classID === this.getClassID(glyph.id, classDef));\n    }\n    applyContext(table) {\n        let index, set;\n        switch(table.version){\n            case 1:\n                index = this.coverageIndex(table.coverage);\n                if (index === -1) return false;\n                set = table.ruleSets[index];\n                for (let rule of set){\n                    if (this.sequenceMatches(1, rule.input)) return this.applyLookupList(rule.lookupRecords);\n                }\n                break;\n            case 2:\n                if (this.coverageIndex(table.coverage) === -1) return false;\n                index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n                if (index === -1) return false;\n                set = table.classSet[index];\n                for (let rule1 of set){\n                    if (this.classSequenceMatches(1, rule1.classes, table.classDef)) return this.applyLookupList(rule1.lookupRecords);\n                }\n                break;\n            case 3:\n                if (this.coverageSequenceMatches(0, table.coverages)) return this.applyLookupList(table.lookupRecords);\n                break;\n        }\n        return false;\n    }\n    applyChainingContext(table) {\n        let index;\n        switch(table.version){\n            case 1:\n                index = this.coverageIndex(table.coverage);\n                if (index === -1) return false;\n                let set = table.chainRuleSets[index];\n                for (let rule of set){\n                    if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) return this.applyLookupList(rule.lookupRecords);\n                }\n                break;\n            case 2:\n                if (this.coverageIndex(table.coverage) === -1) return false;\n                index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n                let rules = table.chainClassSet[index];\n                if (!rules) return false;\n                for (let rule2 of rules){\n                    if (this.classSequenceMatches(-rule2.backtrack.length, rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + rule2.input.length, rule2.lookahead, table.lookaheadClassDef)) return this.applyLookupList(rule2.lookupRecords);\n                }\n                break;\n            case 3:\n                if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) return this.applyLookupList(table.lookupRecords);\n                break;\n        }\n        return false;\n    }\n    constructor(font, table){\n        this.font = font;\n        this.table = table;\n        this.script = null;\n        this.scriptTag = null;\n        this.language = null;\n        this.languageTag = null;\n        this.features = {};\n        this.lookups = {};\n        // Setup variation substitutions\n        this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1;\n        // initialize to default script + language\n        this.selectScript();\n        // current context (set by applyFeatures)\n        this.glyphs = [];\n        this.positions = []; // only used by GPOS\n        this.ligatureID = 1;\n        this.currentFeature = null;\n    }\n}\n\n\nclass $f22bb23c9fd478d8$export$2e2bcd8739ae039 {\n    get id() {\n        return this._id;\n    }\n    set id(id) {\n        this._id = id;\n        this.substituted = true;\n        let GDEF = this._font.GDEF;\n        if (GDEF && GDEF.glyphClassDef) {\n            // TODO: clean this up\n            let classID = (0, $7b226e6bbeadedeb$export$2e2bcd8739ae039).prototype.getClassID(id, GDEF.glyphClassDef);\n            this.isBase = classID === 1;\n            this.isLigature = classID === 2;\n            this.isMark = classID === 3;\n            this.markAttachmentType = GDEF.markAttachClassDef ? (0, $7b226e6bbeadedeb$export$2e2bcd8739ae039).prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n        } else {\n            this.isMark = this.codePoints.length > 0 && this.codePoints.every((0, $gfJaN$unicodeproperties.isMark));\n            this.isBase = !this.isMark;\n            this.isLigature = this.codePoints.length > 1;\n            this.markAttachmentType = 0;\n        }\n    }\n    copy() {\n        return new $f22bb23c9fd478d8$export$2e2bcd8739ae039(this._font, this.id, this.codePoints, this.features);\n    }\n    constructor(font, id, codePoints = [], features){\n        this._font = font;\n        this.codePoints = codePoints;\n        this.id = id;\n        this.features = {};\n        if (Array.isArray(features)) for(let i = 0; i < features.length; i++){\n            let feature = features[i];\n            this.features[feature] = true;\n        }\n        else if (typeof features === \"object\") Object.assign(this.features, features);\n        this.ligatureID = null;\n        this.ligatureComponent = null;\n        this.isLigated = false;\n        this.cursiveAttachment = null;\n        this.markAttachment = null;\n        this.shaperInfo = null;\n        this.substituted = false;\n        this.isMultiplied = false;\n    }\n}\n\n\nclass $fa1d9fd80dd7279e$export$2e2bcd8739ae039 extends (0, $d28fb665ee343afc$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.add([\n            \"ljmo\",\n            \"vjmo\",\n            \"tjmo\"\n        ], false);\n    }\n    static assignFeatures(plan, glyphs) {\n        let state = 0;\n        let i = 0;\n        while(i < glyphs.length){\n            let action;\n            let glyph = glyphs[i];\n            let code = glyph.codePoints[0];\n            let type = $fa1d9fd80dd7279e$var$getType(code);\n            [action, state] = $fa1d9fd80dd7279e$var$STATE_TABLE[state][type];\n            switch(action){\n                case $fa1d9fd80dd7279e$var$DECOMPOSE:\n                    // Decompose the composed syllable if it is not supported by the font.\n                    if (!plan.font.hasGlyphForCodePoint(code)) i = $fa1d9fd80dd7279e$var$decompose(glyphs, i, plan.font);\n                    break;\n                case $fa1d9fd80dd7279e$var$COMPOSE:\n                    // Found a decomposed syllable. Try to compose if supported by the font.\n                    i = $fa1d9fd80dd7279e$var$compose(glyphs, i, plan.font);\n                    break;\n                case $fa1d9fd80dd7279e$var$TONE_MARK:\n                    // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n                    $fa1d9fd80dd7279e$var$reorderToneMark(glyphs, i, plan.font);\n                    break;\n                case $fa1d9fd80dd7279e$var$INVALID:\n                    // Tone mark has no valid syllable to attach to, so insert a dotted circle\n                    i = $fa1d9fd80dd7279e$var$insertDottedCircle(glyphs, i, plan.font);\n                    break;\n            }\n            i++;\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))($fa1d9fd80dd7279e$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nconst $fa1d9fd80dd7279e$var$HANGUL_BASE = 0xac00;\nconst $fa1d9fd80dd7279e$var$HANGUL_END = 0xd7a4;\nconst $fa1d9fd80dd7279e$var$HANGUL_COUNT = $fa1d9fd80dd7279e$var$HANGUL_END - $fa1d9fd80dd7279e$var$HANGUL_BASE + 1;\nconst $fa1d9fd80dd7279e$var$L_BASE = 0x1100; // lead\nconst $fa1d9fd80dd7279e$var$V_BASE = 0x1161; // vowel\nconst $fa1d9fd80dd7279e$var$T_BASE = 0x11a7; // trail\nconst $fa1d9fd80dd7279e$var$L_COUNT = 19;\nconst $fa1d9fd80dd7279e$var$V_COUNT = 21;\nconst $fa1d9fd80dd7279e$var$T_COUNT = 28;\nconst $fa1d9fd80dd7279e$var$L_END = $fa1d9fd80dd7279e$var$L_BASE + $fa1d9fd80dd7279e$var$L_COUNT - 1;\nconst $fa1d9fd80dd7279e$var$V_END = $fa1d9fd80dd7279e$var$V_BASE + $fa1d9fd80dd7279e$var$V_COUNT - 1;\nconst $fa1d9fd80dd7279e$var$T_END = $fa1d9fd80dd7279e$var$T_BASE + $fa1d9fd80dd7279e$var$T_COUNT - 1;\nconst $fa1d9fd80dd7279e$var$DOTTED_CIRCLE = 0x25cc;\nconst $fa1d9fd80dd7279e$var$isL = (code)=>0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\nconst $fa1d9fd80dd7279e$var$isV = (code)=>0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\nconst $fa1d9fd80dd7279e$var$isT = (code)=>0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\nconst $fa1d9fd80dd7279e$var$isTone = (code)=>0x302e <= code && code <= 0x302f;\nconst $fa1d9fd80dd7279e$var$isLVT = (code)=>$fa1d9fd80dd7279e$var$HANGUL_BASE <= code && code <= $fa1d9fd80dd7279e$var$HANGUL_END;\nconst $fa1d9fd80dd7279e$var$isLV = (code)=>code - $fa1d9fd80dd7279e$var$HANGUL_BASE < $fa1d9fd80dd7279e$var$HANGUL_COUNT && (code - $fa1d9fd80dd7279e$var$HANGUL_BASE) % $fa1d9fd80dd7279e$var$T_COUNT === 0;\nconst $fa1d9fd80dd7279e$var$isCombiningL = (code)=>$fa1d9fd80dd7279e$var$L_BASE <= code && code <= $fa1d9fd80dd7279e$var$L_END;\nconst $fa1d9fd80dd7279e$var$isCombiningV = (code)=>$fa1d9fd80dd7279e$var$V_BASE <= code && code <= $fa1d9fd80dd7279e$var$V_END;\nconst $fa1d9fd80dd7279e$var$isCombiningT = (code)=>$fa1d9fd80dd7279e$var$T_BASE + 1 && 1 <= code && code <= $fa1d9fd80dd7279e$var$T_END;\n// Character categories\nconst $fa1d9fd80dd7279e$var$X = 0; // Other character\nconst $fa1d9fd80dd7279e$var$L = 1; // Leading consonant\nconst $fa1d9fd80dd7279e$var$V = 2; // Medial vowel\nconst $fa1d9fd80dd7279e$var$T = 3; // Trailing consonant\nconst $fa1d9fd80dd7279e$var$LV = 4; // Composed <LV> syllable\nconst $fa1d9fd80dd7279e$var$LVT = 5; // Composed <LVT> syllable\nconst $fa1d9fd80dd7279e$var$M = 6; // Tone mark\n// This function classifies a character using the above categories.\nfunction $fa1d9fd80dd7279e$var$getType(code) {\n    if ($fa1d9fd80dd7279e$var$isL(code)) return $fa1d9fd80dd7279e$var$L;\n    if ($fa1d9fd80dd7279e$var$isV(code)) return $fa1d9fd80dd7279e$var$V;\n    if ($fa1d9fd80dd7279e$var$isT(code)) return $fa1d9fd80dd7279e$var$T;\n    if ($fa1d9fd80dd7279e$var$isLV(code)) return $fa1d9fd80dd7279e$var$LV;\n    if ($fa1d9fd80dd7279e$var$isLVT(code)) return $fa1d9fd80dd7279e$var$LVT;\n    if ($fa1d9fd80dd7279e$var$isTone(code)) return $fa1d9fd80dd7279e$var$M;\n    return $fa1d9fd80dd7279e$var$X;\n}\n// State machine actions\nconst $fa1d9fd80dd7279e$var$NO_ACTION = 0;\nconst $fa1d9fd80dd7279e$var$DECOMPOSE = 1;\nconst $fa1d9fd80dd7279e$var$COMPOSE = 2;\nconst $fa1d9fd80dd7279e$var$TONE_MARK = 4;\nconst $fa1d9fd80dd7279e$var$INVALID = 5;\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nconst $fa1d9fd80dd7279e$var$STATE_TABLE = [\n    //       X                 L                 V                T                  LV                LVT               M\n    // State 0: start state\n    [\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$INVALID,\n            0\n        ]\n    ],\n    // State 1: <L>\n    [\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $fa1d9fd80dd7279e$var$COMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$INVALID,\n            0\n        ]\n    ],\n    // State 2: <L,V> or <LV>\n    [\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$COMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$TONE_MARK,\n            0\n        ]\n    ],\n    // State 3: <L,V,T> or <LVT>\n    [\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            1\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$NO_ACTION,\n            0\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            2\n        ],\n        [\n            $fa1d9fd80dd7279e$var$DECOMPOSE,\n            3\n        ],\n        [\n            $fa1d9fd80dd7279e$var$TONE_MARK,\n            0\n        ]\n    ]\n];\nfunction $fa1d9fd80dd7279e$var$getGlyph(font, code, features) {\n    return new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(font, font.glyphForCodePoint(code).id, [\n        code\n    ], features);\n}\nfunction $fa1d9fd80dd7279e$var$decompose(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyph.codePoints[0];\n    let s = code - $fa1d9fd80dd7279e$var$HANGUL_BASE;\n    let t = $fa1d9fd80dd7279e$var$T_BASE + s % $fa1d9fd80dd7279e$var$T_COUNT;\n    s = s / $fa1d9fd80dd7279e$var$T_COUNT | 0;\n    let l = $fa1d9fd80dd7279e$var$L_BASE + s / $fa1d9fd80dd7279e$var$V_COUNT | 0;\n    let v = $fa1d9fd80dd7279e$var$V_BASE + s % $fa1d9fd80dd7279e$var$V_COUNT;\n    // Don't decompose if all of the components are not available\n    if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== $fa1d9fd80dd7279e$var$T_BASE && !font.hasGlyphForCodePoint(t)) return i;\n    // Replace the current glyph with decomposed L, V, and T glyphs,\n    // and apply the proper OpenType features to each component.\n    let ljmo = $fa1d9fd80dd7279e$var$getGlyph(font, l, glyph.features);\n    ljmo.features.ljmo = true;\n    let vjmo = $fa1d9fd80dd7279e$var$getGlyph(font, v, glyph.features);\n    vjmo.features.vjmo = true;\n    let insert = [\n        ljmo,\n        vjmo\n    ];\n    if (t > $fa1d9fd80dd7279e$var$T_BASE) {\n        let tjmo = $fa1d9fd80dd7279e$var$getGlyph(font, t, glyph.features);\n        tjmo.features.tjmo = true;\n        insert.push(tjmo);\n    }\n    glyphs.splice(i, 1, ...insert);\n    return i + insert.length - 1;\n}\nfunction $fa1d9fd80dd7279e$var$compose(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    let type = $fa1d9fd80dd7279e$var$getType(code);\n    let prev = glyphs[i - 1].codePoints[0];\n    let prevType = $fa1d9fd80dd7279e$var$getType(prev);\n    // Figure out what type of syllable we're dealing with\n    let lv, ljmo, vjmo, tjmo;\n    if (prevType === $fa1d9fd80dd7279e$var$LV && type === $fa1d9fd80dd7279e$var$T) {\n        // <LV,T>\n        lv = prev;\n        tjmo = glyph;\n    } else {\n        if (type === $fa1d9fd80dd7279e$var$V) {\n            // <L,V>\n            ljmo = glyphs[i - 1];\n            vjmo = glyph;\n        } else {\n            // <L,V,T>\n            ljmo = glyphs[i - 2];\n            vjmo = glyphs[i - 1];\n            tjmo = glyph;\n        }\n        let l = ljmo.codePoints[0];\n        let v = vjmo.codePoints[0];\n        // Make sure L and V are combining characters\n        if ($fa1d9fd80dd7279e$var$isCombiningL(l) && $fa1d9fd80dd7279e$var$isCombiningV(v)) lv = $fa1d9fd80dd7279e$var$HANGUL_BASE + ((l - $fa1d9fd80dd7279e$var$L_BASE) * $fa1d9fd80dd7279e$var$V_COUNT + (v - $fa1d9fd80dd7279e$var$V_BASE)) * $fa1d9fd80dd7279e$var$T_COUNT;\n    }\n    let t = tjmo && tjmo.codePoints[0] || $fa1d9fd80dd7279e$var$T_BASE;\n    if (lv != null && (t === $fa1d9fd80dd7279e$var$T_BASE || $fa1d9fd80dd7279e$var$isCombiningT(t))) {\n        let s = lv + (t - $fa1d9fd80dd7279e$var$T_BASE);\n        // Replace with a composed glyph if supported by the font,\n        // otherwise apply the proper OpenType features to each component.\n        if (font.hasGlyphForCodePoint(s)) {\n            let del = prevType === $fa1d9fd80dd7279e$var$V ? 3 : 2;\n            glyphs.splice(i - del + 1, del, $fa1d9fd80dd7279e$var$getGlyph(font, s, glyph.features));\n            return i - del + 1;\n        }\n    }\n    // Didn't compose (either a non-combining component or unsupported by font).\n    if (ljmo) ljmo.features.ljmo = true;\n    if (vjmo) vjmo.features.vjmo = true;\n    if (tjmo) tjmo.features.tjmo = true;\n    if (prevType === $fa1d9fd80dd7279e$var$LV) {\n        // Sequence was originally <L,V>, which got combined earlier.\n        // Either the T was non-combining, or the LVT glyph wasn't supported.\n        // Decompose the glyph again and apply OT features.\n        $fa1d9fd80dd7279e$var$decompose(glyphs, i - 1, font);\n        return i + 1;\n    }\n    return i;\n}\nfunction $fa1d9fd80dd7279e$var$getLength(code) {\n    switch($fa1d9fd80dd7279e$var$getType(code)){\n        case $fa1d9fd80dd7279e$var$LV:\n        case $fa1d9fd80dd7279e$var$LVT:\n            return 1;\n        case $fa1d9fd80dd7279e$var$V:\n            return 2;\n        case $fa1d9fd80dd7279e$var$T:\n            return 3;\n    }\n}\nfunction $fa1d9fd80dd7279e$var$reorderToneMark(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    // Move tone mark to the beginning of the previous syllable, unless it is zero width\n    if (font.glyphForCodePoint(code).advanceWidth === 0) return;\n    let prev = glyphs[i - 1].codePoints[0];\n    let len = $fa1d9fd80dd7279e$var$getLength(prev);\n    glyphs.splice(i, 1);\n    return glyphs.splice(i - len, 0, glyph);\n}\nfunction $fa1d9fd80dd7279e$var$insertDottedCircle(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    if (font.hasGlyphForCodePoint($fa1d9fd80dd7279e$var$DOTTED_CIRCLE)) {\n        let dottedCircle = $fa1d9fd80dd7279e$var$getGlyph(font, $fa1d9fd80dd7279e$var$DOTTED_CIRCLE, glyph.features);\n        // If the tone mark is zero width, insert the dotted circle before, otherwise after\n        let idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n        glyphs.splice(idx, 0, dottedCircle);\n        i++;\n    }\n    return i;\n}\n\n\n\n\n\n\n\n\n\nvar $d22b56f2cf15e5ba$exports = {};\n$d22b56f2cf15e5ba$exports = JSON.parse('{\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],\"accepting\":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"symbol_cluster\"],[],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"standalone_cluster\"]]}');\n\n\nvar $79781f8c452881c2$exports = {};\n$79781f8c452881c2$exports = JSON.parse('{\"categories\":[\"O\",\"IND\",\"S\",\"GB\",\"B\",\"FM\",\"CGJ\",\"VMAbv\",\"VMPst\",\"VAbv\",\"VPst\",\"CMBlw\",\"VPre\",\"VBlw\",\"H\",\"VMBlw\",\"CMAbv\",\"MBlw\",\"CS\",\"R\",\"SUB\",\"MPst\",\"MPre\",\"FAbv\",\"FPst\",\"FBlw\",\"SMAbv\",\"SMBlw\",\"VMPre\",\"ZWNJ\",\"ZWJ\",\"WJ\",\"VS\",\"N\",\"HN\",\"MAbv\"],\"decompositions\":{\"2507\":[2503,2494],\"2508\":[2503,2519],\"2888\":[2887,2902],\"2891\":[2887,2878],\"2892\":[2887,2903],\"3018\":[3014,3006],\"3019\":[3015,3006],\"3020\":[3014,3031],\"3144\":[3142,3158],\"3264\":[3263,3285],\"3271\":[3270,3285],\"3272\":[3270,3286],\"3274\":[3270,3266],\"3275\":[3270,3266,3285],\"3402\":[3398,3390],\"3403\":[3399,3390],\"3404\":[3398,3415],\"3546\":[3545,3530],\"3548\":[3545,3535],\"3549\":[3545,3535,3530],\"3550\":[3545,3551],\"3635\":[3661,3634],\"3763\":[3789,3762],\"3955\":[3953,3954],\"3957\":[3953,3956],\"3958\":[4018,3968],\"3959\":[4018,3953,3968],\"3960\":[4019,3968],\"3961\":[4019,3953,3968],\"3969\":[3953,3968],\"6971\":[6970,6965],\"6973\":[6972,6965],\"6976\":[6974,6965],\"6977\":[6975,6965],\"6979\":[6978,6965],\"69934\":[69937,69927],\"69935\":[69938,69927],\"70475\":[70471,70462],\"70476\":[70471,70487],\"70843\":[70841,70842],\"70844\":[70841,70832],\"70846\":[70841,70845],\"71098\":[71096,71087],\"71099\":[71097,71087]},\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],\"accepting\":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"virama_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"number_joiner_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"numeral_cluster\"]]}');\n\n\nconst $79e3b6f2c331d0bf$export$a513ea61a7bee91c = {\n    X: 1,\n    C: 2,\n    V: 4,\n    N: 8,\n    H: 16,\n    ZWNJ: 32,\n    ZWJ: 64,\n    M: 128,\n    SM: 256,\n    VD: 512,\n    A: 1024,\n    Placeholder: 2048,\n    Dotted_Circle: 4096,\n    RS: 8192,\n    Coeng: 16384,\n    Repha: 32768,\n    Ra: 65536,\n    CM: 131072,\n    Symbol: 262144 // Avagraha, etc that take marks (SM,A,VD).\n};\nconst $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0 = {\n    Start: 1,\n    Ra_To_Become_Reph: 2,\n    Pre_M: 4,\n    Pre_C: 8,\n    Base_C: 16,\n    After_Main: 32,\n    Above_C: 64,\n    Before_Sub: 128,\n    Below_C: 256,\n    After_Sub: 512,\n    Before_Post: 1024,\n    Post_C: 2048,\n    After_Post: 4096,\n    Final_C: 8192,\n    SMVD: 16384,\n    End: 32768\n};\nconst $79e3b6f2c331d0bf$export$8519deaa7de2b07 = $79e3b6f2c331d0bf$export$a513ea61a7bee91c.C | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.Ra | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.CM | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.V | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.Placeholder | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.Dotted_Circle;\nconst $79e3b6f2c331d0bf$export$bbcd928767338e0d = $79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWJ | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.ZWNJ;\nconst $79e3b6f2c331d0bf$export$ca9599b2a300afc = $79e3b6f2c331d0bf$export$a513ea61a7bee91c.H | $79e3b6f2c331d0bf$export$a513ea61a7bee91c.Coeng;\nconst $79e3b6f2c331d0bf$export$e99d119da76a0fc5 = {\n    Default: {\n        hasOldSpec: false,\n        virama: 0,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Devanagari: {\n        hasOldSpec: true,\n        virama: 0x094D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Bengali: {\n        hasOldSpec: true,\n        virama: 0x09CD,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Sub,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Gurmukhi: {\n        hasOldSpec: true,\n        virama: 0x0A4D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Sub,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Gujarati: {\n        hasOldSpec: true,\n        virama: 0x0ACD,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Oriya: {\n        hasOldSpec: true,\n        virama: 0x0B4D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Main,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Tamil: {\n        hasOldSpec: true,\n        virama: 0x0BCD,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Telugu: {\n        hasOldSpec: true,\n        virama: 0x0C4D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Explicit\",\n        blwfMode: \"Post_Only\"\n    },\n    Kannada: {\n        hasOldSpec: true,\n        virama: 0x0CCD,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Post_Only\"\n    },\n    Malayalam: {\n        hasOldSpec: true,\n        virama: 0x0D4D,\n        basePos: \"Last\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.After_Main,\n        rephMode: \"Log_Repha\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    // Handled by UniversalShaper\n    // Sinhala: {\n    //   hasOldSpec: false,\n    //   virama: 0x0DCA,\n    //   basePos: 'Last_Sinhala',\n    //   rephPos: POSITIONS.After_Main,\n    //   rephMode: 'Explicit',\n    //   blwfMode: 'Pre_And_Post'\n    // },\n    Khmer: {\n        hasOldSpec: false,\n        virama: 0x17D2,\n        basePos: \"First\",\n        rephPos: $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph,\n        rephMode: \"Vis_Repha\",\n        blwfMode: \"Pre_And_Post\"\n    }\n};\nconst $79e3b6f2c331d0bf$export$f647c9cfdd77d95a = {\n    // Khmer\n    0x17BE: [\n        0x17C1,\n        0x17BE\n    ],\n    0x17BF: [\n        0x17C1,\n        0x17BF\n    ],\n    0x17C0: [\n        0x17C1,\n        0x17C0\n    ],\n    0x17C4: [\n        0x17C1,\n        0x17C4\n    ],\n    0x17C5: [\n        0x17C1,\n        0x17C5\n    ]\n};\n\n\n\nconst { decompositions: $d203e6b9523d0071$var$decompositions  } = (0, (/*@__PURE__*/$parcel$interopDefault($79781f8c452881c2$exports)));\nconst $d203e6b9523d0071$var$trie = new (0, ($parcel$interopDefault($gfJaN$unicodetrie)))((0, $66a5b9fb5318558a$export$94fdf11bafc8de6b)(\"AAARAAAAAACgwgAAAbENTvLtnX+sHUUVx/f13nd/vHf7bl+FRGL7R0OJMcWYphBrimkVCSJR2xiEaLEGQ7AkBGowbYRSgj8K2B/GkpRYE6wlQSyJKCagrSlGkmqsqUZMY7S2CWkgqQViQSkt4Hfuzrx77tyZ2fm1u+/RPcknuzs7O3PmnDOzs7N73zteS5KXwKvgDTCnniTvBfPBJeAVpP2vFr69GGUtAkvAModyr0DeT4BrwCpwPVgDbga3ga+DjYbyluLcCvBN8F2wGWwHO8Ej4DjyPIbtz0DCeZpvD4CD4E/gb+AoOAFOgtPgLKiNJkkbTIKLwALwfvAh8GGwHFwFPg2uAzeCm8Ft4E5wN7gPPAi+D34AfgR+Ap7kx8+AZ8HvwZ/BEXAMvAheAa+Bc6OpzvVGknTABY30eB62C8GlYDFYCpaDq/n5z2J7PVgDbgG3N1KbrOdbWzby/N/G9i6wlR8/wLebUNcOll7vX7PLsQ4bdpAy92B/L3gK7AO/A38EfwX/AC+AkyT/m3x7mqdtYz7Gfq2ZJOPgPc3UXu/D9uJmmmcRT1uC7TJwZTONJxFL1+J4JbgBrAG3gNv5Nev5dhO2m3l54rqtON7RNLd1V8Z5auMfI+8Wbvv12P4Ux78AvyZl/Bb7fwD34HwH/EVR/t8t6rRlrYgFlHnMsdyXIupRFP+Gzv8Bb4CklSSjrTR9bz21uZx/Nj8v+uIFOJ4HFnJo3kWtNG6WkPSzBl1YbC8jeVfx+q+R9Pg48lxN8jFdhd8+01LrLTCdq6io8GNb1a8qKioqKioqKioc2cbXGcrWQ2Ynf9a9rmV/zVua9Dc16V/gz8pfxvar4A6wAdwL7gdbwUPgh+BR8AR4qpWuLe3D9gA4CA6DI+AoOAFOtdL1nNexfYs937fxDA8ubKf1zmv3dViI/Uvb9m2sqKioqAiHrVtehrH3TK2/3l4WZduioqIiDq+Rd1Jbef9ehnHmSnCtNNf7nOPcr8PHilO8jrfBF9v996lfwf6tUpl3tPvvdSjsvcwGnLt3Gsw/kzkpK8CdYH83my3Id0iT91WkL5xMktXgIfD85OD54zjfmYu5OFgN7h1LkmdBMg5fgbvAChzv49ujfEuZ3xlOk7kReTaSfL/B/jl+fMXsJLkb7AcPj8TlHC/zsgnYcyLd3zSh1vGAJr2ioqKiIn/eKXkMjn3/cWF5t/z6y37+K5urwP2YB36vPfw8yr7zeRjpu8g8cTf2H2+n89EtivLE93fs27Ez/Br2vM2+qWPl/ZyX9StFfQxW5v724PPxzXz7XHu4Pps5Jvtmiq13szmzfP0hlHkYHGn358bHeD0vYvsy+K+kz9vt/jy8gT40G1w4Rua0PN98nnaGf/e1G+mXIO2DY8P6Xz7WPz7Ky/7omJ0PBff4+B91fAqsAp8HXwI3gR04txbbdWDDWDpP/g7Yxs6BXWAP2AueJHo+M5bOpw+Cw+AIOApOgFMW7Xkdec6AkXH1+QfgyzbOTY73jy/C/gJ+/CCOP4D9xfz4I9h+TFMWtf9SRWzZwq7f0yi/L9voWSRbDfV/clx/3TuKfjoT26/iX813URx4tiVG3ay/sfFuJenb7J50A4mr1di/CZzLKZ6y2reunup4qzT+fM0wHp0PUD9+A7bYNJ5fn3eNP/Ft5bc0+S4n9/l1Gj+K82zesd1wfj3fZ79h2YyyVvLj7djfCR4xjJEyuy1+S/FyDt/MPwodn5hB8axrxy9nSBtYjOyHrs+BQ+B58E+u+wsWbWBtpb/hYL8RuA/pJ8fT2GffX+wl+daSa08jz9nxNG2k4963XBG/ZVhpUS573mh3BtPo7x/Eb7pE2yd5XvZssY/M/RZLc9SLeDsfD5gfTidi9//pwrzWu7t9lKcN7dxynthAh8vcKrQu1frHTGKBNF662KfoOXU1FsaFxe6x2kjClkBnGvXxwX0bytZ5unK+S9n2jxabTc5M0HUaIyTrfFa+Ljmflc9Xz7JtNdPa4eKz6WAPlb5l6xfLBzopWxcfncvSf7rHRJk2KSN2bKRsvcu2UZmxVIb9qd551e8rZcTERGuQ+qwIjERkjl2+djOlhWfpibnp/qxmP92FVr1/bc9GYxxuI5o3UzdukzYpj+H6nOxra9nHiaksjhDdsasPe9ca/CvOU1GVwUT4t8P921H4T8gsnkdIh+dn/pXrU0mnOZw21CbJv1P5LP0r4jtkbLH171BbCvavnFfeZ8L8K2wv/CuQRU6n/qWSNSbr2mO8xtK/U+Mq6Y/1yQyFJHHtv8Kn2uOC/Gvbf2VEPxJ9SvhY5d+Q+y21iRxLruOzsY6MWGrOkPHZ1b+jFuPzqEX/VcmoZkyIPT53k36/DZnrMd+K/Dbjs6kv6+6VYl9OU+WT07TplvMvWWhfVo3f4t48S+rbjIZl/1b5Xyd5vJdQiTyf7tUdMlbn0J9d/cn6c7M5DO1TNF0+bmT0Z3qdKaaoXeg1Lv7NEhufzyT/6vIKEeO1jX/psdi38a889qpkStcI/u12U3zE1Re+/Yv6QNwvdTDJGi9t2ps1XtKYDJ0PmcZKcU812sRxvms7J47mZ5c+SWJD5LPRg4qqj+nWL8Q5sRVrGar1EG0sOI6ndH3DVWL7wpeuwaY6O1Nh19N+Oqs5uI7Eto3aICxNrCn5rAuZ7Cn2bdJtfZPlL/k8Ld+ki6v9E56XPUvT52mV/YVvmMj2Zz8TEuNMTxfHuFfFUJ60OLrz1utODnFG47fLbSjXy0xSy4gN63EywlhMxWcNmK71svszi5OGTvdJe3rtd8ifB6I/mKBr1ap7uU/sqqTsMb+H5fxBFyuq+yqLnd7cmj33TwyOVVOwuj3nVXRtQtUGWR9jzI6kecZrKSKPuFakU2hZmXXZMDlsS1W9jBavv6eHpf3EtfJ7mKwYV0lX2g9FVY5N+Ung9aH1590+n3KLgEredfiez6u9svisY/Suk9Jsnkli1a+C1m/T7rzqd5UY9mfiXX9R92ibdZUIawTC96b1GBn6rDG1JsPv/b392SkiXVUGmyN0LO5LYi46Zf/Adc/QMaCo8TtG/bH1Z/TsW1QfUPRjm2cZee5PRaT33lEbnhlMax4qe1o/Y8a0icdaoOv9bsh+Hj6jonueoGtHumcMlX9lxLxXq7/D84fSzznGt6rtUerXxYU47/IcPeG3vqBbJ1StETZqg9fS2Akd/0Ovp+/CxD3P+/6bQwzJtsvyh5w+XjeXH9KfXGH3/VbSX4tS4XoftPZbnvcyxX1G5QvW1wbWTkbs7c3mTco6NWODbdxk3R9lGZo/aGxhiknTmETXLVs1c90u9+mBGCf6hs6fsmTq29sxPv8d82CuhCpNjGNjg31blGHrz1i41hd6nuYzbU3XhLQzj7Jt67Otw0uXUdDoH8e4F/joMdVui2dMJc3E+Tetvr6jEtPnPhJaVwz9Y7TDVlx1qnfitlEbtzlTVD0qX/pcm1esxI65PO3mU4eNrr5SZMz46FDE+aIlb5tntb1o/WOUETsW847pvNpaZH225eUpNnrS9yDy9wTysyr9XVOe63+qd3M6e4X6Ptd1Dpc1SdV53ZqFag1hpP+bE5f4ivY74BzXilzWWW1+S0TjJng91Gd9wmbNgpMVz6W8d7GJZwWtWp8p++c8fpjW0Vzff3dJfzGuoersEtnmpjVLupY48H6o7n8/C+kvJn+Lcd6q3QHx3usvZax3W8apvP6rev+UJSHfiCYe/h2aTwTaRi5DO28ZSd9zNhTfJ8b2je7drOo9HtNNbPMW03zOpq2qNqnKFN+0huhlMye2Pe9TdzfCedfxMlRfG7xjncaJ7fiXMYZk3X+ZvuKbXCGh8y8XH8TybajPTfq4tjG2/qb0RJO3SB19ba2SMuoNbW8R/g653qa9sdsRYsssu+ZxPss+tnayFd94yjofEi+hZdvo73q9jd3yisUYbfEpQ9XmMqUIm2fFZh4xkZeE1BNDL5v+ZcqXh/90bSwjflz8U0QcFWHzPOpy0amM+stqf1ad7LltVPqWmG3p3+GiIvLJf8duYA3NcBwbWRpkDXmo7RP+z5E6+8Xswz512dbrW2aMNrpKaBt9y45VR2j9efhAQL/PF38Xadq907NYC5dpZLy3kMX6PUHgeGGS3nfoPn9rObJ9s/4uMntnSt/J5TX+2ZRhtFcB8ZgVmyZbit8GCd/7/C7EOcYK7LdyjNhIlL81nqN/Xf9mOHt/anovP4X0tyem/OUZF9TmscY2nzEulq96ZeVwv2Bxxnwk3s9njT8m/YWOKl199fe53tTXyu5DLojfKWXej6R3RAPtDf1ex/PvtdJ8Q7aP7Ht6XpdXSJf8/wMdQuS/j0/HtKny9KbT+oT2K2ETuW7Tt09Uss5nCdWhjPuMTXzrztO4FHMy+V6TJaH9I6+2C5HPq9oc8xlKRva5rF8M/7tC26/6BsNFivQ//e1pVsyP19VrNrH1D5Wi7oUDdVp8Q5HVr1ztlzXPtH2Gc30+lMX3edH3ecm3fp0+Ps/IPvWH6OpiV7meEMlbzyIkpi1jtDU0Pmm6nMd0jU8bXK7N0jWkb/joHyNebfWgtrJpc0h7QiQP24aKqcwYPnTRIUmG63fRQ5VXLsekgy5NtVXVadLfpjzV9S6xYnuNri159ZmsmLCpJ8/6XSRGOaH659H+GLYtwhd51xvq31B9Qm0UavM84qhoKaNOnfwf\"));\nconst $d203e6b9523d0071$var$stateMachine = new (0, ($parcel$interopDefault($gfJaN$dfa)))((0, (/*@__PURE__*/$parcel$interopDefault($d22b56f2cf15e5ba$exports))));\nclass $d203e6b9523d0071$export$2e2bcd8739ae039 extends (0, $d28fb665ee343afc$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.addStage($d203e6b9523d0071$var$setupSyllables);\n        plan.addStage([\n            \"locl\",\n            \"ccmp\"\n        ]);\n        plan.addStage($d203e6b9523d0071$var$initialReordering);\n        plan.addStage(\"nukt\");\n        plan.addStage(\"akhn\");\n        plan.addStage(\"rphf\", false);\n        plan.addStage(\"rkrf\");\n        plan.addStage(\"pref\", false);\n        plan.addStage(\"blwf\", false);\n        plan.addStage(\"abvf\", false);\n        plan.addStage(\"half\", false);\n        plan.addStage(\"pstf\", false);\n        plan.addStage(\"vatu\");\n        plan.addStage(\"cjct\");\n        plan.addStage(\"cfar\", false);\n        plan.addStage($d203e6b9523d0071$var$finalReordering);\n        plan.addStage({\n            local: [\n                \"init\"\n            ],\n            global: [\n                \"pres\",\n                \"abvs\",\n                \"blws\",\n                \"psts\",\n                \"haln\",\n                \"dist\",\n                \"abvm\",\n                \"blwm\",\n                \"calt\",\n                \"clig\"\n            ]\n        });\n        // Setup the indic config for the selected script\n        plan.unicodeScript = $e38a1a895f6aeb54$export$ce50e82f12a827a4(plan.script);\n        plan.indicConfig = (0, $79e3b6f2c331d0bf$export$e99d119da76a0fc5)[plan.unicodeScript] || (0, $79e3b6f2c331d0bf$export$e99d119da76a0fc5).Default;\n        plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== \"2\";\n    // TODO: turn off kern (Khmer) and liga features.\n    }\n    static assignFeatures(plan, glyphs) {\n        // Decompose split matras\n        // TODO: do this in a more general unicode normalizer\n        for(let i = glyphs.length - 1; i >= 0; i--){\n            let codepoint = glyphs[i].codePoints[0];\n            let d = (0, $79e3b6f2c331d0bf$export$f647c9cfdd77d95a)[codepoint] || $d203e6b9523d0071$var$decompositions[codepoint];\n            if (d) {\n                let decomposed = d.map((c)=>{\n                    let g = plan.font.glyphForCodePoint(c);\n                    return new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(plan.font, g.id, [\n                        c\n                    ], glyphs[i].features);\n                });\n                glyphs.splice(i, 1, ...decomposed);\n            }\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))($d203e6b9523d0071$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nfunction $d203e6b9523d0071$var$indicCategory(glyph) {\n    return $d203e6b9523d0071$var$trie.get(glyph.codePoints[0]) >> 8;\n}\nfunction $d203e6b9523d0071$var$indicPosition(glyph) {\n    return 1 << ($d203e6b9523d0071$var$trie.get(glyph.codePoints[0]) & 0xff);\n}\nclass $d203e6b9523d0071$var$IndicInfo {\n    constructor(category, position, syllableType, syllable){\n        this.category = category;\n        this.position = position;\n        this.syllableType = syllableType;\n        this.syllable = syllable;\n    }\n}\nfunction $d203e6b9523d0071$var$setupSyllables(font, glyphs) {\n    let syllable = 0;\n    let last = 0;\n    for (let [start, end, tags] of $d203e6b9523d0071$var$stateMachine.match(glyphs.map($d203e6b9523d0071$var$indicCategory))){\n        if (start > last) {\n            ++syllable;\n            for(let i = last; i < start; i++)glyphs[i].shaperInfo = new $d203e6b9523d0071$var$IndicInfo((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).X, (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).End, \"non_indic_cluster\", syllable);\n        }\n        ++syllable;\n        // Create shaper info\n        for(let i = start; i <= end; i++)glyphs[i].shaperInfo = new $d203e6b9523d0071$var$IndicInfo(1 << $d203e6b9523d0071$var$indicCategory(glyphs[i]), $d203e6b9523d0071$var$indicPosition(glyphs[i]), tags[0], syllable);\n        last = end + 1;\n    }\n    if (last < glyphs.length) {\n        ++syllable;\n        for(let i = last; i < glyphs.length; i++)glyphs[i].shaperInfo = new $d203e6b9523d0071$var$IndicInfo((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).X, (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).End, \"non_indic_cluster\", syllable);\n    }\n}\nfunction $d203e6b9523d0071$var$isConsonant(glyph) {\n    return glyph.shaperInfo.category & (0, $79e3b6f2c331d0bf$export$8519deaa7de2b07);\n}\nfunction $d203e6b9523d0071$var$isJoiner(glyph) {\n    return glyph.shaperInfo.category & (0, $79e3b6f2c331d0bf$export$bbcd928767338e0d);\n}\nfunction $d203e6b9523d0071$var$isHalantOrCoeng(glyph) {\n    return glyph.shaperInfo.category & (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc);\n}\nfunction $d203e6b9523d0071$var$wouldSubstitute(glyphs, feature) {\n    for (let glyph of glyphs)glyph.features = {\n        [feature]: true\n    };\n    let GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n    GSUB.applyFeatures([\n        feature\n    ], glyphs);\n    return glyphs.length === 1;\n}\nfunction $d203e6b9523d0071$var$consonantPosition(font, consonant, virama) {\n    let glyphs = [\n        virama,\n        consonant,\n        virama\n    ];\n    if ($d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(0, 2), \"blwf\") || $d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(1, 3), \"blwf\")) return (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C;\n    else if ($d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(0, 2), \"pstf\") || $d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(1, 3), \"pstf\")) return (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Post_C;\n    else if ($d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(0, 2), \"pref\") || $d203e6b9523d0071$var$wouldSubstitute(glyphs.slice(1, 3), \"pref\")) return (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Post_C;\n    return (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C;\n}\nfunction $d203e6b9523d0071$var$initialReordering(font, glyphs, plan) {\n    let indicConfig = plan.indicConfig;\n    let features = font._layoutEngine.engine.GSUBProcessor.features;\n    let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n    let virama = font.glyphForCodePoint(indicConfig.virama).id;\n    if (virama) {\n        let info = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(font, virama, [\n            indicConfig.virama\n        ]);\n        for(let i = 0; i < glyphs.length; i++)if (glyphs[i].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C) glyphs[i].shaperInfo.position = $d203e6b9523d0071$var$consonantPosition(font, glyphs[i].copy(), info);\n    }\n    for(let start = 0, end = $d203e6b9523d0071$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $d203e6b9523d0071$var$nextSyllable(glyphs, start)){\n        let { category: category , syllableType: syllableType  } = glyphs[start].shaperInfo;\n        if (syllableType === \"symbol_cluster\" || syllableType === \"non_indic_cluster\") continue;\n        if (syllableType === \"broken_cluster\" && dottedCircle) {\n            let g = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(font, dottedCircle, [\n                0x25cc\n            ]);\n            g.shaperInfo = new $d203e6b9523d0071$var$IndicInfo(1 << $d203e6b9523d0071$var$indicCategory(g), $d203e6b9523d0071$var$indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable);\n            // Insert after possible Repha.\n            let i = start;\n            while(i < end && glyphs[i].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).Repha)i++;\n            glyphs.splice(i++, 0, g);\n            end++;\n        }\n        // 1. Find base consonant:\n        //\n        // The shaping engine finds the base consonant of the syllable, using the\n        // following algorithm: starting from the end of the syllable, move backwards\n        // until a consonant is found that does not have a below-base or post-base\n        // form (post-base forms have to follow below-base forms), or that is not a\n        // pre-base reordering Ra, or arrive at the first consonant. The consonant\n        // stopped at will be the base.\n        let base = end;\n        let limit = start;\n        let hasReph = false;\n        // If the syllable starts with Ra + Halant (in a script that has Reph)\n        // and has more than one consonant, Ra is excluded from candidates for\n        // base consonants.\n        if (indicConfig.rephPos !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === \"Implicit\" && !$d203e6b9523d0071$var$isJoiner(glyphs[start + 2]) || indicConfig.rephMode === \"Explicit\" && glyphs[start + 2].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWJ)) {\n            // See if it matches the 'rphf' feature.\n            let g = [\n                glyphs[start].copy(),\n                glyphs[start + 1].copy(),\n                glyphs[start + 2].copy()\n            ];\n            if ($d203e6b9523d0071$var$wouldSubstitute(g.slice(0, 2), \"rphf\") || indicConfig.rephMode === \"Explicit\" && $d203e6b9523d0071$var$wouldSubstitute(g, \"rphf\")) {\n                limit += 2;\n                while(limit < end && $d203e6b9523d0071$var$isJoiner(glyphs[limit]))limit++;\n                base = start;\n                hasReph = true;\n            }\n        } else if (indicConfig.rephMode === \"Log_Repha\" && glyphs[start].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).Repha) {\n            limit++;\n            while(limit < end && $d203e6b9523d0071$var$isJoiner(glyphs[limit]))limit++;\n            base = start;\n            hasReph = true;\n        }\n        switch(indicConfig.basePos){\n            case \"Last\":\n                {\n                    // starting from the end of the syllable, move backwards\n                    let i = end;\n                    let seenBelow = false;\n                    do {\n                        let info = glyphs[--i].shaperInfo;\n                        // until a consonant is found\n                        if ($d203e6b9523d0071$var$isConsonant(glyphs[i])) {\n                            // that does not have a below-base or post-base form\n                            // (post-base forms have to follow below-base forms),\n                            if (info.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C && (info.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Post_C || seenBelow)) {\n                                base = i;\n                                break;\n                            }\n                            // or that is not a pre-base reordering Ra,\n                            //\n                            // IMPLEMENTATION NOTES:\n                            //\n                            // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n                            // by the logic above already.\n                            //\n                            // or arrive at the first consonant. The consonant stopped at will\n                            // be the base.\n                            if (info.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C) seenBelow = true;\n                            base = i;\n                        } else if (start < i && info.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWJ && glyphs[i - 1].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H) break;\n                    }while (i > limit);\n                    break;\n                }\n            case \"First\":\n                // The first consonant is always the base.\n                base = start;\n                // Mark all subsequent consonants as below.\n                for(let i = base + 1; i < end; i++)if ($d203e6b9523d0071$var$isConsonant(glyphs[i])) glyphs[i].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C;\n        }\n        // If the syllable starts with Ra + Halant (in a script that has Reph)\n        // and has more than one consonant, Ra is excluded from candidates for\n        // base consonants.\n        //\n        //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n        if (hasReph && base === start && limit - base <= 2) hasReph = false;\n        // 2. Decompose and reorder Matras:\n        //\n        // Each matra and any syllable modifier sign in the cluster are moved to the\n        // appropriate position relative to the consonant(s) in the cluster. The\n        // shaping engine decomposes two- or three-part matras into their constituent\n        // parts before any repositioning. Matra characters are classified by which\n        // consonant in a conjunct they have affinity for and are reordered to the\n        // following positions:\n        //\n        //   o Before first half form in the syllable\n        //   o After subjoined consonants\n        //   o After post-form consonant\n        //   o After main consonant (for above marks)\n        //\n        // IMPLEMENTATION NOTES:\n        //\n        // The normalize() routine has already decomposed matras for us, so we don't\n        // need to worry about that.\n        // 3.  Reorder marks to canonical order:\n        //\n        // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n        // if necessary, so that the nukta is first.\n        //\n        // IMPLEMENTATION NOTES:\n        //\n        // We don't need to do this: the normalize() routine already did this for us.\n        // Reorder characters\n        for(let i1 = start; i1 < base; i1++){\n            let info = glyphs[i1].shaperInfo;\n            info.position = Math.min((0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_C, info.position);\n        }\n        if (base < end) glyphs[base].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C;\n        // Mark final consonants.  A final consonant is one appearing after a matra,\n        // like in Khmer.\n        for(let i2 = base + 1; i2 < end; i2++)if (glyphs[i2].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) {\n            for(let j = i2 + 1; j < end; j++)if ($d203e6b9523d0071$var$isConsonant(glyphs[j])) {\n                glyphs[j].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Final_C;\n                break;\n            }\n            break;\n        }\n        // Handle beginning Ra\n        if (hasReph) glyphs[start].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph;\n        // For old-style Indic script tags, move the first post-base Halant after\n        // last consonant.\n        //\n        // Reports suggest that in some scripts Uniscribe does this only if there\n        // is *not* a Halant after last consonant already (eg. Kannada), while it\n        // does it unconditionally in other scripts (eg. Malayalam).  We don't\n        // currently know about other scripts, so we single out Malayalam for now.\n        //\n        // Kannada test case:\n        // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n        // With some versions of Lohit Kannada.\n        // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n        //\n        // Malayalam test case:\n        // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n        // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n        if (plan.isOldSpec) {\n            let disallowDoubleHalants = plan.unicodeScript !== \"Malayalam\";\n            for(let i = base + 1; i < end; i++)if (glyphs[i].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H) {\n                let j;\n                for(j = end - 1; j > i; j--){\n                    if ($d203e6b9523d0071$var$isConsonant(glyphs[j]) || disallowDoubleHalants && glyphs[j].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H) break;\n                }\n                if (glyphs[j].shaperInfo.category !== (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H && j > i) {\n                    // Move Halant to after last consonant.\n                    let t = glyphs[i];\n                    glyphs.splice(i, 0, ...glyphs.splice(i + 1, j - i));\n                    glyphs[j] = t;\n                }\n                break;\n            }\n        }\n        // Attach misc marks to previous char to move with them.\n        let lastPos = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Start;\n        for(let i3 = start; i3 < end; i3++){\n            let info = glyphs[i3].shaperInfo;\n            if (info.category & ((0, $79e3b6f2c331d0bf$export$bbcd928767338e0d) | (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).N | (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).RS | (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).CM | (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc) & info.category)) {\n                info.position = lastPos;\n                if (info.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H && info.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) {\n                    // Uniscribe doesn't move the Halant with Left Matra.\n                    // TEST: U+092B,U+093F,U+094DE\n                    // We follow.  This is important for the Sinhala\n                    // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n                    // where U+0DD9 is a left matra and U+0DCA is the virama.\n                    // We don't want to move the virama with the left matra.\n                    // TEST: U+0D9A,U+0DDA\n                    for(let j = i3; j > start; j--)if (glyphs[j - 1].shaperInfo.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) {\n                        info.position = glyphs[j - 1].shaperInfo.position;\n                        break;\n                    }\n                }\n            } else if (info.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).SMVD) lastPos = info.position;\n        }\n        // For post-base consonants let them own anything before them\n        // since the last consonant or matra.\n        let last = base;\n        for(let i4 = base + 1; i4 < end; i4++){\n            if ($d203e6b9523d0071$var$isConsonant(glyphs[i4])) {\n                for(let j = last + 1; j < i4; j++)if (glyphs[j].shaperInfo.position < (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).SMVD) glyphs[j].shaperInfo.position = glyphs[i4].shaperInfo.position;\n                last = i4;\n            } else if (glyphs[i4].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) last = i4;\n        }\n        let arr = glyphs.slice(start, end);\n        arr.sort((a, b)=>a.shaperInfo.position - b.shaperInfo.position);\n        glyphs.splice(start, arr.length, ...arr);\n        // Find base again\n        for(let i5 = start; i5 < end; i5++)if (glyphs[i5].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C) {\n            base = i5;\n            break;\n        }\n        // Setup features now\n        // Reph\n        for(let i6 = start; i6 < end && glyphs[i6].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph; i6++)glyphs[i6].features.rphf = true;\n        // Pre-base\n        let blwf = !plan.isOldSpec && indicConfig.blwfMode === \"Pre_And_Post\";\n        for(let i7 = start; i7 < base; i7++){\n            glyphs[i7].features.half = true;\n            if (blwf) glyphs[i7].features.blwf = true;\n        }\n        // Post-base\n        for(let i8 = base + 1; i8 < end; i8++){\n            glyphs[i8].features.abvf = true;\n            glyphs[i8].features.pstf = true;\n            glyphs[i8].features.blwf = true;\n        }\n        if (plan.isOldSpec && plan.unicodeScript === \"Devanagari\") {\n            // Old-spec eye-lash Ra needs special handling.  From the\n            // spec:\n            //\n            // \"The feature 'below-base form' is applied to consonants\n            // having below-base forms and following the base consonant.\n            // The exception is vattu, which may appear below half forms\n            // as well as below the base glyph. The feature 'below-base\n            // form' will be applied to all such occurrences of Ra as well.\"\n            //\n            // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n            // with Sanskrit 2003 font.\n            //\n            // However, note that Ra,Halant,ZWJ is the correct way to\n            // request eyelash form of Ra, so we wouldbn't inhibit it\n            // in that sequence.\n            //\n            // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n            for(let i = start; i + 1 < base; i++)if (glyphs[i].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).Ra && glyphs[i + 1].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).H && (i + 1 === base || glyphs[i + 2].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWJ)) {\n                glyphs[i].features.blwf = true;\n                glyphs[i + 1].features.blwf = true;\n            }\n        }\n        let prefLen = 2;\n        if (features.pref && base + prefLen < end) // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n        for(let i9 = base + 1; i9 + prefLen - 1 < end; i9++){\n            let g = [\n                glyphs[i9].copy(),\n                glyphs[i9 + 1].copy()\n            ];\n            if ($d203e6b9523d0071$var$wouldSubstitute(g, \"pref\")) {\n                for(let j = 0; j < prefLen; j++)glyphs[i9++].features.pref = true;\n                // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n                // Read the feature spec.\n                // This allows distinguishing the following cases with MS Khmer fonts:\n                // U+1784,U+17D2,U+179A,U+17D2,U+1782\n                // U+1784,U+17D2,U+1782,U+17D2,U+179A\n                if (features.cfar) for(; i9 < end; i9++)glyphs[i9].features.cfar = true;\n                break;\n            }\n        }\n        // Apply ZWJ/ZWNJ effects\n        for(let i10 = start + 1; i10 < end; i10++)if ($d203e6b9523d0071$var$isJoiner(glyphs[i10])) {\n            let nonJoiner = glyphs[i10].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWNJ;\n            let j = i10;\n            do {\n                j--;\n                // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n                // being there, since we don't skip them for the CJCT\n                // feature (ie. F_MANUAL_ZWJ)\n                // A ZWNJ disables HALF.\n                if (nonJoiner) delete glyphs[j].features.half;\n            }while (j > start && !$d203e6b9523d0071$var$isConsonant(glyphs[j]));\n        }\n    }\n}\nfunction $d203e6b9523d0071$var$finalReordering(font, glyphs, plan) {\n    let indicConfig = plan.indicConfig;\n    let features = font._layoutEngine.engine.GSUBProcessor.features;\n    for(let start = 0, end = $d203e6b9523d0071$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $d203e6b9523d0071$var$nextSyllable(glyphs, start)){\n        // 4. Final reordering:\n        //\n        // After the localized forms and basic shaping forms GSUB features have been\n        // applied (see below), the shaping engine performs some final glyph\n        // reordering before applying all the remaining font features to the entire\n        // cluster.\n        let tryPref = !!features.pref;\n        // Find base again\n        let base = start;\n        for(; base < end; base++)if (glyphs[base].shaperInfo.position >= (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C) {\n            if (tryPref && base + 1 < end) {\n                for(let i = base + 1; i < end; i++)if (glyphs[i].features.pref) {\n                    if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                        // Ok, this was a 'pref' candidate but didn't form any.\n                        // Base is around here...\n                        base = i;\n                        while(base < end && $d203e6b9523d0071$var$isHalantOrCoeng(glyphs[base]))base++;\n                        glyphs[base].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).BASE_C;\n                        tryPref = false;\n                    }\n                    break;\n                }\n            }\n            // For Malayalam, skip over unformed below- (but NOT post-) forms.\n            if (plan.unicodeScript === \"Malayalam\") for(let i = base + 1; i < end; i++){\n                while(i < end && $d203e6b9523d0071$var$isJoiner(glyphs[i]))i++;\n                if (i === end || !$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[i])) break;\n                i++; // Skip halant.\n                while(i < end && $d203e6b9523d0071$var$isJoiner(glyphs[i]))i++;\n                if (i < end && $d203e6b9523d0071$var$isConsonant(glyphs[i]) && glyphs[i].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Below_C) {\n                    base = i;\n                    glyphs[base].shaperInfo.position = (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C;\n                }\n            }\n            if (start < base && glyphs[base].shaperInfo.position > (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Base_C) base--;\n            break;\n        }\n        if (base === end && start < base && glyphs[base - 1].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).ZWJ) base--;\n        if (base < end) while(start < base && glyphs[base].shaperInfo.category & ((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).N | (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc)))base--;\n        // o Reorder matras:\n        //\n        // If a pre-base matra character had been reordered before applying basic\n        // features, the glyph can be moved closer to the main consonant based on\n        // whether half-forms had been formed. Actual position for the matra is\n        // defined as “after last standalone halant glyph, after initial matra\n        // position and before the main consonant”. If ZWJ or ZWNJ follow this\n        // halant, position is moved after it.\n        //\n        if (start + 1 < end && start < base) {\n            // If we lost track of base, alas, position before last thingy.\n            let newPos = base === end ? base - 2 : base - 1;\n            // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n            if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n                while(newPos > start && !(glyphs[newPos].shaperInfo.category & ((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M | (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc))))newPos--;\n                // If we found no Halant we are done.\n                // Otherwise only proceed if the Halant does\n                // not belong to the Matra itself!\n                if ($d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) // If ZWJ or ZWNJ follow this halant, position is moved after it.\n                {\n                    if (newPos + 1 < end && $d203e6b9523d0071$var$isJoiner(glyphs[newPos + 1])) newPos++;\n                } else newPos = start; // No move.\n            }\n            if (start < newPos && glyphs[newPos].shaperInfo.position !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) {\n                // Now go see if there's actually any matras...\n                for(let i = newPos; i > start; i--)if (glyphs[i - 1].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M) {\n                    let oldPos = i - 1;\n                    if (oldPos < base && base <= newPos) base--;\n                    let tmp = glyphs[oldPos];\n                    glyphs.splice(oldPos, 0, ...glyphs.splice(oldPos + 1, newPos - oldPos));\n                    glyphs[newPos] = tmp;\n                    newPos--;\n                }\n            }\n        }\n        // o Reorder reph:\n        //\n        // Reph’s original position is always at the beginning of the syllable,\n        // (i.e. it is not reordered at the character reordering stage). However,\n        // it will be reordered according to the basic-forms shaping results.\n        // Possible positions for reph, depending on the script, are; after main,\n        // before post-base consonant forms, and after post-base consonant forms.\n        // Two cases:\n        //\n        // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n        //   we should only move it if the sequence ligated to the repha form.\n        //\n        // - If repha is encoded separately and in the logical position, we should only\n        //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n        //   to make it work without the reordering.\n        if (start + 1 < end && glyphs[start].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph && glyphs[start].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n            let newRephPos;\n            let rephPos = indicConfig.rephPos;\n            let found = false;\n            // 1. If reph should be positioned after post-base consonant forms,\n            //    proceed to step 5.\n            if (rephPos !== (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Post) {\n                //  2. If the reph repositioning class is not after post-base: target\n                //     position is after the first explicit halant glyph between the\n                //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n                //     are following this halant, position is moved after it. If such\n                //     position is found, this is the target position. Otherwise,\n                //     proceed to the next step.\n                //\n                //     Note: in old-implementation fonts, where classifications were\n                //     fixed in shaping engine, there was no case where reph position\n                //     will be found on this step.\n                newRephPos = start + 1;\n                while(newRephPos < base && !$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos]))newRephPos++;\n                if (newRephPos < base && $d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n                    if (newRephPos + 1 < base && $d203e6b9523d0071$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n                    found = true;\n                }\n                // 3. If reph should be repositioned after the main consonant: find the\n                //    first consonant not ligated with main, or find the first\n                //    consonant that is not a potential pre-base reordering Ra.\n                if (!found && rephPos === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Main) {\n                    newRephPos = base;\n                    while(newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Main)newRephPos++;\n                    found = newRephPos < end;\n                }\n                // 4. If reph should be positioned before post-base consonant, find\n                //    first post-base classified consonant not ligated with main. If no\n                //    consonant is found, the target position should be before the\n                //    first matra, syllable modifier sign or vedic sign.\n                //\n                // This is our take on what step 4 is trying to say (and failing, BADLY).\n                if (!found && rephPos === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Sub) {\n                    newRephPos = base;\n                    while(newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & ((0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Post_C | (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).After_Post | (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).SMVD)))newRephPos++;\n                    found = newRephPos < end;\n                }\n            }\n            //  5. If no consonant is found in steps 3 or 4, move reph to a position\n            //     immediately before the first post-base matra, syllable modifier\n            //     sign or vedic sign that has a reordering class after the intended\n            //     reph position. For example, if the reordering position for reph\n            //     is post-main, it will skip above-base matras that also have a\n            //     post-main position.\n            if (!found) {\n                // Copied from step 2.\n                newRephPos = start + 1;\n                while(newRephPos < base && !$d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos]))newRephPos++;\n                if (newRephPos < base && $d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n                    if (newRephPos + 1 < base && $d203e6b9523d0071$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n                    found = true;\n                }\n            }\n            // 6. Otherwise, reorder reph to the end of the syllable.\n            if (!found) {\n                newRephPos = end - 1;\n                while(newRephPos > start && glyphs[newRephPos].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).SMVD)newRephPos--;\n                // If the Reph is to be ending up after a Matra,Halant sequence,\n                // position it before that Halant so it can interact with the Matra.\n                // However, if it's a plain Consonant,Halant we shouldn't do that.\n                // Uniscribe doesn't do this.\n                // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n                if ($d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    for(let i = base + 1; i < newRephPos; i++)if (glyphs[i].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) newRephPos--;\n                }\n            }\n            let reph = glyphs[start];\n            glyphs.splice(start, 0, ...glyphs.splice(start + 1, newRephPos - start));\n            glyphs[newRephPos] = reph;\n            if (start < base && base <= newRephPos) base--;\n        }\n        // o Reorder pre-base reordering consonants:\n        //\n        // If a pre-base reordering consonant is found, reorder it according to\n        // the following rules:\n        if (tryPref && base + 1 < end) {\n            for(let i = base + 1; i < end; i++)if (glyphs[i].features.pref) {\n                // 1. Only reorder a glyph produced by substitution during application\n                //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n                //    the feature generally but block it in certain contexts.)\n                // Note: We just check that something got substituted.  We don't check that\n                // the <pref> feature actually did it...\n                //\n                // Reorder pref only if it ligated.\n                if (glyphs[i].isLigated && !glyphs[i].isMultiplied) {\n                    // 2. Try to find a target position the same way as for pre-base matra.\n                    //    If it is found, reorder pre-base consonant glyph.\n                    //\n                    // 3. If position is not found, reorder immediately before main\n                    //    consonant.\n                    let newPos = base;\n                    // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n                    // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n                    // We want to position matra after them.\n                    if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n                        while(newPos > start && !(glyphs[newPos - 1].shaperInfo.category & ((0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M | (0, $79e3b6f2c331d0bf$export$ca9599b2a300afc))))newPos--;\n                        // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n                        // split matra, it should be reordered to *before* the left part of such matra.\n                        if (newPos > start && glyphs[newPos - 1].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) {\n                            let oldPos = i;\n                            for(let j = base + 1; j < oldPos; j++)if (glyphs[j].shaperInfo.category === (0, $79e3b6f2c331d0bf$export$a513ea61a7bee91c).M) {\n                                newPos--;\n                                break;\n                            }\n                        }\n                    }\n                    if (newPos > start && $d203e6b9523d0071$var$isHalantOrCoeng(glyphs[newPos - 1])) // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n                    {\n                        if (newPos < end && $d203e6b9523d0071$var$isJoiner(glyphs[newPos])) newPos++;\n                    }\n                    let oldPos = i;\n                    let tmp = glyphs[oldPos];\n                    glyphs.splice(newPos + 1, 0, ...glyphs.splice(newPos, oldPos - newPos));\n                    glyphs[newPos] = tmp;\n                    if (newPos <= base && base < oldPos) base++;\n                }\n                break;\n            }\n        }\n        // Apply 'init' to the Left Matra if it's a word start.\n        if (glyphs[start].shaperInfo.position === (0, $79e3b6f2c331d0bf$export$1a1f61c9c4dd9df0).Pre_M && (!start || !/Cf|Mn/.test((0, $gfJaN$unicodeproperties.getCategory)(glyphs[start - 1].codePoints[0])))) glyphs[start].features.init = true;\n    }\n}\nfunction $d203e6b9523d0071$var$nextSyllable(glyphs, start) {\n    if (start >= glyphs.length) return start;\n    let syllable = glyphs[start].shaperInfo.syllable;\n    while(++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n    return start;\n}\n\n\n\n\n\n\n\n\n\nconst { categories: $9b772791ccede8a5$var$categories , decompositions: $9b772791ccede8a5$var$decompositions  } = (0, (/*@__PURE__*/$parcel$interopDefault($79781f8c452881c2$exports)));\nconst $9b772791ccede8a5$var$trie = new (0, ($parcel$interopDefault($gfJaN$unicodetrie)))((0, $66a5b9fb5318558a$export$94fdf11bafc8de6b)(\"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\"));\nconst $9b772791ccede8a5$var$stateMachine = new (0, ($parcel$interopDefault($gfJaN$dfa)))((0, (/*@__PURE__*/$parcel$interopDefault($79781f8c452881c2$exports))));\nclass $9b772791ccede8a5$export$2e2bcd8739ae039 extends (0, $d28fb665ee343afc$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.addStage($9b772791ccede8a5$var$setupSyllables);\n        // Default glyph pre-processing group\n        plan.addStage([\n            \"locl\",\n            \"ccmp\",\n            \"nukt\",\n            \"akhn\"\n        ]);\n        // Reordering group\n        plan.addStage($9b772791ccede8a5$var$clearSubstitutionFlags);\n        plan.addStage([\n            \"rphf\"\n        ], false);\n        plan.addStage($9b772791ccede8a5$var$recordRphf);\n        plan.addStage($9b772791ccede8a5$var$clearSubstitutionFlags);\n        plan.addStage([\n            \"pref\"\n        ]);\n        plan.addStage($9b772791ccede8a5$var$recordPref);\n        // Orthographic unit shaping group\n        plan.addStage([\n            \"rkrf\",\n            \"abvf\",\n            \"blwf\",\n            \"half\",\n            \"pstf\",\n            \"vatu\",\n            \"cjct\"\n        ]);\n        plan.addStage($9b772791ccede8a5$var$reorder);\n        // Topographical features\n        // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n        // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n        // Standard topographic presentation and positional feature application\n        plan.addStage([\n            \"abvs\",\n            \"blws\",\n            \"pres\",\n            \"psts\",\n            \"dist\",\n            \"abvm\",\n            \"blwm\"\n        ]);\n    }\n    static assignFeatures(plan, glyphs) {\n        // Decompose split vowels\n        // TODO: do this in a more general unicode normalizer\n        for(let i = glyphs.length - 1; i >= 0; i--){\n            let codepoint = glyphs[i].codePoints[0];\n            if ($9b772791ccede8a5$var$decompositions[codepoint]) {\n                let decomposed = $9b772791ccede8a5$var$decompositions[codepoint].map((c)=>{\n                    let g = plan.font.glyphForCodePoint(c);\n                    return new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(plan.font, g.id, [\n                        c\n                    ], glyphs[i].features);\n                });\n                glyphs.splice(i, 1, ...decomposed);\n            }\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))($9b772791ccede8a5$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"BEFORE_GPOS\");\nfunction $9b772791ccede8a5$var$useCategory(glyph) {\n    return $9b772791ccede8a5$var$trie.get(glyph.codePoints[0]);\n}\nclass $9b772791ccede8a5$var$USEInfo {\n    constructor(category, syllableType, syllable){\n        this.category = category;\n        this.syllableType = syllableType;\n        this.syllable = syllable;\n    }\n}\nfunction $9b772791ccede8a5$var$setupSyllables(font, glyphs) {\n    let syllable = 0;\n    for (let [start, end, tags] of $9b772791ccede8a5$var$stateMachine.match(glyphs.map($9b772791ccede8a5$var$useCategory))){\n        ++syllable;\n        // Create shaper info\n        for(let i = start; i <= end; i++)glyphs[i].shaperInfo = new $9b772791ccede8a5$var$USEInfo($9b772791ccede8a5$var$categories[$9b772791ccede8a5$var$useCategory(glyphs[i])], tags[0], syllable);\n        // Assign rphf feature\n        let limit = glyphs[start].shaperInfo.category === \"R\" ? 1 : Math.min(3, end - start);\n        for(let i1 = start; i1 < start + limit; i1++)glyphs[i1].features.rphf = true;\n    }\n}\nfunction $9b772791ccede8a5$var$clearSubstitutionFlags(font, glyphs) {\n    for (let glyph of glyphs)glyph.substituted = false;\n}\nfunction $9b772791ccede8a5$var$recordRphf(font, glyphs) {\n    for (let glyph of glyphs)if (glyph.substituted && glyph.features.rphf) // Mark a substituted repha.\n    glyph.shaperInfo.category = \"R\";\n}\nfunction $9b772791ccede8a5$var$recordPref(font, glyphs) {\n    for (let glyph of glyphs)if (glyph.substituted) // Mark a substituted pref as VPre, as they behave the same way.\n    glyph.shaperInfo.category = \"VPre\";\n}\nfunction $9b772791ccede8a5$var$reorder(font, glyphs) {\n    let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n    for(let start = 0, end = $9b772791ccede8a5$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $9b772791ccede8a5$var$nextSyllable(glyphs, start)){\n        let i, j;\n        let info = glyphs[start].shaperInfo;\n        let type = info.syllableType;\n        // Only a few syllable types need reordering.\n        if (type !== \"virama_terminated_cluster\" && type !== \"standard_cluster\" && type !== \"broken_cluster\") continue;\n        // Insert a dotted circle glyph in broken clusters.\n        if (type === \"broken_cluster\" && dottedCircle) {\n            let g = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(font, dottedCircle, [\n                0x25cc\n            ]);\n            g.shaperInfo = info;\n            // Insert after possible Repha.\n            for(i = start; i < end && glyphs[i].shaperInfo.category === \"R\"; i++);\n            glyphs.splice(++i, 0, g);\n            end++;\n        }\n        // Move things forward.\n        if (info.category === \"R\" && end - start > 1) // Got a repha. Reorder it to after first base, before first halant.\n        for(i = start + 1; i < end; i++){\n            info = glyphs[i].shaperInfo;\n            if ($9b772791ccede8a5$var$isBase(info) || $9b772791ccede8a5$var$isHalant(glyphs[i])) {\n                // If we hit a halant, move before it; otherwise it's a base: move to it's\n                // place, and shift things in between backward.\n                if ($9b772791ccede8a5$var$isHalant(glyphs[i])) i--;\n                glyphs.splice(start, 0, ...glyphs.splice(start + 1, i - start), glyphs[i]);\n                break;\n            }\n        }\n        // Move things back.\n        for(i = start, j = end; i < end; i++){\n            info = glyphs[i].shaperInfo;\n            if ($9b772791ccede8a5$var$isBase(info) || $9b772791ccede8a5$var$isHalant(glyphs[i])) // If we hit a halant, move after it; otherwise it's a base: move to it's\n            // place, and shift things in between backward.\n            j = $9b772791ccede8a5$var$isHalant(glyphs[i]) ? i + 1 : i;\n            else if ((info.category === \"VPre\" || info.category === \"VMPre\") && j < i) glyphs.splice(j, 1, glyphs[i], ...glyphs.splice(j, i - j));\n        }\n    }\n}\nfunction $9b772791ccede8a5$var$nextSyllable(glyphs, start) {\n    if (start >= glyphs.length) return start;\n    let syllable = glyphs[start].shaperInfo.syllable;\n    while(++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n    return start;\n}\nfunction $9b772791ccede8a5$var$isHalant(glyph) {\n    return glyph.shaperInfo.category === \"H\" && !glyph.isLigated;\n}\nfunction $9b772791ccede8a5$var$isBase(info) {\n    return info.category === \"B\" || info.category === \"GB\";\n}\n\n\nconst $fdb4471fc82bc2c2$var$SHAPERS = {\n    arab: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    mong: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    syrc: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    \"nko \": (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    phag: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    mand: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    mani: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    phlp: (0, $17ba6019f27bfcf9$export$2e2bcd8739ae039),\n    hang: (0, $fa1d9fd80dd7279e$export$2e2bcd8739ae039),\n    bng2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    beng: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    dev2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    deva: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    gjr2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    gujr: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    guru: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    gur2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    knda: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    knd2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    mlm2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    mlym: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    ory2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    orya: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    taml: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    tml2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    telu: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    tel2: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    khmr: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    bali: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    batk: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    brah: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    bugi: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    buhd: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    cakm: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    cham: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    dupl: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    egyp: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    gran: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    hano: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    java: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    kthi: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    kali: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    khar: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    khoj: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    sind: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    lepc: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    limb: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    mahj: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    // mand: UniversalShaper, // Mandaic\n    // mani: UniversalShaper, // Manichaean\n    mtei: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    modi: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    // mong: UniversalShaper, // Mongolian\n    // 'nko ': UniversalShaper, // N’Ko\n    hmng: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    // phag: UniversalShaper, // Phags-pa\n    // phlp: UniversalShaper, // Psalter Pahlavi\n    rjng: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    saur: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    shrd: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    sidd: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    sinh: (0, $d203e6b9523d0071$export$2e2bcd8739ae039),\n    sund: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    sylo: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tglg: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tagb: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tale: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    lana: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tavt: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    takr: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tibt: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tfng: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    tirh: (0, $9b772791ccede8a5$export$2e2bcd8739ae039),\n    latn: (0, $d28fb665ee343afc$export$2e2bcd8739ae039),\n    DFLT: (0, $d28fb665ee343afc$export$2e2bcd8739ae039 // Default\n    )\n};\nfunction $fdb4471fc82bc2c2$export$7877a478dd30fd3d(script) {\n    if (!Array.isArray(script)) script = [\n        script\n    ];\n    for (let s of script){\n        let shaper = $fdb4471fc82bc2c2$var$SHAPERS[s];\n        if (shaper) return shaper;\n    }\n    return 0, $d28fb665ee343afc$export$2e2bcd8739ae039;\n}\n\n\n\n\n\nclass $86bc1883359e094a$export$2e2bcd8739ae039 extends (0, $7b226e6bbeadedeb$export$2e2bcd8739ae039) {\n    applyLookup(lookupType, table) {\n        switch(lookupType){\n            case 1:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    let glyph = this.glyphIterator.cur;\n                    switch(table.version){\n                        case 1:\n                            glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n                            break;\n                        case 2:\n                            glyph.id = table.substitute.get(index);\n                            break;\n                    }\n                    return true;\n                }\n            case 2:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index !== -1) {\n                        let sequence = table.sequences.get(index);\n                        if (sequence.length === 0) {\n                            // If the sequence length is zero, delete the glyph.\n                            // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n                            this.glyphs.splice(this.glyphIterator.index, 1);\n                            return true;\n                        }\n                        this.glyphIterator.cur.id = sequence[0];\n                        this.glyphIterator.cur.ligatureComponent = 0;\n                        let features = this.glyphIterator.cur.features;\n                        let curGlyph = this.glyphIterator.cur;\n                        let replacement = sequence.slice(1).map((gid, i)=>{\n                            let glyph = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(this.font, gid, undefined, features);\n                            glyph.shaperInfo = curGlyph.shaperInfo;\n                            glyph.isLigated = curGlyph.isLigated;\n                            glyph.ligatureComponent = i + 1;\n                            glyph.substituted = true;\n                            glyph.isMultiplied = true;\n                            return glyph;\n                        });\n                        this.glyphs.splice(this.glyphIterator.index + 1, 0, ...replacement);\n                        return true;\n                    }\n                    return false;\n                }\n            case 3:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index !== -1) {\n                        let USER_INDEX = 0; // TODO\n                        this.glyphIterator.cur.id = table.alternateSet.get(index)[USER_INDEX];\n                        return true;\n                    }\n                    return false;\n                }\n            case 4:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    for (let ligature of table.ligatureSets.get(index)){\n                        let matched = this.sequenceMatchIndices(1, ligature.components);\n                        if (!matched) continue;\n                        let curGlyph = this.glyphIterator.cur;\n                        // Concatenate all of the characters the new ligature will represent\n                        let characters = curGlyph.codePoints.slice();\n                        for (let index of matched)characters.push(...this.glyphs[index].codePoints);\n                        // Create the replacement ligature glyph\n                        let ligatureGlyph = new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(this.font, ligature.glyph, characters, curGlyph.features);\n                        ligatureGlyph.shaperInfo = curGlyph.shaperInfo;\n                        ligatureGlyph.isLigated = true;\n                        ligatureGlyph.substituted = true;\n                        // From Harfbuzz:\n                        // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n                        //   the ligature to keep its old ligature id.  This will allow it to attach to\n                        //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n                        //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n                        //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n                        //   later, we don't want them to lose their ligature id/component, otherwise\n                        //   GPOS will fail to correctly position the mark ligature on top of the\n                        //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n                        //\n                        // - If a ligature is formed of components that some of which are also ligatures\n                        //   themselves, and those ligature components had marks attached to *their*\n                        //   components, we have to attach the marks to the new ligature component\n                        //   positions!  Now *that*'s tricky!  And these marks may be following the\n                        //   last component of the whole sequence, so we should loop forward looking\n                        //   for them and update them.\n                        //\n                        //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n                        //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n                        //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n                        //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n                        //   the new ligature with a component value of 2.\n                        //\n                        //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n                        let isMarkLigature = curGlyph.isMark;\n                        for(let i = 0; i < matched.length && isMarkLigature; i++)isMarkLigature = this.glyphs[matched[i]].isMark;\n                        ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n                        let lastLigID = curGlyph.ligatureID;\n                        let lastNumComps = curGlyph.codePoints.length;\n                        let curComps = lastNumComps;\n                        let idx = this.glyphIterator.index + 1;\n                        // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n                        // This allows GPOS to attach marks to the correct ligature components.\n                        for (let matchIndex of matched){\n                            // Don't assign new ligature components for mark ligatures (see above)\n                            if (isMarkLigature) idx = matchIndex;\n                            else while(idx < matchIndex){\n                                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                                this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                                this.glyphs[idx].ligatureComponent = ligatureComponent;\n                                idx++;\n                            }\n                            lastLigID = this.glyphs[idx].ligatureID;\n                            lastNumComps = this.glyphs[idx].codePoints.length;\n                            curComps += lastNumComps;\n                            idx++; // skip base glyph\n                        }\n                        // Adjust ligature components for any marks following\n                        if (lastLigID && !isMarkLigature) for(let i1 = idx; i1 < this.glyphs.length; i1++){\n                            if (this.glyphs[i1].ligatureID === lastLigID) {\n                                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[i1].ligatureComponent || 1, lastNumComps);\n                                this.glyphs[i1].ligatureComponent = ligatureComponent;\n                            } else break;\n                        }\n                        // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n                        for(let i2 = matched.length - 1; i2 >= 0; i2--)this.glyphs.splice(matched[i2], 1);\n                        this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n                        return true;\n                    }\n                    return false;\n                }\n            case 5:\n                return this.applyContext(table);\n            case 6:\n                return this.applyChainingContext(table);\n            case 7:\n                return this.applyLookup(table.lookupType, table.extension);\n            default:\n                throw new Error(`GSUB lookupType ${lookupType} is not supported`);\n        }\n    }\n}\n\n\n\nclass $79ea6270f0a90256$export$2e2bcd8739ae039 extends (0, $7b226e6bbeadedeb$export$2e2bcd8739ae039) {\n    applyPositionValue(sequenceIndex, value) {\n        let position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n        if (value.xAdvance != null) position.xAdvance += value.xAdvance;\n        if (value.yAdvance != null) position.yAdvance += value.yAdvance;\n        if (value.xPlacement != null) position.xOffset += value.xPlacement;\n        if (value.yPlacement != null) position.yOffset += value.yPlacement;\n        // Adjustments for font variations\n        let variationProcessor = this.font._variationProcessor;\n        let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n        if (variationProcessor && variationStore) {\n            if (value.xPlaDevice) position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n            if (value.yPlaDevice) position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n            if (value.xAdvDevice) position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n            if (value.yAdvDevice) position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n        }\n    // TODO: device tables\n    }\n    applyLookup(lookupType, table) {\n        switch(lookupType){\n            case 1:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    switch(table.version){\n                        case 1:\n                            this.applyPositionValue(0, table.value);\n                            break;\n                        case 2:\n                            this.applyPositionValue(0, table.values.get(index));\n                            break;\n                    }\n                    return true;\n                }\n            case 2:\n                {\n                    let nextGlyph = this.glyphIterator.peek();\n                    if (!nextGlyph) return false;\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    switch(table.version){\n                        case 1:\n                            let set = table.pairSets.get(index);\n                            for (let pair of set)if (pair.secondGlyph === nextGlyph.id) {\n                                this.applyPositionValue(0, pair.value1);\n                                this.applyPositionValue(1, pair.value2);\n                                return true;\n                            }\n                            return false;\n                        case 2:\n                            let class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n                            let class2 = this.getClassID(nextGlyph.id, table.classDef2);\n                            if (class1 === -1 || class2 === -1) return false;\n                            var pair1 = table.classRecords.get(class1).get(class2);\n                            this.applyPositionValue(0, pair1.value1);\n                            this.applyPositionValue(1, pair1.value2);\n                            return true;\n                    }\n                }\n            case 3:\n                {\n                    let nextIndex = this.glyphIterator.peekIndex();\n                    let nextGlyph = this.glyphs[nextIndex];\n                    if (!nextGlyph) return false;\n                    let curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n                    if (!curRecord || !curRecord.exitAnchor) return false;\n                    let nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, nextGlyph.id)];\n                    if (!nextRecord || !nextRecord.entryAnchor) return false;\n                    let entry = this.getAnchor(nextRecord.entryAnchor);\n                    let exit = this.getAnchor(curRecord.exitAnchor);\n                    let cur = this.positions[this.glyphIterator.index];\n                    let next = this.positions[nextIndex];\n                    let d;\n                    switch(this.direction){\n                        case \"ltr\":\n                            cur.xAdvance = exit.x + cur.xOffset;\n                            d = entry.x + next.xOffset;\n                            next.xAdvance -= d;\n                            next.xOffset -= d;\n                            break;\n                        case \"rtl\":\n                            d = exit.x + cur.xOffset;\n                            cur.xAdvance -= d;\n                            cur.xOffset -= d;\n                            next.xAdvance = entry.x + next.xOffset;\n                            break;\n                    }\n                    if (this.glyphIterator.flags.rightToLeft) {\n                        this.glyphIterator.cur.cursiveAttachment = nextIndex;\n                        cur.yOffset = entry.y - exit.y;\n                    } else {\n                        nextGlyph.cursiveAttachment = this.glyphIterator.index;\n                        cur.yOffset = exit.y - entry.y;\n                    }\n                    return true;\n                }\n            case 4:\n                {\n                    let markIndex = this.coverageIndex(table.markCoverage);\n                    if (markIndex === -1) return false;\n                    // search backward for a base glyph\n                    let baseGlyphIndex = this.glyphIterator.index;\n                    while(--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0));\n                    if (baseGlyphIndex < 0) return false;\n                    let baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n                    if (baseIndex === -1) return false;\n                    let markRecord = table.markArray[markIndex];\n                    let baseAnchor = table.baseArray[baseIndex][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n                    return true;\n                }\n            case 5:\n                {\n                    let markIndex = this.coverageIndex(table.markCoverage);\n                    if (markIndex === -1) return false;\n                    // search backward for a base glyph\n                    let baseGlyphIndex = this.glyphIterator.index;\n                    while(--baseGlyphIndex >= 0 && this.glyphs[baseGlyphIndex].isMark);\n                    if (baseGlyphIndex < 0) return false;\n                    let ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[baseGlyphIndex].id);\n                    if (ligIndex === -1) return false;\n                    let ligAttach = table.ligatureArray[ligIndex];\n                    let markGlyph = this.glyphIterator.cur;\n                    let ligGlyph = this.glyphs[baseGlyphIndex];\n                    let compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n                    let markRecord = table.markArray[markIndex];\n                    let baseAnchor = ligAttach[compIndex][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n                    return true;\n                }\n            case 6:\n                {\n                    let mark1Index = this.coverageIndex(table.mark1Coverage);\n                    if (mark1Index === -1) return false;\n                    // get the previous mark to attach to\n                    let prevIndex = this.glyphIterator.peekIndex(-1);\n                    let prev = this.glyphs[prevIndex];\n                    if (!prev || !prev.isMark) return false;\n                    let cur = this.glyphIterator.cur;\n                    // The following logic was borrowed from Harfbuzz\n                    let good = false;\n                    if (cur.ligatureID === prev.ligatureID) {\n                        if (!cur.ligatureID) good = true;\n                        else if (cur.ligatureComponent === prev.ligatureComponent) good = true;\n                    } else // If ligature ids don't match, it may be the case that one of the marks\n                    // itself is a ligature, in which case match.\n                    if (cur.ligatureID && !cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) good = true;\n                    if (!good) return false;\n                    let mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n                    if (mark2Index === -1) return false;\n                    let markRecord = table.mark1Array[mark1Index];\n                    let baseAnchor = table.mark2Array[mark2Index][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, prevIndex);\n                    return true;\n                }\n            case 7:\n                return this.applyContext(table);\n            case 8:\n                return this.applyChainingContext(table);\n            case 9:\n                return this.applyLookup(table.lookupType, table.extension);\n            default:\n                throw new Error(`Unsupported GPOS table: ${lookupType}`);\n        }\n    }\n    applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n        let baseCoords = this.getAnchor(baseAnchor);\n        let markCoords = this.getAnchor(markRecord.markAnchor);\n        let basePos = this.positions[baseGlyphIndex];\n        let markPos = this.positions[this.glyphIterator.index];\n        markPos.xOffset = baseCoords.x - markCoords.x;\n        markPos.yOffset = baseCoords.y - markCoords.y;\n        this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n    }\n    getAnchor(anchor) {\n        // TODO: contour point, device tables\n        let x = anchor.xCoordinate;\n        let y = anchor.yCoordinate;\n        // Adjustments for font variations\n        let variationProcessor = this.font._variationProcessor;\n        let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n        if (variationProcessor && variationStore) {\n            if (anchor.xDeviceTable) x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n            if (anchor.yDeviceTable) y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n        }\n        return {\n            x: x,\n            y: y\n        };\n    }\n    applyFeatures(userFeatures, glyphs, advances) {\n        super.applyFeatures(userFeatures, glyphs, advances);\n        for(var i = 0; i < this.glyphs.length; i++)this.fixCursiveAttachment(i);\n        this.fixMarkAttachment();\n    }\n    fixCursiveAttachment(i) {\n        let glyph = this.glyphs[i];\n        if (glyph.cursiveAttachment != null) {\n            let j = glyph.cursiveAttachment;\n            glyph.cursiveAttachment = null;\n            this.fixCursiveAttachment(j);\n            this.positions[i].yOffset += this.positions[j].yOffset;\n        }\n    }\n    fixMarkAttachment() {\n        for(let i = 0; i < this.glyphs.length; i++){\n            let glyph = this.glyphs[i];\n            if (glyph.markAttachment != null) {\n                let j = glyph.markAttachment;\n                this.positions[i].xOffset += this.positions[j].xOffset;\n                this.positions[i].yOffset += this.positions[j].yOffset;\n                if (this.direction === \"ltr\") for(let k = j; k < i; k++){\n                    this.positions[i].xOffset -= this.positions[k].xAdvance;\n                    this.positions[i].yOffset -= this.positions[k].yAdvance;\n                }\n                else for(let k1 = j + 1; k1 < i + 1; k1++){\n                    this.positions[i].xOffset += this.positions[k1].xAdvance;\n                    this.positions[i].yOffset += this.positions[k1].yAdvance;\n                }\n            }\n        }\n    }\n}\n\n\nclass $b2f26a32cb9ab2fa$export$2e2bcd8739ae039 {\n    setup(glyphRun) {\n        // Map glyphs to GlyphInfo objects so data can be passed between\n        // GSUB and GPOS without mutating the real (shared) Glyph objects.\n        this.glyphInfos = glyphRun.glyphs.map((glyph)=>new (0, $f22bb23c9fd478d8$export$2e2bcd8739ae039)(this.font, glyph.id, [\n                ...glyph.codePoints\n            ]));\n        // Select a script based on what is available in GSUB/GPOS.\n        let script = null;\n        if (this.GPOSProcessor) script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n        if (this.GSUBProcessor) script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n        // Choose a shaper based on the script, and setup a shaping plan.\n        // This determines which features to apply to which glyphs.\n        this.shaper = $fdb4471fc82bc2c2$export$7877a478dd30fd3d(script);\n        this.plan = new (0, $d7e93cca3cf8ce8a$export$2e2bcd8739ae039)(this.font, script, glyphRun.direction);\n        this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features);\n        // Assign chosen features to output glyph run\n        for(let key in this.plan.allFeatures)glyphRun.features[key] = true;\n    }\n    substitute(glyphRun) {\n        if (this.GSUBProcessor) {\n            this.plan.process(this.GSUBProcessor, this.glyphInfos);\n            // Map glyph infos back to normal Glyph objects\n            glyphRun.glyphs = this.glyphInfos.map((glyphInfo)=>this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints));\n        }\n    }\n    position(glyphRun) {\n        if (this.shaper.zeroMarkWidths === \"BEFORE_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n        if (this.GPOSProcessor) this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n        if (this.shaper.zeroMarkWidths === \"AFTER_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n        // Reverse the glyphs and positions if the script is right-to-left\n        if (glyphRun.direction === \"rtl\") {\n            glyphRun.glyphs.reverse();\n            glyphRun.positions.reverse();\n        }\n        return this.GPOSProcessor && this.GPOSProcessor.features;\n    }\n    zeroMarkAdvances(positions) {\n        for(let i = 0; i < this.glyphInfos.length; i++)if (this.glyphInfos[i].isMark) {\n            positions[i].xAdvance = 0;\n            positions[i].yAdvance = 0;\n        }\n    }\n    cleanup() {\n        this.glyphInfos = null;\n        this.plan = null;\n        this.shaper = null;\n    }\n    getAvailableFeatures(script, language) {\n        let features = [];\n        if (this.GSUBProcessor) {\n            this.GSUBProcessor.selectScript(script, language);\n            features.push(...Object.keys(this.GSUBProcessor.features));\n        }\n        if (this.GPOSProcessor) {\n            this.GPOSProcessor.selectScript(script, language);\n            features.push(...Object.keys(this.GPOSProcessor.features));\n        }\n        return features;\n    }\n    constructor(font){\n        this.font = font;\n        this.glyphInfos = null;\n        this.plan = null;\n        this.GSUBProcessor = null;\n        this.GPOSProcessor = null;\n        this.fallbackPosition = true;\n        if (font.GSUB) this.GSUBProcessor = new (0, $86bc1883359e094a$export$2e2bcd8739ae039)(font, font.GSUB);\n        if (font.GPOS) this.GPOSProcessor = new (0, $79ea6270f0a90256$export$2e2bcd8739ae039)(font, font.GPOS);\n    }\n}\n\n\nclass $9d641258c9d7180d$export$2e2bcd8739ae039 {\n    layout(string, features, script, language, direction) {\n        // Make the features parameter optional\n        if (typeof features === \"string\") {\n            direction = language;\n            language = script;\n            script = features;\n            features = [];\n        }\n        // Map string to glyphs if needed\n        if (typeof string === \"string\") {\n            // Attempt to detect the script from the string if not provided.\n            if (script == null) script = $e38a1a895f6aeb54$export$e5cb25e204fb8450(string);\n            var glyphs = this.font.glyphsForString(string);\n        } else {\n            // Attempt to detect the script from the glyph code points if not provided.\n            if (script == null) {\n                let codePoints = [];\n                for (let glyph of string)codePoints.push(...glyph.codePoints);\n                script = $e38a1a895f6aeb54$export$16fab0757cfc223d(codePoints);\n            }\n            var glyphs = string;\n        }\n        let glyphRun = new (0, $b19c79ec7a94fa39$export$2e2bcd8739ae039)(glyphs, features, script, language, direction);\n        // Return early if there are no glyphs\n        if (glyphs.length === 0) {\n            glyphRun.positions = [];\n            return glyphRun;\n        }\n        // Setup the advanced layout engine\n        if (this.engine && this.engine.setup) this.engine.setup(glyphRun);\n        // Substitute and position the glyphs\n        this.substitute(glyphRun);\n        this.position(glyphRun);\n        this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n        // Let the layout engine clean up any state it might have\n        if (this.engine && this.engine.cleanup) this.engine.cleanup();\n        return glyphRun;\n    }\n    substitute(glyphRun) {\n        // Call the advanced layout engine to make substitutions\n        if (this.engine && this.engine.substitute) this.engine.substitute(glyphRun);\n    }\n    position(glyphRun) {\n        // Get initial glyph positions\n        glyphRun.positions = glyphRun.glyphs.map((glyph)=>new (0, $9195cf1266c12ea5$export$2e2bcd8739ae039)(glyph.advanceWidth));\n        let positioned = null;\n        // Call the advanced layout engine. Returns the features applied.\n        if (this.engine && this.engine.position) positioned = this.engine.position(glyphRun);\n        // if there is no GPOS table, use unicode properties to position marks.\n        if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n            if (!this.unicodeLayoutEngine) this.unicodeLayoutEngine = new (0, $a57a26817cd35108$export$2e2bcd8739ae039)(this.font);\n            this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n        }\n        // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n        if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n            if (!this.kernProcessor) this.kernProcessor = new (0, $4646d52c2a559cdb$export$2e2bcd8739ae039)(this.font);\n            this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n            glyphRun.features.kern = true;\n        }\n    }\n    hideDefaultIgnorables(glyphs, positions) {\n        let space = this.font.glyphForCodePoint(0x20);\n        for(let i = 0; i < glyphs.length; i++)if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n            glyphs[i] = space;\n            positions[i].xAdvance = 0;\n            positions[i].yAdvance = 0;\n        }\n    }\n    isDefaultIgnorable(ch) {\n        // From DerivedCoreProperties.txt in the Unicode database,\n        // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n        // Harfbuzz and Uniscribe do.\n        let plane = ch >> 16;\n        if (plane === 0) // BMP\n        switch(ch >> 8){\n            case 0x00:\n                return ch === 0x00AD;\n            case 0x03:\n                return ch === 0x034F;\n            case 0x06:\n                return ch === 0x061C;\n            case 0x17:\n                return 0x17B4 <= ch && ch <= 0x17B5;\n            case 0x18:\n                return 0x180B <= ch && ch <= 0x180E;\n            case 0x20:\n                return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n            case 0xFE:\n                return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n            case 0xFF:\n                return 0xFFF0 <= ch && ch <= 0xFFF8;\n            default:\n                return false;\n        }\n        else // Other planes\n        switch(plane){\n            case 0x01:\n                return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n            case 0x0E:\n                return 0xE0000 <= ch && ch <= 0xE0FFF;\n            default:\n                return false;\n        }\n    }\n    getAvailableFeatures(script, language) {\n        let features = [];\n        if (this.engine) features.push(...this.engine.getAvailableFeatures(script, language));\n        if (this.font.kern && features.indexOf(\"kern\") === -1) features.push(\"kern\");\n        return features;\n    }\n    stringsForGlyph(gid) {\n        let result = new Set;\n        let codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n        for (let codePoint of codePoints)result.add(String.fromCodePoint(codePoint));\n        if (this.engine && this.engine.stringsForGlyph) for (let string of this.engine.stringsForGlyph(gid))result.add(string);\n        return Array.from(result);\n    }\n    constructor(font){\n        this.font = font;\n        this.unicodeLayoutEngine = null;\n        this.kernProcessor = null;\n        // Choose an advanced layout engine. We try the AAT morx table first since more\n        // scripts are currently supported because the shaping logic is built into the font.\n        if (this.font.morx) this.engine = new (0, $860fcbd64bc12fbc$export$2e2bcd8739ae039)(this.font);\n        else if (this.font.GSUB || this.font.GPOS) this.engine = new (0, $b2f26a32cb9ab2fa$export$2e2bcd8739ae039)(this.font);\n    }\n}\n\n\n\n\n\n\nconst $67ee4828d81adb28$var$SVG_COMMANDS = {\n    moveTo: \"M\",\n    lineTo: \"L\",\n    quadraticCurveTo: \"Q\",\n    bezierCurveTo: \"C\",\n    closePath: \"Z\"\n};\nclass $67ee4828d81adb28$export$2e2bcd8739ae039 {\n    /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */ toFunction() {\n        return (ctx)=>{\n            this.commands.forEach((c)=>{\n                return ctx[c.command].apply(ctx, c.args);\n            });\n        };\n    }\n    /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */ toSVG() {\n        let cmds = this.commands.map((c)=>{\n            let args = c.args.map((arg)=>Math.round(arg * 100) / 100);\n            return `${$67ee4828d81adb28$var$SVG_COMMANDS[c.command]}${args.join(\" \")}`;\n        });\n        return cmds.join(\"\");\n    }\n    /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */ get cbox() {\n        if (!this._cbox) {\n            let cbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039);\n            for (let command1 of this.commands)for(let i = 0; i < command1.args.length; i += 2)cbox.addPoint(command1.args[i], command1.args[i + 1]);\n            this._cbox = Object.freeze(cbox);\n        }\n        return this._cbox;\n    }\n    /**\n   * Gets the exact bounding box of the path by evaluating curve segments.\n   * Slower to compute than the control box, but more accurate.\n   * @type {BBox}\n   */ get bbox() {\n        if (this._bbox) return this._bbox;\n        let bbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039);\n        let cx = 0, cy = 0;\n        let f = (t)=>Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n        for (let c of this.commands)switch(c.command){\n            case \"moveTo\":\n            case \"lineTo\":\n                let [x, y] = c.args;\n                bbox.addPoint(x, y);\n                cx = x;\n                cy = y;\n                break;\n            case \"quadraticCurveTo\":\n            case \"bezierCurveTo\":\n                if (c.command === \"quadraticCurveTo\") {\n                    // http://fontforge.org/bezier.html\n                    var [qp1x, qp1y, p3x, p3y] = c.args;\n                    var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n                    var cp1y = cy + 2 / 3 * (qp1y - cy);\n                    var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n                    var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n                } else var [cp1x, cp1y, cp2x, cp2y, p3x, p3y] = c.args;\n                // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n                bbox.addPoint(p3x, p3y);\n                var p0 = [\n                    cx,\n                    cy\n                ];\n                var p1 = [\n                    cp1x,\n                    cp1y\n                ];\n                var p2 = [\n                    cp2x,\n                    cp2y\n                ];\n                var p3 = [\n                    p3x,\n                    p3y\n                ];\n                for(var i = 0; i <= 1; i++){\n                    let b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n                    let a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n                    c = 3 * p1[i] - 3 * p0[i];\n                    if (a === 0) {\n                        if (b === 0) continue;\n                        let t = -c / b;\n                        if (0 < t && t < 1) {\n                            if (i === 0) bbox.addPoint(f(t), bbox.maxY);\n                            else if (i === 1) bbox.addPoint(bbox.maxX, f(t));\n                        }\n                        continue;\n                    }\n                    let b2ac = Math.pow(b, 2) - 4 * c * a;\n                    if (b2ac < 0) continue;\n                    let t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n                    if (0 < t1 && t1 < 1) {\n                        if (i === 0) bbox.addPoint(f(t1), bbox.maxY);\n                        else if (i === 1) bbox.addPoint(bbox.maxX, f(t1));\n                    }\n                    let t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n                    if (0 < t2 && t2 < 1) {\n                        if (i === 0) bbox.addPoint(f(t2), bbox.maxY);\n                        else if (i === 1) bbox.addPoint(bbox.maxX, f(t2));\n                    }\n                }\n                cx = p3x;\n                cy = p3y;\n                break;\n        }\n        return this._bbox = Object.freeze(bbox);\n    }\n    /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */ mapPoints(fn) {\n        let path = new $67ee4828d81adb28$export$2e2bcd8739ae039;\n        for (let c of this.commands){\n            let args = [];\n            for(let i = 0; i < c.args.length; i += 2){\n                let [x, y] = fn(c.args[i], c.args[i + 1]);\n                args.push(x, y);\n            }\n            path[c.command](...args);\n        }\n        return path;\n    }\n    /**\n   * Transforms the path by the given matrix.\n   */ transform(m0, m1, m2, m3, m4, m5) {\n        return this.mapPoints((x, y)=>{\n            const tx = m0 * x + m2 * y + m4;\n            const ty = m1 * x + m3 * y + m5;\n            return [\n                tx,\n                ty\n            ];\n        });\n    }\n    /**\n   * Translates the path by the given offset.\n   */ translate(x, y) {\n        return this.transform(1, 0, 0, 1, x, y);\n    }\n    /**\n   * Rotates the path by the given angle (in radians).\n   */ rotate(angle) {\n        let cos = Math.cos(angle);\n        let sin = Math.sin(angle);\n        return this.transform(cos, sin, -sin, cos, 0, 0);\n    }\n    /**\n   * Scales the path.\n   */ scale(scaleX, scaleY = scaleX) {\n        return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n    }\n    constructor(){\n        this.commands = [];\n        this._bbox = null;\n        this._cbox = null;\n    }\n}\nfor (let command of [\n    \"moveTo\",\n    \"lineTo\",\n    \"quadraticCurveTo\",\n    \"bezierCurveTo\",\n    \"closePath\"\n])$67ee4828d81adb28$export$2e2bcd8739ae039.prototype[command] = function(...args) {\n    this._bbox = this._cbox = null;\n    this.commands.push({\n        command: command,\n        args: args\n    });\n    return this;\n};\n\n\n\nvar $85e16e40023cfb0f$export$2e2bcd8739ae039 = [\n    \".notdef\",\n    \".null\",\n    \"nonmarkingreturn\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quotesingle\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"grave\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"Adieresis\",\n    \"Aring\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ntilde\",\n    \"Odieresis\",\n    \"Udieresis\",\n    \"aacute\",\n    \"agrave\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"atilde\",\n    \"aring\",\n    \"ccedilla\",\n    \"eacute\",\n    \"egrave\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"iacute\",\n    \"igrave\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"ntilde\",\n    \"oacute\",\n    \"ograve\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"otilde\",\n    \"uacute\",\n    \"ugrave\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"dagger\",\n    \"degree\",\n    \"cent\",\n    \"sterling\",\n    \"section\",\n    \"bullet\",\n    \"paragraph\",\n    \"germandbls\",\n    \"registered\",\n    \"copyright\",\n    \"trademark\",\n    \"acute\",\n    \"dieresis\",\n    \"notequal\",\n    \"AE\",\n    \"Oslash\",\n    \"infinity\",\n    \"plusminus\",\n    \"lessequal\",\n    \"greaterequal\",\n    \"yen\",\n    \"mu\",\n    \"partialdiff\",\n    \"summation\",\n    \"product\",\n    \"pi\",\n    \"integral\",\n    \"ordfeminine\",\n    \"ordmasculine\",\n    \"Omega\",\n    \"ae\",\n    \"oslash\",\n    \"questiondown\",\n    \"exclamdown\",\n    \"logicalnot\",\n    \"radical\",\n    \"florin\",\n    \"approxequal\",\n    \"Delta\",\n    \"guillemotleft\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"nonbreakingspace\",\n    \"Agrave\",\n    \"Atilde\",\n    \"Otilde\",\n    \"OE\",\n    \"oe\",\n    \"endash\",\n    \"emdash\",\n    \"quotedblleft\",\n    \"quotedblright\",\n    \"quoteleft\",\n    \"quoteright\",\n    \"divide\",\n    \"lozenge\",\n    \"ydieresis\",\n    \"Ydieresis\",\n    \"fraction\",\n    \"currency\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"perthousand\",\n    \"Acircumflex\",\n    \"Ecircumflex\",\n    \"Aacute\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"apple\",\n    \"Ograve\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Ugrave\",\n    \"dotlessi\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"Lslash\",\n    \"lslash\",\n    \"Scaron\",\n    \"scaron\",\n    \"Zcaron\",\n    \"zcaron\",\n    \"brokenbar\",\n    \"Eth\",\n    \"eth\",\n    \"Yacute\",\n    \"yacute\",\n    \"Thorn\",\n    \"thorn\",\n    \"minus\",\n    \"multiply\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"onehalf\",\n    \"onequarter\",\n    \"threequarters\",\n    \"franc\",\n    \"Gbreve\",\n    \"gbreve\",\n    \"Idotaccent\",\n    \"Scedilla\",\n    \"scedilla\",\n    \"Cacute\",\n    \"cacute\",\n    \"Ccaron\",\n    \"ccaron\",\n    \"dcroat\"\n];\n\n\nclass $0e4f52d7996e478b$export$2e2bcd8739ae039 {\n    _getPath() {\n        return new (0, $67ee4828d81adb28$export$2e2bcd8739ae039)();\n    }\n    _getCBox() {\n        return this.path.cbox;\n    }\n    _getBBox() {\n        return this.path.bbox;\n    }\n    _getTableMetrics(table) {\n        if (this.id < table.metrics.length) return table.metrics.get(this.id);\n        let metric = table.metrics.get(table.metrics.length - 1);\n        let res = {\n            advance: metric ? metric.advance : 0,\n            bearing: table.bearings.get(this.id - table.metrics.length) || 0\n        };\n        return res;\n    }\n    _getMetrics(cbox) {\n        if (this._metrics) return this._metrics;\n        let { advance: advanceWidth , bearing: leftBearing  } = this._getTableMetrics(this._font.hmtx);\n        // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n        if (this._font.vmtx) var { advance: advanceHeight , bearing: topBearing  } = this._getTableMetrics(this._font.vmtx);\n        else {\n            let os2;\n            if (typeof cbox === \"undefined\" || cbox === null) ({ cbox: cbox  } = this);\n            if ((os2 = this._font[\"OS/2\"]) && os2.version > 0) {\n                var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n                var topBearing = os2.typoAscender - cbox.maxY;\n            } else {\n                let { hhea: hhea  } = this._font;\n                var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n                var topBearing = hhea.ascent - cbox.maxY;\n            }\n        }\n        if (this._font._variationProcessor && this._font.HVAR) advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n        return this._metrics = {\n            advanceWidth: advanceWidth,\n            advanceHeight: advanceHeight,\n            leftBearing: leftBearing,\n            topBearing: topBearing\n        };\n    }\n    /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */ get cbox() {\n        return this._getCBox();\n    }\n    /**\n   * The glyph’s bounding box, i.e. the rectangle that encloses the\n   * glyph outline as tightly as possible.\n   * @type {BBox}\n   */ get bbox() {\n        return this._getBBox();\n    }\n    /**\n   * A vector Path object representing the glyph outline.\n   * @type {Path}\n   */ get path() {\n        // Cache the path so we only decode it once\n        // Decoding is actually performed by subclasses\n        return this._getPath();\n    }\n    /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */ getScaledPath(size) {\n        let scale = 1 / this._font.unitsPerEm * size;\n        return this.path.scale(scale);\n    }\n    /**\n   * The glyph's advance width.\n   * @type {number}\n   */ get advanceWidth() {\n        return this._getMetrics().advanceWidth;\n    }\n    /**\n   * The glyph's advance height.\n   * @type {number}\n   */ get advanceHeight() {\n        return this._getMetrics().advanceHeight;\n    }\n    get ligatureCaretPositions() {}\n    _getName() {\n        let { post: post  } = this._font;\n        if (!post) return null;\n        switch(post.version){\n            case 1:\n                return (0, $85e16e40023cfb0f$export$2e2bcd8739ae039)[this.id];\n            case 2:\n                let id = post.glyphNameIndex[this.id];\n                if (id < (0, $85e16e40023cfb0f$export$2e2bcd8739ae039).length) return (0, $85e16e40023cfb0f$export$2e2bcd8739ae039)[id];\n                return post.names[id - (0, $85e16e40023cfb0f$export$2e2bcd8739ae039).length];\n            case 2.5:\n                return (0, $85e16e40023cfb0f$export$2e2bcd8739ae039)[this.id + post.offsets[this.id]];\n            case 4:\n                return String.fromCharCode(post.map[this.id]);\n        }\n    }\n    /**\n   * The glyph's name\n   * @type {string}\n   */ get name() {\n        return this._getName();\n    }\n    /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */ render(ctx, size) {\n        ctx.save();\n        let scale = 1 / this._font.head.unitsPerEm * size;\n        ctx.scale(scale, scale);\n        let fn = this.path.toFunction();\n        fn(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n    constructor(id, codePoints, font){\n        /**\n     * The glyph id in the font\n     * @type {number}\n     */ this.id = id;\n        /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */ this.codePoints = codePoints;\n        this._font = font;\n        // TODO: get this info from GDEF if available\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every((0, $gfJaN$unicodeproperties.isMark));\n        this.isLigature = this.codePoints.length > 1;\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"cbox\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"path\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"advanceWidth\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"advanceHeight\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0e4f52d7996e478b$export$2e2bcd8739ae039.prototype, \"name\", null);\n\n\n\n\n\n// The header for both simple and composite glyphs\nlet $f680320fa07ef53d$var$GlyfHeader = new $gfJaN$restructure.Struct({\n    numberOfContours: $gfJaN$restructure.int16,\n    xMin: $gfJaN$restructure.int16,\n    yMin: $gfJaN$restructure.int16,\n    xMax: $gfJaN$restructure.int16,\n    yMax: $gfJaN$restructure.int16\n});\n// Flags for simple glyphs\nconst $f680320fa07ef53d$var$ON_CURVE = 1;\nconst $f680320fa07ef53d$var$X_SHORT_VECTOR = 2;\nconst $f680320fa07ef53d$var$Y_SHORT_VECTOR = 4;\nconst $f680320fa07ef53d$var$REPEAT = 8;\nconst $f680320fa07ef53d$var$SAME_X = 16;\nconst $f680320fa07ef53d$var$SAME_Y = 32;\n// Flags for composite glyphs\nconst $f680320fa07ef53d$var$ARG_1_AND_2_ARE_WORDS = 1;\nconst $f680320fa07ef53d$var$ARGS_ARE_XY_VALUES = 2;\nconst $f680320fa07ef53d$var$ROUND_XY_TO_GRID = 4;\nconst $f680320fa07ef53d$var$WE_HAVE_A_SCALE = 8;\nconst $f680320fa07ef53d$var$MORE_COMPONENTS = 32;\nconst $f680320fa07ef53d$var$WE_HAVE_AN_X_AND_Y_SCALE = 64;\nconst $f680320fa07ef53d$var$WE_HAVE_A_TWO_BY_TWO = 128;\nconst $f680320fa07ef53d$var$WE_HAVE_INSTRUCTIONS = 256;\nconst $f680320fa07ef53d$var$USE_MY_METRICS = 512;\nconst $f680320fa07ef53d$var$OVERLAP_COMPOUND = 1024;\nconst $f680320fa07ef53d$var$SCALED_COMPONENT_OFFSET = 2048;\nconst $f680320fa07ef53d$var$UNSCALED_COMPONENT_OFFSET = 4096;\nclass $f680320fa07ef53d$export$baf26146a414f24a {\n    copy() {\n        return new $f680320fa07ef53d$export$baf26146a414f24a(this.onCurve, this.endContour, this.x, this.y);\n    }\n    constructor(onCurve, endContour, x = 0, y = 0){\n        this.onCurve = onCurve;\n        this.endContour = endContour;\n        this.x = x;\n        this.y = y;\n    }\n}\n// Represents a component in a composite glyph\nclass $f680320fa07ef53d$var$Component {\n    constructor(glyphID, dx, dy){\n        this.glyphID = glyphID;\n        this.dx = dx;\n        this.dy = dy;\n        this.pos = 0;\n        this.scaleX = this.scaleY = 1;\n        this.scale01 = this.scale10 = 0;\n    }\n}\nclass $f680320fa07ef53d$export$2e2bcd8739ae039 extends (0, $0e4f52d7996e478b$export$2e2bcd8739ae039) {\n    // Parses just the glyph header and returns the bounding box\n    _getCBox(internal) {\n        // We need to decode the glyph if variation processing is requested,\n        // so it's easier just to recompute the path's cbox after decoding.\n        if (this._font._variationProcessor && !internal) return this.path.cbox;\n        let stream = this._font._getTableStream(\"glyf\");\n        stream.pos += this._font.loca.offsets[this.id];\n        let glyph = $f680320fa07ef53d$var$GlyfHeader.decode(stream);\n        let cbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039)(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n        return Object.freeze(cbox);\n    }\n    // Parses a single glyph coordinate\n    _parseGlyphCoord(stream, prev, short, same) {\n        if (short) {\n            var val = stream.readUInt8();\n            if (!same) val = -val;\n            val += prev;\n        } else if (same) var val = prev;\n        else var val = prev + stream.readInt16BE();\n        return val;\n    }\n    // Decodes the glyph data into points for simple glyphs,\n    // or components for composite glyphs\n    _decode() {\n        let glyfPos = this._font.loca.offsets[this.id];\n        let nextPos = this._font.loca.offsets[this.id + 1];\n        // Nothing to do if there is no data for this glyph\n        if (glyfPos === nextPos) return null;\n        let stream = this._font._getTableStream(\"glyf\");\n        stream.pos += glyfPos;\n        let startPos = stream.pos;\n        let glyph = $f680320fa07ef53d$var$GlyfHeader.decode(stream);\n        if (glyph.numberOfContours > 0) this._decodeSimple(glyph, stream);\n        else if (glyph.numberOfContours < 0) this._decodeComposite(glyph, stream, startPos);\n        return glyph;\n    }\n    _decodeSimple(glyph, stream) {\n        // this is a simple glyph\n        glyph.points = [];\n        let endPtsOfContours = new $gfJaN$restructure.Array($gfJaN$restructure.uint16, glyph.numberOfContours).decode(stream);\n        glyph.instructions = new $gfJaN$restructure.Array($gfJaN$restructure.uint8, $gfJaN$restructure.uint16).decode(stream);\n        let flags = [];\n        let numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n        while(flags.length < numCoords){\n            var flag = stream.readUInt8();\n            flags.push(flag);\n            // check for repeat flag\n            if (flag & $f680320fa07ef53d$var$REPEAT) {\n                let count = stream.readUInt8();\n                for(let j = 0; j < count; j++)flags.push(flag);\n            }\n        }\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            let point = new $f680320fa07ef53d$export$baf26146a414f24a(!!(flag & $f680320fa07ef53d$var$ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n            glyph.points.push(point);\n        }\n        let px = 0;\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & $f680320fa07ef53d$var$X_SHORT_VECTOR, flag & $f680320fa07ef53d$var$SAME_X);\n        }\n        let py = 0;\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & $f680320fa07ef53d$var$Y_SHORT_VECTOR, flag & $f680320fa07ef53d$var$SAME_Y);\n        }\n        if (this._font._variationProcessor) {\n            let points = glyph.points.slice();\n            points.push(...this._getPhantomPoints(glyph));\n            this._font._variationProcessor.transformPoints(this.id, points);\n            glyph.phantomPoints = points.slice(-4);\n        }\n        return;\n    }\n    _decodeComposite(glyph, stream, offset = 0) {\n        // this is a composite glyph\n        glyph.components = [];\n        let haveInstructions = false;\n        let flags = $f680320fa07ef53d$var$MORE_COMPONENTS;\n        while(flags & $f680320fa07ef53d$var$MORE_COMPONENTS){\n            flags = stream.readUInt16BE();\n            let gPos = stream.pos - offset;\n            let glyphID = stream.readUInt16BE();\n            if (!haveInstructions) haveInstructions = (flags & $f680320fa07ef53d$var$WE_HAVE_INSTRUCTIONS) !== 0;\n            if (flags & $f680320fa07ef53d$var$ARG_1_AND_2_ARE_WORDS) {\n                var dx = stream.readInt16BE();\n                var dy = stream.readInt16BE();\n            } else {\n                var dx = stream.readInt8();\n                var dy = stream.readInt8();\n            }\n            var component = new $f680320fa07ef53d$var$Component(glyphID, dx, dy);\n            component.pos = gPos;\n            if (flags & $f680320fa07ef53d$var$WE_HAVE_A_SCALE) // fixed number with 14 bits of fraction\n            component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            else if (flags & $f680320fa07ef53d$var$WE_HAVE_AN_X_AND_Y_SCALE) {\n                component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            } else if (flags & $f680320fa07ef53d$var$WE_HAVE_A_TWO_BY_TWO) {\n                component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            }\n            glyph.components.push(component);\n        }\n        if (this._font._variationProcessor) {\n            let points = [];\n            for(let j = 0; j < glyph.components.length; j++){\n                var component = glyph.components[j];\n                points.push(new $f680320fa07ef53d$export$baf26146a414f24a(true, true, component.dx, component.dy));\n            }\n            points.push(...this._getPhantomPoints(glyph));\n            this._font._variationProcessor.transformPoints(this.id, points);\n            glyph.phantomPoints = points.splice(-4, 4);\n            for(let i = 0; i < points.length; i++){\n                let point = points[i];\n                glyph.components[i].dx = point.x;\n                glyph.components[i].dy = point.y;\n            }\n        }\n        return haveInstructions;\n    }\n    _getPhantomPoints(glyph) {\n        let cbox = this._getCBox(true);\n        if (this._metrics == null) this._metrics = (0, $0e4f52d7996e478b$export$2e2bcd8739ae039).prototype._getMetrics.call(this, cbox);\n        let { advanceWidth: advanceWidth , advanceHeight: advanceHeight , leftBearing: leftBearing , topBearing: topBearing  } = this._metrics;\n        return [\n            new $f680320fa07ef53d$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing, 0),\n            new $f680320fa07ef53d$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing + advanceWidth, 0),\n            new $f680320fa07ef53d$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing),\n            new $f680320fa07ef53d$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing + advanceHeight)\n        ];\n    }\n    // Decodes font data, resolves composite glyphs, and returns an array of contours\n    _getContours() {\n        let glyph = this._decode();\n        if (!glyph) return [];\n        let points = [];\n        if (glyph.numberOfContours < 0) // resolve composite glyphs\n        for (let component of glyph.components){\n            let contours = this._font.getGlyph(component.glyphID)._getContours();\n            for(let i = 0; i < contours.length; i++){\n                let contour = contours[i];\n                for(let j = 0; j < contour.length; j++){\n                    let point = contour[j];\n                    let x = point.x * component.scaleX + point.y * component.scale01 + component.dx;\n                    let y = point.y * component.scaleY + point.x * component.scale10 + component.dy;\n                    points.push(new $f680320fa07ef53d$export$baf26146a414f24a(point.onCurve, point.endContour, x, y));\n                }\n            }\n        }\n        else points = glyph.points || [];\n        // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n        if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n            this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n            this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n            this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n            this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n        }\n        let contours = [];\n        let cur = [];\n        for(let k = 0; k < points.length; k++){\n            var point = points[k];\n            cur.push(point);\n            if (point.endContour) {\n                contours.push(cur);\n                cur = [];\n            }\n        }\n        return contours;\n    }\n    _getMetrics() {\n        if (this._metrics) return this._metrics;\n        let cbox = this._getCBox(true);\n        super._getMetrics(cbox);\n        if (this._font._variationProcessor && !this._font.HVAR) // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n        this.path;\n        return this._metrics;\n    }\n    // Converts contours to a Path object that can be rendered\n    _getPath() {\n        let contours = this._getContours();\n        let path = new (0, $67ee4828d81adb28$export$2e2bcd8739ae039);\n        for(let i = 0; i < contours.length; i++){\n            let contour = contours[i];\n            let firstPt = contour[0];\n            let lastPt = contour[contour.length - 1];\n            let start = 0;\n            if (firstPt.onCurve) {\n                // The first point will be consumed by the moveTo command, so skip in the loop\n                var curvePt = null;\n                start = 1;\n            } else {\n                if (lastPt.onCurve) // Start at the last point if the first point is off curve and the last point is on curve\n                firstPt = lastPt;\n                else // Start at the middle if both the first and last points are off curve\n                firstPt = new $f680320fa07ef53d$export$baf26146a414f24a(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n                var curvePt = firstPt;\n            }\n            path.moveTo(firstPt.x, firstPt.y);\n            for(let j = start; j < contour.length; j++){\n                let pt = contour[j];\n                let prevPt = j === 0 ? firstPt : contour[j - 1];\n                if (prevPt.onCurve && pt.onCurve) path.lineTo(pt.x, pt.y);\n                else if (prevPt.onCurve && !pt.onCurve) var curvePt = pt;\n                else if (!prevPt.onCurve && !pt.onCurve) {\n                    let midX = (prevPt.x + pt.x) / 2;\n                    let midY = (prevPt.y + pt.y) / 2;\n                    path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n                    var curvePt = pt;\n                } else if (!prevPt.onCurve && pt.onCurve) {\n                    path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                    var curvePt = null;\n                } else throw new Error(\"Unknown TTF path state\");\n            }\n            // Connect the first and last points\n            if (curvePt) path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            path.closePath();\n        }\n        return path;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"TTF\");\n    }\n}\n\n\n\n\n\nclass $7ee0705195f3b047$export$2e2bcd8739ae039 extends (0, $0e4f52d7996e478b$export$2e2bcd8739ae039) {\n    _getName() {\n        if (this._font.CFF2) return super._getName();\n        return this._font[\"CFF \"].getGlyphName(this.id);\n    }\n    bias(s) {\n        if (s.length < 1240) return 107;\n        else if (s.length < 33900) return 1131;\n        else return 32768;\n    }\n    _getPath() {\n        let cff = this._font.CFF2 || this._font[\"CFF \"];\n        let { stream: stream  } = cff;\n        let str = cff.topDict.CharStrings[this.id];\n        let end = str.offset + str.length;\n        stream.pos = str.offset;\n        let path = new (0, $67ee4828d81adb28$export$2e2bcd8739ae039);\n        let stack = [];\n        let trans = [];\n        let width = null;\n        let nStems = 0;\n        let x1 = 0, y1 = 0;\n        let usedGsubrs;\n        let usedSubrs;\n        let open = false;\n        this._usedGsubrs = usedGsubrs = {};\n        this._usedSubrs = usedSubrs = {};\n        let gsubrs = cff.globalSubrIndex || [];\n        let gsubrsBias = this.bias(gsubrs);\n        let privateDict = cff.privateDictForGlyph(this.id) || {};\n        let subrs = privateDict.Subrs || [];\n        let subrsBias = this.bias(subrs);\n        let vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n        let vsindex = privateDict.vsindex;\n        let variationProcessor = this._font._variationProcessor;\n        function checkWidth() {\n            if (width == null) width = stack.shift() + privateDict.nominalWidthX;\n        }\n        function parseStems() {\n            if (stack.length % 2 !== 0) checkWidth();\n            nStems += stack.length >> 1;\n            return stack.length = 0;\n        }\n        function moveTo(x, y) {\n            if (open) path.closePath();\n            path.moveTo(x, y);\n            open = true;\n        }\n        let parse = function() {\n            while(stream.pos < end){\n                let op = stream.readUInt8();\n                if (op < 32) {\n                    let index, subr, phase;\n                    switch(op){\n                        case 1:\n                        case 3:\n                        case 18:\n                        case 23:\n                            parseStems();\n                            break;\n                        case 4:\n                            if (stack.length > 1) checkWidth();\n                            y1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 5:\n                            while(stack.length >= 2){\n                                x1 += stack.shift();\n                                y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                            }\n                            break;\n                        case 6:\n                        case 7:\n                            phase = op === 6;\n                            while(stack.length >= 1){\n                                if (phase) x1 += stack.shift();\n                                else y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                                phase = !phase;\n                            }\n                            break;\n                        case 8:\n                            while(stack.length > 0){\n                                var c1x = x1 + stack.shift();\n                                var c1y = y1 + stack.shift();\n                                var c2x = c1x + stack.shift();\n                                var c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 10:\n                            index = stack.pop() + subrsBias;\n                            subr = subrs[index];\n                            if (subr) {\n                                usedSubrs[index] = true;\n                                var p = stream.pos;\n                                var e = end;\n                                stream.pos = subr.offset;\n                                end = subr.offset + subr.length;\n                                parse();\n                                stream.pos = p;\n                                end = e;\n                            }\n                            break;\n                        case 11:\n                            if (cff.version >= 2) break;\n                            return;\n                        case 14:\n                            if (cff.version >= 2) break;\n                            if (stack.length > 0) checkWidth();\n                            if (open) {\n                                path.closePath();\n                                open = false;\n                            }\n                            break;\n                        case 15:\n                            if (cff.version < 2) throw new Error(\"vsindex operator not supported in CFF v1\");\n                            vsindex = stack.pop();\n                            break;\n                        case 16:\n                            {\n                                if (cff.version < 2) throw new Error(\"blend operator not supported in CFF v1\");\n                                if (!variationProcessor) throw new Error(\"blend operator in non-variation font\");\n                                let blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                                let numBlends = stack.pop();\n                                let numOperands = numBlends * blendVector.length;\n                                let delta = stack.length - numOperands;\n                                let base = delta - numBlends;\n                                for(let i = 0; i < numBlends; i++){\n                                    let sum = stack[base + i];\n                                    for(let j = 0; j < blendVector.length; j++)sum += blendVector[j] * stack[delta++];\n                                    stack[base + i] = sum;\n                                }\n                                while(numOperands--)stack.pop();\n                                break;\n                            }\n                        case 19:\n                        case 20:\n                            parseStems();\n                            stream.pos += nStems + 7 >> 3;\n                            break;\n                        case 21:\n                            if (stack.length > 2) checkWidth();\n                            x1 += stack.shift();\n                            y1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 22:\n                            if (stack.length > 1) checkWidth();\n                            x1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 24:\n                            while(stack.length >= 8){\n                                var c1x = x1 + stack.shift();\n                                var c1y = y1 + stack.shift();\n                                var c2x = c1x + stack.shift();\n                                var c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            x1 += stack.shift();\n                            y1 += stack.shift();\n                            path.lineTo(x1, y1);\n                            break;\n                        case 25:\n                            while(stack.length >= 8){\n                                x1 += stack.shift();\n                                y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                            }\n                            var c1x = x1 + stack.shift();\n                            var c1y = y1 + stack.shift();\n                            var c2x = c1x + stack.shift();\n                            var c2y = c1y + stack.shift();\n                            x1 = c2x + stack.shift();\n                            y1 = c2y + stack.shift();\n                            path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            break;\n                        case 26:\n                            if (stack.length % 2) x1 += stack.shift();\n                            while(stack.length >= 4){\n                                c1x = x1;\n                                c1y = y1 + stack.shift();\n                                c2x = c1x + stack.shift();\n                                c2y = c1y + stack.shift();\n                                x1 = c2x;\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 27:\n                            if (stack.length % 2) y1 += stack.shift();\n                            while(stack.length >= 4){\n                                c1x = x1 + stack.shift();\n                                c1y = y1;\n                                c2x = c1x + stack.shift();\n                                c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y;\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 28:\n                            stack.push(stream.readInt16BE());\n                            break;\n                        case 29:\n                            index = stack.pop() + gsubrsBias;\n                            subr = gsubrs[index];\n                            if (subr) {\n                                usedGsubrs[index] = true;\n                                var p = stream.pos;\n                                var e = end;\n                                stream.pos = subr.offset;\n                                end = subr.offset + subr.length;\n                                parse();\n                                stream.pos = p;\n                                end = e;\n                            }\n                            break;\n                        case 30:\n                        case 31:\n                            phase = op === 31;\n                            while(stack.length >= 4){\n                                if (phase) {\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1;\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    y1 = c2y + stack.shift();\n                                    x1 = c2x + (stack.length === 1 ? stack.shift() : 0);\n                                } else {\n                                    c1x = x1;\n                                    c1y = y1 + stack.shift();\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    x1 = c2x + stack.shift();\n                                    y1 = c2y + (stack.length === 1 ? stack.shift() : 0);\n                                }\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                                phase = !phase;\n                            }\n                            break;\n                        case 12:\n                            op = stream.readUInt8();\n                            switch(op){\n                                case 3:\n                                    let a = stack.pop();\n                                    let b = stack.pop();\n                                    stack.push(a && b ? 1 : 0);\n                                    break;\n                                case 4:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a || b ? 1 : 0);\n                                    break;\n                                case 5:\n                                    a = stack.pop();\n                                    stack.push(a ? 0 : 1);\n                                    break;\n                                case 9:\n                                    a = stack.pop();\n                                    stack.push(Math.abs(a));\n                                    break;\n                                case 10:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a + b);\n                                    break;\n                                case 11:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a - b);\n                                    break;\n                                case 12:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a / b);\n                                    break;\n                                case 14:\n                                    a = stack.pop();\n                                    stack.push(-a);\n                                    break;\n                                case 15:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a === b ? 1 : 0);\n                                    break;\n                                case 18:\n                                    stack.pop();\n                                    break;\n                                case 20:\n                                    let val = stack.pop();\n                                    let idx = stack.pop();\n                                    trans[idx] = val;\n                                    break;\n                                case 21:\n                                    idx = stack.pop();\n                                    stack.push(trans[idx] || 0);\n                                    break;\n                                case 22:\n                                    let s1 = stack.pop();\n                                    let s2 = stack.pop();\n                                    let v1 = stack.pop();\n                                    let v2 = stack.pop();\n                                    stack.push(v1 <= v2 ? s1 : s2);\n                                    break;\n                                case 23:\n                                    stack.push(Math.random());\n                                    break;\n                                case 24:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a * b);\n                                    break;\n                                case 26:\n                                    a = stack.pop();\n                                    stack.push(Math.sqrt(a));\n                                    break;\n                                case 27:\n                                    a = stack.pop();\n                                    stack.push(a, a);\n                                    break;\n                                case 28:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(b, a);\n                                    break;\n                                case 29:\n                                    idx = stack.pop();\n                                    if (idx < 0) idx = 0;\n                                    else if (idx > stack.length - 1) idx = stack.length - 1;\n                                    stack.push(stack[idx]);\n                                    break;\n                                case 30:\n                                    let n = stack.pop();\n                                    let j = stack.pop();\n                                    if (j >= 0) while(j > 0){\n                                        var t = stack[n - 1];\n                                        for(let i = n - 2; i >= 0; i--)stack[i + 1] = stack[i];\n                                        stack[0] = t;\n                                        j--;\n                                    }\n                                    else while(j < 0){\n                                        var t = stack[0];\n                                        for(let i = 0; i <= n; i++)stack[i] = stack[i + 1];\n                                        stack[n - 1] = t;\n                                        j++;\n                                    }\n                                    break;\n                                case 34:\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1;\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    let c3x = c2x + stack.shift();\n                                    let c3y = c2y;\n                                    let c4x = c3x + stack.shift();\n                                    let c4y = c3y;\n                                    let c5x = c4x + stack.shift();\n                                    let c5y = c4y;\n                                    let c6x = c5x + stack.shift();\n                                    let c6y = c5y;\n                                    x1 = c6x;\n                                    y1 = c6y;\n                                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                                    break;\n                                case 35:\n                                    let pts = [];\n                                    for(let i = 0; i <= 5; i++){\n                                        x1 += stack.shift();\n                                        y1 += stack.shift();\n                                        pts.push(x1, y1);\n                                    }\n                                    path.bezierCurveTo(...pts.slice(0, 6));\n                                    path.bezierCurveTo(...pts.slice(6));\n                                    stack.shift(); // fd\n                                    break;\n                                case 36:\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1 + stack.shift();\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    c3x = c2x + stack.shift();\n                                    c3y = c2y;\n                                    c4x = c3x + stack.shift();\n                                    c4y = c3y;\n                                    c5x = c4x + stack.shift();\n                                    c5y = c4y + stack.shift();\n                                    c6x = c5x + stack.shift();\n                                    c6y = c5y;\n                                    x1 = c6x;\n                                    y1 = c6y;\n                                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                                    break;\n                                case 37:\n                                    let startx = x1;\n                                    let starty = y1;\n                                    pts = [];\n                                    for(let i1 = 0; i1 <= 4; i1++){\n                                        x1 += stack.shift();\n                                        y1 += stack.shift();\n                                        pts.push(x1, y1);\n                                    }\n                                    if (Math.abs(x1 - startx) > Math.abs(y1 - starty)) {\n                                        x1 += stack.shift();\n                                        y1 = starty;\n                                    } else {\n                                        x1 = startx;\n                                        y1 += stack.shift();\n                                    }\n                                    pts.push(x1, y1);\n                                    path.bezierCurveTo(...pts.slice(0, 6));\n                                    path.bezierCurveTo(...pts.slice(6));\n                                    break;\n                                default:\n                                    throw new Error(`Unknown op: 12 ${op}`);\n                            }\n                            break;\n                        default:\n                            throw new Error(`Unknown op: ${op}`);\n                    }\n                } else if (op < 247) stack.push(op - 139);\n                else if (op < 251) {\n                    var b1 = stream.readUInt8();\n                    stack.push((op - 247) * 256 + b1 + 108);\n                } else if (op < 255) {\n                    var b1 = stream.readUInt8();\n                    stack.push(-(op - 251) * 256 - b1 - 108);\n                } else stack.push(stream.readInt32BE() / 65536);\n            }\n        };\n        parse();\n        if (open) path.closePath();\n        return path;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"CFF\");\n    }\n}\n\n\n\n\n\nlet $55855d6d316b015e$var$SBIXImage = new $gfJaN$restructure.Struct({\n    originX: $gfJaN$restructure.uint16,\n    originY: $gfJaN$restructure.uint16,\n    type: new $gfJaN$restructure.String(4),\n    data: new $gfJaN$restructure.Buffer((t)=>t.parent.buflen - t._currentOffset)\n});\nclass $55855d6d316b015e$export$2e2bcd8739ae039 extends (0, $f680320fa07ef53d$export$2e2bcd8739ae039) {\n    /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */ getImageForSize(size) {\n        for(let i = 0; i < this._font.sbix.imageTables.length; i++){\n            var table = this._font.sbix.imageTables[i];\n            if (table.ppem >= size) break;\n        }\n        let offsets = table.imageOffsets;\n        let start = offsets[this.id];\n        let end = offsets[this.id + 1];\n        if (start === end) return null;\n        this._font.stream.pos = start;\n        return $55855d6d316b015e$var$SBIXImage.decode(this._font.stream, {\n            buflen: end - start\n        });\n    }\n    render(ctx, size) {\n        let img = this.getImageForSize(size);\n        if (img != null) {\n            let scale = size / this._font.unitsPerEm;\n            ctx.image(img.data, {\n                height: size,\n                x: img.originX,\n                y: (this.bbox.minY - img.originY) * scale\n            });\n        }\n        if (this._font.sbix.flags.renderOutlines) super.render(ctx, size);\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"SBIX\");\n    }\n}\n\n\n\n\n\nclass $42d9dbd2de9ee2d8$var$COLRLayer {\n    constructor(glyph, color){\n        this.glyph = glyph;\n        this.color = color;\n    }\n}\nclass $42d9dbd2de9ee2d8$export$2e2bcd8739ae039 extends (0, $0e4f52d7996e478b$export$2e2bcd8739ae039) {\n    _getBBox() {\n        let bbox = new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039);\n        for(let i = 0; i < this.layers.length; i++){\n            let layer = this.layers[i];\n            let b = layer.glyph.bbox;\n            bbox.addPoint(b.minX, b.minY);\n            bbox.addPoint(b.maxX, b.maxY);\n        }\n        return bbox;\n    }\n    /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */ get layers() {\n        let cpal = this._font.CPAL;\n        let colr = this._font.COLR;\n        let low = 0;\n        let high = colr.baseGlyphRecord.length - 1;\n        while(low <= high){\n            let mid = low + high >> 1;\n            var rec = colr.baseGlyphRecord[mid];\n            if (this.id < rec.gid) high = mid - 1;\n            else if (this.id > rec.gid) low = mid + 1;\n            else {\n                var baseLayer = rec;\n                break;\n            }\n        }\n        // if base glyph not found in COLR table,\n        // default to normal glyph from glyf or CFF\n        if (baseLayer == null) {\n            var g = this._font._getBaseGlyph(this.id);\n            var color = {\n                red: 0,\n                green: 0,\n                blue: 0,\n                alpha: 255\n            };\n            return [\n                new $42d9dbd2de9ee2d8$var$COLRLayer(g, color)\n            ];\n        }\n        // otherwise, return an array of all the layers\n        let layers = [];\n        for(let i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++){\n            var rec = colr.layerRecords[i];\n            var color = cpal.colorRecords[rec.paletteIndex];\n            var g = this._font._getBaseGlyph(rec.gid);\n            layers.push(new $42d9dbd2de9ee2d8$var$COLRLayer(g, color));\n        }\n        return layers;\n    }\n    render(ctx, size) {\n        for (let { glyph: glyph , color: color  } of this.layers){\n            ctx.fillColor([\n                color.red,\n                color.green,\n                color.blue\n            ], color.alpha / 255 * 100);\n            glyph.render(ctx, size);\n        }\n        return;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"COLR\");\n    }\n}\n\n\nconst $7586bb9ea67c41d8$var$TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nconst $7586bb9ea67c41d8$var$TUPLE_COUNT_MASK = 0x0fff;\nconst $7586bb9ea67c41d8$var$EMBEDDED_TUPLE_COORD = 0x8000;\nconst $7586bb9ea67c41d8$var$INTERMEDIATE_TUPLE = 0x4000;\nconst $7586bb9ea67c41d8$var$PRIVATE_POINT_NUMBERS = 0x2000;\nconst $7586bb9ea67c41d8$var$TUPLE_INDEX_MASK = 0x0fff;\nconst $7586bb9ea67c41d8$var$POINTS_ARE_WORDS = 0x80;\nconst $7586bb9ea67c41d8$var$POINT_RUN_COUNT_MASK = 0x7f;\nconst $7586bb9ea67c41d8$var$DELTAS_ARE_ZERO = 0x80;\nconst $7586bb9ea67c41d8$var$DELTAS_ARE_WORDS = 0x40;\nconst $7586bb9ea67c41d8$var$DELTA_RUN_COUNT_MASK = 0x3f;\nclass $7586bb9ea67c41d8$export$2e2bcd8739ae039 {\n    normalizeCoords(coords) {\n        // the default mapping is linear along each axis, in two segments:\n        // from the minValue to defaultValue, and from defaultValue to maxValue.\n        let normalized = [];\n        for(var i = 0; i < this.font.fvar.axis.length; i++){\n            let axis = this.font.fvar.axis[i];\n            if (coords[i] < axis.defaultValue) normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n            else normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n        }\n        // if there is an avar table, the normalized value is calculated\n        // by interpolating between the two nearest mapped values.\n        if (this.font.avar) for(var i = 0; i < this.font.avar.segment.length; i++){\n            let segment = this.font.avar.segment[i];\n            for(let j = 0; j < segment.correspondence.length; j++){\n                let pair = segment.correspondence[j];\n                if (j >= 1 && normalized[i] < pair.fromCoord) {\n                    let prev = segment.correspondence[j - 1];\n                    normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n                    break;\n                }\n            }\n        }\n        return normalized;\n    }\n    transformPoints(gid, glyphPoints) {\n        if (!this.font.fvar || !this.font.gvar) return;\n        let { gvar: gvar  } = this.font;\n        if (gid >= gvar.glyphCount) return;\n        let offset = gvar.offsets[gid];\n        if (offset === gvar.offsets[gid + 1]) return;\n        // Read the gvar data for this glyph\n        let { stream: stream  } = this.font;\n        stream.pos = offset;\n        if (stream.pos >= stream.length) return;\n        let tupleCount = stream.readUInt16BE();\n        let offsetToData = offset + stream.readUInt16BE();\n        if (tupleCount & $7586bb9ea67c41d8$var$TUPLES_SHARE_POINT_NUMBERS) {\n            var here = stream.pos;\n            stream.pos = offsetToData;\n            var sharedPoints = this.decodePoints();\n            offsetToData = stream.pos;\n            stream.pos = here;\n        }\n        let origPoints = glyphPoints.map((pt)=>pt.copy());\n        tupleCount &= $7586bb9ea67c41d8$var$TUPLE_COUNT_MASK;\n        for(let i = 0; i < tupleCount; i++){\n            let tupleDataSize = stream.readUInt16BE();\n            let tupleIndex = stream.readUInt16BE();\n            if (tupleIndex & $7586bb9ea67c41d8$var$EMBEDDED_TUPLE_COORD) {\n                var tupleCoords = [];\n                for(let a = 0; a < gvar.axisCount; a++)tupleCoords.push(stream.readInt16BE() / 16384);\n            } else {\n                if ((tupleIndex & $7586bb9ea67c41d8$var$TUPLE_INDEX_MASK) >= gvar.globalCoordCount) throw new Error(\"Invalid gvar table\");\n                var tupleCoords = gvar.globalCoords[tupleIndex & $7586bb9ea67c41d8$var$TUPLE_INDEX_MASK];\n            }\n            if (tupleIndex & $7586bb9ea67c41d8$var$INTERMEDIATE_TUPLE) {\n                var startCoords = [];\n                for(let a = 0; a < gvar.axisCount; a++)startCoords.push(stream.readInt16BE() / 16384);\n                var endCoords = [];\n                for(let a1 = 0; a1 < gvar.axisCount; a1++)endCoords.push(stream.readInt16BE() / 16384);\n            }\n            // Get the factor at which to apply this tuple\n            let factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n            if (factor === 0) {\n                offsetToData += tupleDataSize;\n                continue;\n            }\n            var here = stream.pos;\n            stream.pos = offsetToData;\n            if (tupleIndex & $7586bb9ea67c41d8$var$PRIVATE_POINT_NUMBERS) var points = this.decodePoints();\n            else var points = sharedPoints;\n            // points.length = 0 means there are deltas for all points\n            let nPoints = points.length === 0 ? glyphPoints.length : points.length;\n            let xDeltas = this.decodeDeltas(nPoints);\n            let yDeltas = this.decodeDeltas(nPoints);\n            if (points.length === 0) for(let i = 0; i < glyphPoints.length; i++){\n                var point = glyphPoints[i];\n                point.x += Math.round(xDeltas[i] * factor);\n                point.y += Math.round(yDeltas[i] * factor);\n            }\n            else {\n                let outPoints = origPoints.map((pt)=>pt.copy());\n                let hasDelta = glyphPoints.map(()=>false);\n                for(let i = 0; i < points.length; i++){\n                    let idx = points[i];\n                    if (idx < glyphPoints.length) {\n                        let point = outPoints[idx];\n                        hasDelta[idx] = true;\n                        point.x += Math.round(xDeltas[i] * factor);\n                        point.y += Math.round(yDeltas[i] * factor);\n                    }\n                }\n                this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n                for(let i1 = 0; i1 < glyphPoints.length; i1++){\n                    let deltaX = outPoints[i1].x - origPoints[i1].x;\n                    let deltaY = outPoints[i1].y - origPoints[i1].y;\n                    glyphPoints[i1].x += deltaX;\n                    glyphPoints[i1].y += deltaY;\n                }\n            }\n            offsetToData += tupleDataSize;\n            stream.pos = here;\n        }\n    }\n    decodePoints() {\n        let stream = this.font.stream;\n        let count = stream.readUInt8();\n        if (count & $7586bb9ea67c41d8$var$POINTS_ARE_WORDS) count = (count & $7586bb9ea67c41d8$var$POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n        let points = new Uint16Array(count);\n        let i = 0;\n        let point = 0;\n        while(i < count){\n            let run = stream.readUInt8();\n            let runCount = (run & $7586bb9ea67c41d8$var$POINT_RUN_COUNT_MASK) + 1;\n            let fn = run & $7586bb9ea67c41d8$var$POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n            for(let j = 0; j < runCount && i < count; j++){\n                point += fn.call(stream);\n                points[i++] = point;\n            }\n        }\n        return points;\n    }\n    decodeDeltas(count) {\n        let stream = this.font.stream;\n        let i = 0;\n        let deltas = new Int16Array(count);\n        while(i < count){\n            let run = stream.readUInt8();\n            let runCount = (run & $7586bb9ea67c41d8$var$DELTA_RUN_COUNT_MASK) + 1;\n            if (run & $7586bb9ea67c41d8$var$DELTAS_ARE_ZERO) i += runCount;\n            else {\n                let fn = run & $7586bb9ea67c41d8$var$DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n                for(let j = 0; j < runCount && i < count; j++)deltas[i++] = fn.call(stream);\n            }\n        }\n        return deltas;\n    }\n    tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n        let normalized = this.normalizedCoords;\n        let { gvar: gvar  } = this.font;\n        let factor = 1;\n        for(let i = 0; i < gvar.axisCount; i++){\n            if (tupleCoords[i] === 0) continue;\n            if (normalized[i] === 0) return 0;\n            if ((tupleIndex & $7586bb9ea67c41d8$var$INTERMEDIATE_TUPLE) === 0) {\n                if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) return 0;\n                factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n            } else {\n                if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) return 0;\n                else if (normalized[i] < tupleCoords[i]) factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n                else factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n            }\n        }\n        return factor;\n    }\n    // Interpolates points without delta values.\n    // Needed for the Ø and Q glyphs in Skia.\n    // Algorithm from Freetype.\n    interpolateMissingDeltas(points, inPoints, hasDelta) {\n        if (points.length === 0) return;\n        let point = 0;\n        while(point < points.length){\n            let firstPoint = point;\n            // find the end point of the contour\n            let endPoint = point;\n            let pt = points[endPoint];\n            while(!pt.endContour)pt = points[++endPoint];\n            // find the first point that has a delta\n            while(point <= endPoint && !hasDelta[point])point++;\n            if (point > endPoint) continue;\n            let firstDelta = point;\n            let curDelta = point;\n            point++;\n            while(point <= endPoint){\n                // find the next point with a delta, and interpolate intermediate points\n                if (hasDelta[point]) {\n                    this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n                    curDelta = point;\n                }\n                point++;\n            }\n            // shift contour if we only have a single delta\n            if (curDelta === firstDelta) this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n            else {\n                // otherwise, handle the remaining points at the end and beginning of the contour\n                this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n                if (firstDelta > 0) this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n            }\n            point = endPoint + 1;\n        }\n    }\n    deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n        if (p1 > p2) return;\n        let iterable = [\n            \"x\",\n            \"y\"\n        ];\n        for(let i = 0; i < iterable.length; i++){\n            let k = iterable[i];\n            if (inPoints[ref1][k] > inPoints[ref2][k]) {\n                var p = ref1;\n                ref1 = ref2;\n                ref2 = p;\n            }\n            let in1 = inPoints[ref1][k];\n            let in2 = inPoints[ref2][k];\n            let out1 = outPoints[ref1][k];\n            let out2 = outPoints[ref2][k];\n            // If the reference points have the same coordinate but different\n            // delta, inferred delta is zero.  Otherwise interpolate.\n            if (in1 !== in2 || out1 === out2) {\n                let scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n                for(let p = p1; p <= p2; p++){\n                    let out = inPoints[p][k];\n                    if (out <= in1) out += out1 - in1;\n                    else if (out >= in2) out += out2 - in2;\n                    else out = out1 + (out - in1) * scale;\n                    outPoints[p][k] = out;\n                }\n            }\n        }\n    }\n    deltaShift(p1, p2, ref, inPoints, outPoints) {\n        let deltaX = outPoints[ref].x - inPoints[ref].x;\n        let deltaY = outPoints[ref].y - inPoints[ref].y;\n        if (deltaX === 0 && deltaY === 0) return;\n        for(let p = p1; p <= p2; p++)if (p !== ref) {\n            outPoints[p].x += deltaX;\n            outPoints[p].y += deltaY;\n        }\n    }\n    getAdvanceAdjustment(gid, table) {\n        let outerIndex, innerIndex;\n        if (table.advanceWidthMapping) {\n            let idx = gid;\n            if (idx >= table.advanceWidthMapping.mapCount) idx = table.advanceWidthMapping.mapCount - 1;\n            let entryFormat = table.advanceWidthMapping.entryFormat;\n            ({ outerIndex: outerIndex , innerIndex: innerIndex  } = table.advanceWidthMapping.mapData[idx]);\n        } else {\n            outerIndex = 0;\n            innerIndex = gid;\n        }\n        return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n    }\n    // See pseudo code from `Font Variations Overview'\n    // in the OpenType specification.\n    getDelta(itemStore, outerIndex, innerIndex) {\n        if (outerIndex >= itemStore.itemVariationData.length) return 0;\n        let varData = itemStore.itemVariationData[outerIndex];\n        if (innerIndex >= varData.deltaSets.length) return 0;\n        let deltaSet = varData.deltaSets[innerIndex];\n        let blendVector = this.getBlendVector(itemStore, outerIndex);\n        let netAdjustment = 0;\n        for(let master = 0; master < varData.regionIndexCount; master++)netAdjustment += deltaSet.deltas[master] * blendVector[master];\n        return netAdjustment;\n    }\n    getBlendVector(itemStore, outerIndex) {\n        let varData = itemStore.itemVariationData[outerIndex];\n        if (this.blendVectors.has(varData)) return this.blendVectors.get(varData);\n        let normalizedCoords = this.normalizedCoords;\n        let blendVector = [];\n        // outer loop steps through master designs to be blended\n        for(let master = 0; master < varData.regionIndexCount; master++){\n            let scalar = 1;\n            let regionIndex = varData.regionIndexes[master];\n            let axes = itemStore.variationRegionList.variationRegions[regionIndex];\n            // inner loop steps through axes in this region\n            for(let j = 0; j < axes.length; j++){\n                let axis = axes[j];\n                let axisScalar;\n                // compute the scalar contribution of this axis\n                // ignore invalid ranges\n                if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) axisScalar = 1;\n                else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) axisScalar = 1;\n                else if (axis.peakCoord === 0) axisScalar = 1;\n                else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) axisScalar = 0;\n                else {\n                    if (normalizedCoords[j] === axis.peakCoord) axisScalar = 1;\n                    else if (normalizedCoords[j] < axis.peakCoord) axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n                    else axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n                }\n                // take product of all the axis scalars\n                scalar *= axisScalar;\n            }\n            blendVector[master] = scalar;\n        }\n        this.blendVectors.set(varData, blendVector);\n        return blendVector;\n    }\n    constructor(font, coords){\n        this.font = font;\n        this.normalizedCoords = this.normalizeCoords(coords);\n        this.blendVectors = new Map;\n    }\n}\n\n\n\n\nconst $a8ac370803cb82cf$var$resolved = Promise.resolve();\nclass $a8ac370803cb82cf$export$2e2bcd8739ae039 {\n    includeGlyph(glyph) {\n        if (typeof glyph === \"object\") glyph = glyph.id;\n        if (this.mapping[glyph] == null) {\n            this.glyphs.push(glyph);\n            this.mapping[glyph] = this.glyphs.length - 1;\n        }\n        return this.mapping[glyph];\n    }\n    constructor(font){\n        this.font = font;\n        this.glyphs = [];\n        this.mapping = {};\n        // always include the missing glyph\n        this.includeGlyph(0);\n    }\n}\n\n\n\n\n\n// Flags for simple glyphs\nconst $2784eedf0b35a048$var$ON_CURVE = 1;\nconst $2784eedf0b35a048$var$X_SHORT_VECTOR = 2;\nconst $2784eedf0b35a048$var$Y_SHORT_VECTOR = 4;\nconst $2784eedf0b35a048$var$REPEAT = 8;\nconst $2784eedf0b35a048$var$SAME_X = 16;\nconst $2784eedf0b35a048$var$SAME_Y = 32;\nclass $2784eedf0b35a048$var$Point {\n    static size(val) {\n        return val >= 0 && val <= 255 ? 1 : 2;\n    }\n    static encode(stream, value) {\n        if (value >= 0 && value <= 255) stream.writeUInt8(value);\n        else stream.writeInt16BE(value);\n    }\n}\nlet $2784eedf0b35a048$var$Glyf = new $gfJaN$restructure.Struct({\n    numberOfContours: $gfJaN$restructure.int16,\n    xMin: $gfJaN$restructure.int16,\n    yMin: $gfJaN$restructure.int16,\n    xMax: $gfJaN$restructure.int16,\n    yMax: $gfJaN$restructure.int16,\n    endPtsOfContours: new $gfJaN$restructure.Array($gfJaN$restructure.uint16, \"numberOfContours\"),\n    instructions: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, $gfJaN$restructure.uint16),\n    flags: new $gfJaN$restructure.Array($gfJaN$restructure.uint8, 0),\n    xPoints: new $gfJaN$restructure.Array($2784eedf0b35a048$var$Point, 0),\n    yPoints: new $gfJaN$restructure.Array($2784eedf0b35a048$var$Point, 0)\n});\nclass $2784eedf0b35a048$export$2e2bcd8739ae039 {\n    encodeSimple(path, instructions = []) {\n        let endPtsOfContours = [];\n        let xPoints = [];\n        let yPoints = [];\n        let flags = [];\n        let same = 0;\n        let lastX = 0, lastY = 0, lastFlag = 0;\n        let pointCount = 0;\n        for(let i = 0; i < path.commands.length; i++){\n            let c = path.commands[i];\n            for(let j = 0; j < c.args.length; j += 2){\n                let x = c.args[j];\n                let y = c.args[j + 1];\n                let flag = 0;\n                // If the ending point of a quadratic curve is the midpoint\n                // between the control point and the control point of the next\n                // quadratic curve, we can omit the ending point.\n                if (c.command === \"quadraticCurveTo\" && j === 2) {\n                    let next = path.commands[i + 1];\n                    if (next && next.command === \"quadraticCurveTo\") {\n                        let midX = (lastX + next.args[0]) / 2;\n                        let midY = (lastY + next.args[1]) / 2;\n                        if (x === midX && y === midY) continue;\n                    }\n                }\n                // All points except control points are on curve.\n                if (!(c.command === \"quadraticCurveTo\" && j === 0)) flag |= $2784eedf0b35a048$var$ON_CURVE;\n                flag = this._encodePoint(x, lastX, xPoints, flag, $2784eedf0b35a048$var$X_SHORT_VECTOR, $2784eedf0b35a048$var$SAME_X);\n                flag = this._encodePoint(y, lastY, yPoints, flag, $2784eedf0b35a048$var$Y_SHORT_VECTOR, $2784eedf0b35a048$var$SAME_Y);\n                if (flag === lastFlag && same < 255) {\n                    flags[flags.length - 1] |= $2784eedf0b35a048$var$REPEAT;\n                    same++;\n                } else {\n                    if (same > 0) {\n                        flags.push(same);\n                        same = 0;\n                    }\n                    flags.push(flag);\n                    lastFlag = flag;\n                }\n                lastX = x;\n                lastY = y;\n                pointCount++;\n            }\n            if (c.command === \"closePath\") endPtsOfContours.push(pointCount - 1);\n        }\n        // Close the path if the last command didn't already\n        if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== \"closePath\") endPtsOfContours.push(pointCount - 1);\n        let bbox = path.bbox;\n        let glyf = {\n            numberOfContours: endPtsOfContours.length,\n            xMin: bbox.minX,\n            yMin: bbox.minY,\n            xMax: bbox.maxX,\n            yMax: bbox.maxY,\n            endPtsOfContours: endPtsOfContours,\n            instructions: instructions,\n            flags: flags,\n            xPoints: xPoints,\n            yPoints: yPoints\n        };\n        let size = $2784eedf0b35a048$var$Glyf.size(glyf);\n        let tail = 4 - size % 4;\n        let stream = new $gfJaN$restructure.EncodeStream(size + tail);\n        $2784eedf0b35a048$var$Glyf.encode(stream, glyf);\n        // Align to 4-byte length\n        if (tail !== 0) stream.fill(0, tail);\n        return stream.buffer;\n    }\n    _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n        let diff = value - last;\n        if (value === last) flag |= sameFlag;\n        else {\n            if (-255 <= diff && diff <= 255) {\n                flag |= shortFlag;\n                if (diff < 0) diff = -diff;\n                else flag |= sameFlag;\n            }\n            points.push(diff);\n        }\n        return flag;\n    }\n}\n\n\nclass $fe042f4b88f46896$export$2e2bcd8739ae039 extends (0, $a8ac370803cb82cf$export$2e2bcd8739ae039) {\n    _addGlyph(gid) {\n        let glyph = this.font.getGlyph(gid);\n        let glyf = glyph._decode();\n        // get the offset to the glyph from the loca table\n        let curOffset = this.font.loca.offsets[gid];\n        let nextOffset = this.font.loca.offsets[gid + 1];\n        let stream = this.font._getTableStream(\"glyf\");\n        stream.pos += curOffset;\n        let buffer = stream.readBuffer(nextOffset - curOffset);\n        // if it is a compound glyph, include its components\n        if (glyf && glyf.numberOfContours < 0) {\n            buffer = new Uint8Array(buffer);\n            let view = new DataView(buffer.buffer);\n            for (let component of glyf.components){\n                gid = this.includeGlyph(component.glyphID);\n                view.setUint16(component.pos, gid);\n            }\n        } else if (glyf && this.font._variationProcessor) // If this is a TrueType variation glyph, re-encode the path\n        buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n        this.glyf.push(buffer);\n        this.loca.offsets.push(this.offset);\n        this.hmtx.metrics.push({\n            advance: glyph.advanceWidth,\n            bearing: glyph._getMetrics().leftBearing\n        });\n        this.offset += buffer.length;\n        return this.glyf.length - 1;\n    }\n    encode() {\n        // tables required by PDF spec:\n        //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n        //\n        // additional tables required for standalone fonts:\n        //   name, cmap, OS/2, post\n        this.glyf = [];\n        this.offset = 0;\n        this.loca = {\n            offsets: [],\n            version: this.font.loca.version\n        };\n        this.hmtx = {\n            metrics: [],\n            bearings: []\n        };\n        // include all the glyphs\n        // not using a for loop because we need to support adding more\n        // glyphs to the array as we go, and CoffeeScript caches the length.\n        let i = 0;\n        while(i < this.glyphs.length)this._addGlyph(this.glyphs[i++]);\n        let maxp = (0, ($parcel$interopDefault($gfJaN$clone)))(this.font.maxp);\n        maxp.numGlyphs = this.glyf.length;\n        this.loca.offsets.push(this.offset);\n        let head = (0, ($parcel$interopDefault($gfJaN$clone)))(this.font.head);\n        head.indexToLocFormat = this.loca.version;\n        let hhea = (0, ($parcel$interopDefault($gfJaN$clone)))(this.font.hhea);\n        hhea.numberOfMetrics = this.hmtx.metrics.length;\n        // map = []\n        // for index in [0...256]\n        //     if index < @numGlyphs\n        //         map[index] = index\n        //     else\n        //         map[index] = 0\n        //\n        // cmapTable =\n        //     version: 0\n        //     length: 262\n        //     language: 0\n        //     codeMap: map\n        //\n        // cmap =\n        //     version: 0\n        //     numSubtables: 1\n        //     tables: [\n        //         platformID: 1\n        //         encodingID: 0\n        //         table: cmapTable\n        //     ]\n        // TODO: subset prep, cvt, fpgm?\n        return (0, $df50e1efe10a1247$export$2e2bcd8739ae039).toBuffer({\n            tables: {\n                head: head,\n                hhea: hhea,\n                loca: this.loca,\n                maxp: maxp,\n                \"cvt \": this.font[\"cvt \"],\n                prep: this.font.prep,\n                glyf: this.glyf,\n                hmtx: this.hmtx,\n                fpgm: this.font.fpgm\n            }\n        });\n    }\n    constructor(font){\n        super(font);\n        this.glyphEncoder = new (0, $2784eedf0b35a048$export$2e2bcd8739ae039);\n    }\n}\n\n\n\n\n\n\nclass $ec40f80c07a4e08a$export$2e2bcd8739ae039 extends (0, $a8ac370803cb82cf$export$2e2bcd8739ae039) {\n    subsetCharstrings() {\n        this.charstrings = [];\n        let gsubrs = {};\n        for (let gid of this.glyphs){\n            this.charstrings.push(this.cff.getCharString(gid));\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedGsubrs)gsubrs[subr] = true;\n        }\n        this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n    }\n    subsetSubrs(subrs, used) {\n        let res = [];\n        for(let i = 0; i < subrs.length; i++){\n            let subr = subrs[i];\n            if (used[i]) {\n                this.cff.stream.pos = subr.offset;\n                res.push(this.cff.stream.readBuffer(subr.length));\n            } else res.push(new Uint8Array([\n                11\n            ])); // return\n        }\n        return res;\n    }\n    subsetFontdict(topDict) {\n        topDict.FDArray = [];\n        topDict.FDSelect = {\n            version: 0,\n            fds: []\n        };\n        let used_fds = {};\n        let used_subrs = [];\n        let fd_select = {};\n        for (let gid of this.glyphs){\n            let fd = this.cff.fdForGlyph(gid);\n            if (fd == null) continue;\n            if (!used_fds[fd]) {\n                topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n                used_subrs.push({});\n                fd_select[fd] = topDict.FDArray.length - 1;\n            }\n            used_fds[fd] = true;\n            topDict.FDSelect.fds.push(fd_select[fd]);\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedSubrs)used_subrs[fd_select[fd]][subr] = true;\n        }\n        for(let i = 0; i < topDict.FDArray.length; i++){\n            let dict = topDict.FDArray[i];\n            delete dict.FontName;\n            if (dict.Private && dict.Private.Subrs) {\n                dict.Private = Object.assign({}, dict.Private);\n                dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n            }\n        }\n        return;\n    }\n    createCIDFontdict(topDict) {\n        let used_subrs = {};\n        for (let gid of this.glyphs){\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedSubrs)used_subrs[subr] = true;\n        }\n        let privateDict = Object.assign({}, this.cff.topDict.Private);\n        if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n        topDict.FDArray = [\n            {\n                Private: privateDict\n            }\n        ];\n        return topDict.FDSelect = {\n            version: 3,\n            nRanges: 1,\n            ranges: [\n                {\n                    first: 0,\n                    fd: 0\n                }\n            ],\n            sentinel: this.charstrings.length\n        };\n    }\n    addString(string) {\n        if (!string) return null;\n        if (!this.strings) this.strings = [];\n        this.strings.push(string);\n        return (0, $860d3574d7fa3a51$export$2e2bcd8739ae039).length + this.strings.length - 1;\n    }\n    encode() {\n        this.subsetCharstrings();\n        let charset = {\n            version: this.charstrings.length > 255 ? 2 : 1,\n            ranges: [\n                {\n                    first: 1,\n                    nLeft: this.charstrings.length - 2\n                }\n            ]\n        };\n        let topDict = Object.assign({}, this.cff.topDict);\n        topDict.Private = null;\n        topDict.charset = charset;\n        topDict.Encoding = null;\n        topDict.CharStrings = this.charstrings;\n        for (let key of [\n            \"version\",\n            \"Notice\",\n            \"Copyright\",\n            \"FullName\",\n            \"FamilyName\",\n            \"Weight\",\n            \"PostScript\",\n            \"BaseFontName\",\n            \"FontName\"\n        ])topDict[key] = this.addString(this.cff.string(topDict[key]));\n        topDict.ROS = [\n            this.addString(\"Adobe\"),\n            this.addString(\"Identity\"),\n            0\n        ];\n        topDict.CIDCount = this.charstrings.length;\n        if (this.cff.isCIDFont) this.subsetFontdict(topDict);\n        else this.createCIDFontdict(topDict);\n        let top = {\n            version: 1,\n            hdrSize: this.cff.hdrSize,\n            offSize: 4,\n            header: this.cff.header,\n            nameIndex: [\n                this.cff.postscriptName\n            ],\n            topDictIndex: [\n                topDict\n            ],\n            stringIndex: this.strings,\n            globalSubrIndex: this.gsubrs\n        };\n        return (0, $5b547cf9e5da519b$export$2e2bcd8739ae039).toBuffer(top);\n    }\n    constructor(font){\n        super(font);\n        this.cff = this.font[\"CFF \"];\n        if (!this.cff) throw new Error(\"Not a CFF Font\");\n    }\n}\n\n\n\n\nclass $0a8ef2660a6ce4b6$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        let format = (0, $66a5b9fb5318558a$export$3d28c1996ced1f14).decode(buffer.slice(0, 4));\n        return format === \"true\" || format === \"OTTO\" || format === String.fromCharCode(0, 1, 0, 0);\n    }\n    setDefaultLanguage(lang = null) {\n        this.defaultLanguage = lang;\n    }\n    _getTable(table) {\n        if (!(table.tag in this._tables)) try {\n            this._tables[table.tag] = this._decodeTable(table);\n        } catch (e) {\n            if ($59aa4ed98453e1d4$export$bd5c5d8b8dcafd78) {\n                console.error(`Error decoding table ${table.tag}`);\n                console.error(e.stack);\n            }\n        }\n        return this._tables[table.tag];\n    }\n    _getTableStream(tag) {\n        let table = this.directory.tables[tag];\n        if (table) {\n            this.stream.pos = table.offset;\n            return this.stream;\n        }\n        return null;\n    }\n    _decodeDirectory() {\n        return this.directory = (0, $df50e1efe10a1247$export$2e2bcd8739ae039).decode(this.stream, {\n            _startOffset: 0\n        });\n    }\n    _decodeTable(table) {\n        let pos = this.stream.pos;\n        let stream = this._getTableStream(table.tag);\n        let result = (0, $5825c04ce8f7102d$export$2e2bcd8739ae039)[table.tag].decode(stream, this, table.length);\n        this.stream.pos = pos;\n        return result;\n    }\n    /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */ getName(key, lang = this.defaultLanguage || $59aa4ed98453e1d4$export$42940898df819940) {\n        let record = this.name && this.name.records[key];\n        if (record) // Attempt to retrieve the entry, depending on which translation is available:\n        return record[lang] || record[this.defaultLanguage] || record[$59aa4ed98453e1d4$export$42940898df819940] || record[\"en\"] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n         || null;\n        return null;\n    }\n    /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */ get postscriptName() {\n        return this.getName(\"postscriptName\");\n    }\n    /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */ get fullName() {\n        return this.getName(\"fullName\");\n    }\n    /**\n   * The font's family name, e.g. \"Helvetica\"\n   * @type {string}\n   */ get familyName() {\n        return this.getName(\"fontFamily\");\n    }\n    /**\n   * The font's sub-family, e.g. \"Bold\".\n   * @type {string}\n   */ get subfamilyName() {\n        return this.getName(\"fontSubfamily\");\n    }\n    /**\n   * The font's copyright information\n   * @type {string}\n   */ get copyright() {\n        return this.getName(\"copyright\");\n    }\n    /**\n   * The font's version number\n   * @type {string}\n   */ get version() {\n        return this.getName(\"version\");\n    }\n    /**\n   * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n   * @type {number}\n   */ get ascent() {\n        return this.hhea.ascent;\n    }\n    /**\n   * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n   * @type {number}\n   */ get descent() {\n        return this.hhea.descent;\n    }\n    /**\n   * The amount of space that should be included between lines\n   * @type {number}\n   */ get lineGap() {\n        return this.hhea.lineGap;\n    }\n    /**\n   * The offset from the normal underline position that should be used\n   * @type {number}\n   */ get underlinePosition() {\n        return this.post.underlinePosition;\n    }\n    /**\n   * The weight of the underline that should be used\n   * @type {number}\n   */ get underlineThickness() {\n        return this.post.underlineThickness;\n    }\n    /**\n   * If this is an italic font, the angle the cursor should be drawn at to match the font design\n   * @type {number}\n   */ get italicAngle() {\n        return this.post.italicAngle;\n    }\n    /**\n   * The height of capital letters above the baseline.\n   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n   * @type {number}\n   */ get capHeight() {\n        let os2 = this[\"OS/2\"];\n        return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n   * The height of lower case letters in the font.\n   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n   * @type {number}\n   */ get xHeight() {\n        let os2 = this[\"OS/2\"];\n        return os2 ? os2.xHeight : 0;\n    }\n    /**\n   * The number of glyphs in the font.\n   * @type {number}\n   */ get numGlyphs() {\n        return this.maxp.numGlyphs;\n    }\n    /**\n   * The size of the font’s internal coordinate grid\n   * @type {number}\n   */ get unitsPerEm() {\n        return this.head.unitsPerEm;\n    }\n    /**\n   * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n   * @type {BBox}\n   */ get bbox() {\n        return Object.freeze(new (0, $0e2da1c4ce69e8ad$export$2e2bcd8739ae039)(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n    get _cmapProcessor() {\n        return new (0, $0d6e160064c86e50$export$2e2bcd8739ae039)(this.cmap);\n    }\n    /**\n   * An array of all of the unicode code points supported by the font.\n   * @type {number[]}\n   */ get characterSet() {\n        return this._cmapProcessor.getCharacterSet();\n    }\n    /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */ hasGlyphForCodePoint(codePoint) {\n        return !!this._cmapProcessor.lookup(codePoint);\n    }\n    /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */ glyphForCodePoint(codePoint) {\n        return this.getGlyph(this._cmapProcessor.lookup(codePoint), [\n            codePoint\n        ]);\n    }\n    /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */ glyphsForString(string) {\n        let glyphs = [];\n        let len = string.length;\n        let idx = 0;\n        let last = -1;\n        let state = -1;\n        while(idx <= len){\n            let code = 0;\n            let nextState = 0;\n            if (idx < len) {\n                // Decode the next codepoint from UTF 16\n                code = string.charCodeAt(idx++);\n                if (0xd800 <= code && code <= 0xdbff && idx < len) {\n                    let next = string.charCodeAt(idx);\n                    if (0xdc00 <= next && next <= 0xdfff) {\n                        idx++;\n                        code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n                    }\n                }\n                // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n                nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n            } else idx++;\n            if (state === 0 && nextState === 1) // Variation selector following normal codepoint.\n            glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [\n                last,\n                code\n            ]));\n            else if (state === 0 && nextState === 0) // Normal codepoint following normal codepoint.\n            glyphs.push(this.glyphForCodePoint(last));\n            last = code;\n            state = nextState;\n        }\n        return glyphs;\n    }\n    get _layoutEngine() {\n        return new (0, $9d641258c9d7180d$export$2e2bcd8739ae039)(this);\n    }\n    /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */ layout(string, userFeatures, script, language, direction) {\n        return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n    }\n    /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */ stringsForGlyph(gid) {\n        return this._layoutEngine.stringsForGlyph(gid);\n    }\n    /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */ get availableFeatures() {\n        return this._layoutEngine.getAvailableFeatures();\n    }\n    getAvailableFeatures(script, language) {\n        return this._layoutEngine.getAvailableFeatures(script, language);\n    }\n    _getBaseGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.glyf) this._glyphs[glyph] = new (0, $f680320fa07ef53d$export$2e2bcd8739ae039)(glyph, characters, this);\n            else if (this.directory.tables[\"CFF \"] || this.directory.tables.CFF2) this._glyphs[glyph] = new (0, $7ee0705195f3b047$export$2e2bcd8739ae039)(glyph, characters, this);\n        }\n        return this._glyphs[glyph] || null;\n    }\n    /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */ getGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.sbix) this._glyphs[glyph] = new (0, $55855d6d316b015e$export$2e2bcd8739ae039)(glyph, characters, this);\n            else if (this.directory.tables.COLR && this.directory.tables.CPAL) this._glyphs[glyph] = new (0, $42d9dbd2de9ee2d8$export$2e2bcd8739ae039)(glyph, characters, this);\n            else this._getBaseGlyph(glyph, characters);\n        }\n        return this._glyphs[glyph] || null;\n    }\n    /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */ createSubset() {\n        if (this.directory.tables[\"CFF \"]) return new (0, $ec40f80c07a4e08a$export$2e2bcd8739ae039)(this);\n        return new (0, $fe042f4b88f46896$export$2e2bcd8739ae039)(this);\n    }\n    /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */ get variationAxes() {\n        let res = {};\n        if (!this.fvar) return res;\n        for (let axis of this.fvar.axis)res[axis.axisTag.trim()] = {\n            name: axis.name.en,\n            min: axis.minValue,\n            default: axis.defaultValue,\n            max: axis.maxValue\n        };\n        return res;\n    }\n    /**\n   * Returns an object describing the named variation instances\n   * that the font designer has specified. Keys are variation names\n   * and values are the variation settings for this instance.\n   *\n   * @type {object}\n   */ get namedVariations() {\n        let res = {};\n        if (!this.fvar) return res;\n        for (let instance of this.fvar.instance){\n            let settings = {};\n            for(let i = 0; i < this.fvar.axis.length; i++){\n                let axis = this.fvar.axis[i];\n                settings[axis.axisTag.trim()] = instance.coord[i];\n            }\n            res[instance.name.en] = settings;\n        }\n        return res;\n    }\n    /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */ getVariation(settings) {\n        if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) throw new Error(\"Variations require a font with the fvar, gvar and glyf, or CFF2 tables.\");\n        if (typeof settings === \"string\") settings = this.namedVariations[settings];\n        if (typeof settings !== \"object\") throw new Error(\"Variation settings must be either a variation name or settings object.\");\n        // normalize the coordinates\n        let coords = this.fvar.axis.map((axis, i)=>{\n            let axisTag = axis.axisTag.trim();\n            if (axisTag in settings) return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n            else return axis.defaultValue;\n        });\n        let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer);\n        stream.pos = this._directoryPos;\n        let font = new $0a8ef2660a6ce4b6$export$2e2bcd8739ae039(stream, coords);\n        font._tables = this._tables;\n        return font;\n    }\n    get _variationProcessor() {\n        if (!this.fvar) return null;\n        let variationCoords = this.variationCoords;\n        // Ignore if no variation coords and not CFF2\n        if (!variationCoords && !this.CFF2) return null;\n        if (!variationCoords) variationCoords = this.fvar.axis.map((axis)=>axis.defaultValue);\n        return new (0, $7586bb9ea67c41d8$export$2e2bcd8739ae039)(this, variationCoords);\n    }\n    // Standardized format plugin API\n    getFont(name) {\n        return this.getVariation(name);\n    }\n    constructor(stream, variationCoords = null){\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"TTF\");\n        this.defaultLanguage = null;\n        this.stream = stream;\n        this.variationCoords = variationCoords;\n        this._directoryPos = this.stream.pos;\n        this._tables = {};\n        this._glyphs = {};\n        this._decodeDirectory();\n        // define properties for each table to lazily parse\n        for(let tag in this.directory.tables){\n            let table = this.directory.tables[tag];\n            if ((0, $5825c04ce8f7102d$export$2e2bcd8739ae039)[tag] && table.length > 0) Object.defineProperty(this, tag, {\n                get: this._getTable.bind(this, table)\n            });\n        }\n    }\n}\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"_cmapProcessor\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"characterSet\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"_layoutEngine\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"variationAxes\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"namedVariations\", null);\n(0, ($parcel$interopDefault($gfJaN$swchelperslib_ts_decoratejs)))([\n    (0, $3bda6911913b43f0$export$69a3209f1a06c04d)\n], $0a8ef2660a6ce4b6$export$2e2bcd8739ae039.prototype, \"_variationProcessor\", null);\n\n\n\n\n\n\nlet $89f72d2d7c9afc0d$var$WOFFDirectoryEntry = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    offset: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, \"void\", {\n        type: \"global\"\n    }),\n    compLength: $gfJaN$restructure.uint32,\n    length: $gfJaN$restructure.uint32,\n    origChecksum: $gfJaN$restructure.uint32\n});\nlet $89f72d2d7c9afc0d$var$WOFFDirectory = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    flavor: $gfJaN$restructure.uint32,\n    length: $gfJaN$restructure.uint32,\n    numTables: $gfJaN$restructure.uint16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    totalSfntSize: $gfJaN$restructure.uint32,\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    metaOffset: $gfJaN$restructure.uint32,\n    metaLength: $gfJaN$restructure.uint32,\n    metaOrigLength: $gfJaN$restructure.uint32,\n    privOffset: $gfJaN$restructure.uint32,\n    privLength: $gfJaN$restructure.uint32,\n    tables: new $gfJaN$restructure.Array($89f72d2d7c9afc0d$var$WOFFDirectoryEntry, \"numTables\")\n});\n$89f72d2d7c9afc0d$var$WOFFDirectory.process = function() {\n    let tables1 = {};\n    for (let table of this.tables)tables1[table.tag] = table;\n    this.tables = tables1;\n};\nvar $89f72d2d7c9afc0d$export$2e2bcd8739ae039 = $89f72d2d7c9afc0d$var$WOFFDirectory;\n\n\n\n\n\n\nclass $8a0a49baaf5d834d$export$2e2bcd8739ae039 extends (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039) {\n    static probe(buffer) {\n        return (0, $66a5b9fb5318558a$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"wOFF\";\n    }\n    _decodeDirectory() {\n        this.directory = (0, $89f72d2d7c9afc0d$export$2e2bcd8739ae039).decode(this.stream, {\n            _startOffset: 0\n        });\n    }\n    _getTableStream(tag) {\n        let table = this.directory.tables[tag];\n        if (table) {\n            this.stream.pos = table.offset;\n            if (table.compLength < table.length) {\n                this.stream.pos += 2; // skip deflate header\n                let outBuffer = new Uint8Array(table.length);\n                let buf = (0, ($parcel$interopDefault($gfJaN$tinyinflate)))(this.stream.readBuffer(table.compLength - 2), outBuffer);\n                return new $gfJaN$restructure.DecodeStream(buf);\n            } else return this.stream;\n        }\n        return null;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"WOFF\");\n    }\n}\n\n\n\n\n\n\n\n\n\nclass $44b9edca0e403d6d$export$2e2bcd8739ae039 extends (0, $f680320fa07ef53d$export$2e2bcd8739ae039) {\n    _decode() {\n        // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.\n        return this._font._transformedGlyphs[this.id];\n    }\n    _getCBox() {\n        return this.path.bbox;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"WOFF2\");\n    }\n}\n\n\n\nconst $2f0bfd9a5c1d7b58$var$Base128 = {\n    decode (stream) {\n        let result = 0;\n        let iterable = [\n            0,\n            1,\n            2,\n            3,\n            4\n        ];\n        for(let j = 0; j < iterable.length; j++){\n            let i = iterable[j];\n            let code = stream.readUInt8();\n            // If any of the top seven bits are set then we're about to overflow.\n            if (result & 0xe0000000) throw new Error(\"Overflow\");\n            result = result << 7 | code & 0x7f;\n            if ((code & 0x80) === 0) return result;\n        }\n        throw new Error(\"Bad base 128 number\");\n    }\n};\nlet $2f0bfd9a5c1d7b58$var$knownTags = [\n    \"cmap\",\n    \"head\",\n    \"hhea\",\n    \"hmtx\",\n    \"maxp\",\n    \"name\",\n    \"OS/2\",\n    \"post\",\n    \"cvt \",\n    \"fpgm\",\n    \"glyf\",\n    \"loca\",\n    \"prep\",\n    \"CFF \",\n    \"VORG\",\n    \"EBDT\",\n    \"EBLC\",\n    \"gasp\",\n    \"hdmx\",\n    \"kern\",\n    \"LTSH\",\n    \"PCLT\",\n    \"VDMX\",\n    \"vhea\",\n    \"vmtx\",\n    \"BASE\",\n    \"GDEF\",\n    \"GPOS\",\n    \"GSUB\",\n    \"EBSC\",\n    \"JSTF\",\n    \"MATH\",\n    \"CBDT\",\n    \"CBLC\",\n    \"COLR\",\n    \"CPAL\",\n    \"SVG \",\n    \"sbix\",\n    \"acnt\",\n    \"avar\",\n    \"bdat\",\n    \"bloc\",\n    \"bsln\",\n    \"cvar\",\n    \"fdsc\",\n    \"feat\",\n    \"fmtx\",\n    \"fvar\",\n    \"gvar\",\n    \"hsty\",\n    \"just\",\n    \"lcar\",\n    \"mort\",\n    \"morx\",\n    \"opbd\",\n    \"prop\",\n    \"trak\",\n    \"Zapf\",\n    \"Silf\",\n    \"Glat\",\n    \"Gloc\",\n    \"Feat\",\n    \"Sill\"\n];\nlet $2f0bfd9a5c1d7b58$var$WOFF2DirectoryEntry = new $gfJaN$restructure.Struct({\n    flags: $gfJaN$restructure.uint8,\n    customTag: new $gfJaN$restructure.Optional(new $gfJaN$restructure.String(4), (t)=>(t.flags & 0x3f) === 0x3f),\n    tag: (t)=>t.customTag || $2f0bfd9a5c1d7b58$var$knownTags[t.flags & 0x3f],\n    length: $2f0bfd9a5c1d7b58$var$Base128,\n    transformVersion: (t)=>t.flags >>> 6 & 0x03,\n    transformed: (t)=>t.tag === \"glyf\" || t.tag === \"loca\" ? t.transformVersion === 0 : t.transformVersion !== 0,\n    transformLength: new $gfJaN$restructure.Optional($2f0bfd9a5c1d7b58$var$Base128, (t)=>t.transformed)\n});\nlet $2f0bfd9a5c1d7b58$var$WOFF2Directory = new $gfJaN$restructure.Struct({\n    tag: new $gfJaN$restructure.String(4),\n    flavor: $gfJaN$restructure.uint32,\n    length: $gfJaN$restructure.uint32,\n    numTables: $gfJaN$restructure.uint16,\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint16),\n    totalSfntSize: $gfJaN$restructure.uint32,\n    totalCompressedSize: $gfJaN$restructure.uint32,\n    majorVersion: $gfJaN$restructure.uint16,\n    minorVersion: $gfJaN$restructure.uint16,\n    metaOffset: $gfJaN$restructure.uint32,\n    metaLength: $gfJaN$restructure.uint32,\n    metaOrigLength: $gfJaN$restructure.uint32,\n    privOffset: $gfJaN$restructure.uint32,\n    privLength: $gfJaN$restructure.uint32,\n    tables: new $gfJaN$restructure.Array($2f0bfd9a5c1d7b58$var$WOFF2DirectoryEntry, \"numTables\")\n});\n$2f0bfd9a5c1d7b58$var$WOFF2Directory.process = function() {\n    let tables = {};\n    for(let i = 0; i < this.tables.length; i++){\n        let table = this.tables[i];\n        tables[table.tag] = table;\n    }\n    return this.tables = tables;\n};\nvar $2f0bfd9a5c1d7b58$export$2e2bcd8739ae039 = $2f0bfd9a5c1d7b58$var$WOFF2Directory;\n\n\n\nclass $333fb94547d9fb5c$export$2e2bcd8739ae039 extends (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039) {\n    static probe(buffer) {\n        return (0, $66a5b9fb5318558a$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"wOF2\";\n    }\n    _decodeDirectory() {\n        this.directory = (0, $2f0bfd9a5c1d7b58$export$2e2bcd8739ae039).decode(this.stream);\n        this._dataPos = this.stream.pos;\n    }\n    _decompress() {\n        // decompress data and setup table offsets if we haven't already\n        if (!this._decompressed) {\n            this.stream.pos = this._dataPos;\n            let buffer = this.stream.readBuffer(this.directory.totalCompressedSize);\n            let decompressedSize = 0;\n            for(let tag in this.directory.tables){\n                let entry = this.directory.tables[tag];\n                entry.offset = decompressedSize;\n                decompressedSize += entry.transformLength != null ? entry.transformLength : entry.length;\n            }\n            let decompressed = (0, ($parcel$interopDefault($gfJaN$brotlidecompressjs)))(buffer, decompressedSize);\n            if (!decompressed) throw new Error(\"Error decoding compressed data in WOFF2\");\n            this.stream = new $gfJaN$restructure.DecodeStream(decompressed);\n            this._decompressed = true;\n        }\n    }\n    _decodeTable(table) {\n        this._decompress();\n        return super._decodeTable(table);\n    }\n    // Override this method to get a glyph and return our\n    // custom subclass if there is a glyf table.\n    _getBaseGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {\n                if (!this._transformedGlyphs) this._transformGlyfTable();\n                return this._glyphs[glyph] = new (0, $44b9edca0e403d6d$export$2e2bcd8739ae039)(glyph, characters, this);\n            } else return super._getBaseGlyph(glyph, characters);\n        }\n    }\n    _transformGlyfTable() {\n        this._decompress();\n        this.stream.pos = this.directory.tables.glyf.offset;\n        let table = $333fb94547d9fb5c$var$GlyfTable.decode(this.stream);\n        let glyphs = [];\n        for(let index = 0; index < table.numGlyphs; index++){\n            let glyph = {};\n            let nContours = table.nContours.readInt16BE();\n            glyph.numberOfContours = nContours;\n            if (nContours > 0) {\n                let nPoints = [];\n                let totalPoints = 0;\n                for(let i = 0; i < nContours; i++){\n                    let r1 = $333fb94547d9fb5c$var$read255UInt16(table.nPoints);\n                    totalPoints += r1;\n                    nPoints.push(totalPoints);\n                }\n                glyph.points = $333fb94547d9fb5c$var$decodeTriplet(table.flags, table.glyphs, totalPoints);\n                for(let i1 = 0; i1 < nContours; i1++)glyph.points[nPoints[i1] - 1].endContour = true;\n                var instructionSize = $333fb94547d9fb5c$var$read255UInt16(table.glyphs);\n            } else if (nContours < 0) {\n                let haveInstructions = (0, $f680320fa07ef53d$export$2e2bcd8739ae039).prototype._decodeComposite.call({\n                    _font: this\n                }, glyph, table.composites);\n                if (haveInstructions) var instructionSize = $333fb94547d9fb5c$var$read255UInt16(table.glyphs);\n            }\n            glyphs.push(glyph);\n        }\n        this._transformedGlyphs = glyphs;\n    }\n    constructor(...args){\n        super(...args);\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"WOFF2\");\n    }\n}\n// Special class that accepts a length and returns a sub-stream for that data\nclass $333fb94547d9fb5c$var$Substream {\n    decode(stream, parent) {\n        return new $gfJaN$restructure.DecodeStream(this._buf.decode(stream, parent));\n    }\n    constructor(length){\n        this.length = length;\n        this._buf = new $gfJaN$restructure.Buffer(length);\n    }\n}\n// This struct represents the entire glyf table\nlet $333fb94547d9fb5c$var$GlyfTable = new $gfJaN$restructure.Struct({\n    version: $gfJaN$restructure.uint32,\n    numGlyphs: $gfJaN$restructure.uint16,\n    indexFormat: $gfJaN$restructure.uint16,\n    nContourStreamSize: $gfJaN$restructure.uint32,\n    nPointsStreamSize: $gfJaN$restructure.uint32,\n    flagStreamSize: $gfJaN$restructure.uint32,\n    glyphStreamSize: $gfJaN$restructure.uint32,\n    compositeStreamSize: $gfJaN$restructure.uint32,\n    bboxStreamSize: $gfJaN$restructure.uint32,\n    instructionStreamSize: $gfJaN$restructure.uint32,\n    nContours: new $333fb94547d9fb5c$var$Substream(\"nContourStreamSize\"),\n    nPoints: new $333fb94547d9fb5c$var$Substream(\"nPointsStreamSize\"),\n    flags: new $333fb94547d9fb5c$var$Substream(\"flagStreamSize\"),\n    glyphs: new $333fb94547d9fb5c$var$Substream(\"glyphStreamSize\"),\n    composites: new $333fb94547d9fb5c$var$Substream(\"compositeStreamSize\"),\n    bboxes: new $333fb94547d9fb5c$var$Substream(\"bboxStreamSize\"),\n    instructions: new $333fb94547d9fb5c$var$Substream(\"instructionStreamSize\")\n});\nconst $333fb94547d9fb5c$var$WORD_CODE = 253;\nconst $333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE2 = 254;\nconst $333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE1 = 255;\nconst $333fb94547d9fb5c$var$LOWEST_U_CODE = 253;\nfunction $333fb94547d9fb5c$var$read255UInt16(stream) {\n    let code = stream.readUInt8();\n    if (code === $333fb94547d9fb5c$var$WORD_CODE) return stream.readUInt16BE();\n    if (code === $333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE1) return stream.readUInt8() + $333fb94547d9fb5c$var$LOWEST_U_CODE;\n    if (code === $333fb94547d9fb5c$var$ONE_MORE_BYTE_CODE2) return stream.readUInt8() + $333fb94547d9fb5c$var$LOWEST_U_CODE * 2;\n    return code;\n}\nfunction $333fb94547d9fb5c$var$withSign(flag, baseval) {\n    return flag & 1 ? baseval : -baseval;\n}\nfunction $333fb94547d9fb5c$var$decodeTriplet(flags, glyphs, nPoints) {\n    let y;\n    let x = y = 0;\n    let res = [];\n    for(let i = 0; i < nPoints; i++){\n        let dx = 0, dy = 0;\n        let flag = flags.readUInt8();\n        let onCurve = !(flag >> 7);\n        flag &= 0x7f;\n        if (flag < 10) {\n            dx = 0;\n            dy = $333fb94547d9fb5c$var$withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());\n        } else if (flag < 20) {\n            dx = $333fb94547d9fb5c$var$withSign(flag, ((flag - 10 & 14) << 7) + glyphs.readUInt8());\n            dy = 0;\n        } else if (flag < 84) {\n            var b0 = flag - 20;\n            var b1 = glyphs.readUInt8();\n            dx = $333fb94547d9fb5c$var$withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));\n            dy = $333fb94547d9fb5c$var$withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));\n        } else if (flag < 120) {\n            var b0 = flag - 84;\n            dx = $333fb94547d9fb5c$var$withSign(flag, 1 + (b0 / 12 << 8) + glyphs.readUInt8());\n            dy = $333fb94547d9fb5c$var$withSign(flag >> 1, 1 + (b0 % 12 >> 2 << 8) + glyphs.readUInt8());\n        } else if (flag < 124) {\n            var b1 = glyphs.readUInt8();\n            let b2 = glyphs.readUInt8();\n            dx = $333fb94547d9fb5c$var$withSign(flag, (b1 << 4) + (b2 >> 4));\n            dy = $333fb94547d9fb5c$var$withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());\n        } else {\n            dx = $333fb94547d9fb5c$var$withSign(flag, glyphs.readUInt16BE());\n            dy = $333fb94547d9fb5c$var$withSign(flag >> 1, glyphs.readUInt16BE());\n        }\n        x += dx;\n        y += dy;\n        res.push(new (0, $f680320fa07ef53d$export$baf26146a414f24a)(onCurve, false, x, y));\n    }\n    return res;\n}\n\n\n\n\n\n\n\n\nlet $e0b2de9958441c02$var$TTCHeader = new $gfJaN$restructure.VersionedStruct($gfJaN$restructure.uint32, {\n    0x00010000: {\n        numFonts: $gfJaN$restructure.uint32,\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, \"numFonts\")\n    },\n    0x00020000: {\n        numFonts: $gfJaN$restructure.uint32,\n        offsets: new $gfJaN$restructure.Array($gfJaN$restructure.uint32, \"numFonts\"),\n        dsigTag: $gfJaN$restructure.uint32,\n        dsigLength: $gfJaN$restructure.uint32,\n        dsigOffset: $gfJaN$restructure.uint32\n    }\n});\nclass $e0b2de9958441c02$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        return (0, $66a5b9fb5318558a$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"ttcf\";\n    }\n    getFont(name) {\n        for (let offset of this.header.offsets){\n            let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer);\n            stream.pos = offset;\n            let font = new (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039)(stream);\n            if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every((v, i)=>name[i] === v)) return font;\n        }\n        return null;\n    }\n    get fonts() {\n        let fonts = [];\n        for (let offset of this.header.offsets){\n            let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer);\n            stream.pos = offset;\n            fonts.push(new (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039)(stream));\n        }\n        return fonts;\n    }\n    constructor(stream){\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"TTC\");\n        this.stream = stream;\n        if (stream.readString(4) !== \"ttcf\") throw new Error(\"Not a TrueType collection\");\n        this.header = $e0b2de9958441c02$var$TTCHeader.decode(stream);\n    }\n}\n\n\n\n\n\nlet $d0fe640dc6c78783$var$DFontName = new $gfJaN$restructure.String($gfJaN$restructure.uint8);\nlet $d0fe640dc6c78783$var$DFontData = new $gfJaN$restructure.Struct({\n    len: $gfJaN$restructure.uint32,\n    buf: new $gfJaN$restructure.Buffer(\"len\")\n});\nlet $d0fe640dc6c78783$var$Ref = new $gfJaN$restructure.Struct({\n    id: $gfJaN$restructure.uint16,\n    nameOffset: $gfJaN$restructure.int16,\n    attr: $gfJaN$restructure.uint8,\n    dataOffset: $gfJaN$restructure.uint24,\n    handle: $gfJaN$restructure.uint32\n});\nlet $d0fe640dc6c78783$var$Type = new $gfJaN$restructure.Struct({\n    name: new $gfJaN$restructure.String(4),\n    maxTypeIndex: $gfJaN$restructure.uint16,\n    refList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, new $gfJaN$restructure.Array($d0fe640dc6c78783$var$Ref, (t)=>t.maxTypeIndex + 1), {\n        type: \"parent\"\n    })\n});\nlet $d0fe640dc6c78783$var$TypeList = new $gfJaN$restructure.Struct({\n    length: $gfJaN$restructure.uint16,\n    types: new $gfJaN$restructure.Array($d0fe640dc6c78783$var$Type, (t)=>t.length + 1)\n});\nlet $d0fe640dc6c78783$var$DFontMap = new $gfJaN$restructure.Struct({\n    reserved: new $gfJaN$restructure.Reserved($gfJaN$restructure.uint8, 24),\n    typeList: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, $d0fe640dc6c78783$var$TypeList),\n    nameListOffset: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint16, \"void\")\n});\nlet $d0fe640dc6c78783$var$DFontHeader = new $gfJaN$restructure.Struct({\n    dataOffset: $gfJaN$restructure.uint32,\n    map: new $gfJaN$restructure.Pointer($gfJaN$restructure.uint32, $d0fe640dc6c78783$var$DFontMap),\n    dataLength: $gfJaN$restructure.uint32,\n    mapLength: $gfJaN$restructure.uint32\n});\nclass $d0fe640dc6c78783$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        let stream = new $gfJaN$restructure.DecodeStream(buffer);\n        try {\n            var header = $d0fe640dc6c78783$var$DFontHeader.decode(stream);\n        } catch (e) {\n            return false;\n        }\n        for (let type of header.map.typeList.types){\n            if (type.name === \"sfnt\") return true;\n        }\n        return false;\n    }\n    getFont(name) {\n        if (!this.sfnt) return null;\n        for (let ref of this.sfnt.refList){\n            let pos = this.header.dataOffset + ref.dataOffset + 4;\n            let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer.slice(pos));\n            let font = new (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039)(stream);\n            if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every((v, i)=>name[i] === v)) return font;\n        }\n        return null;\n    }\n    get fonts() {\n        let fonts = [];\n        for (let ref of this.sfnt.refList){\n            let pos = this.header.dataOffset + ref.dataOffset + 4;\n            let stream = new $gfJaN$restructure.DecodeStream(this.stream.buffer.slice(pos));\n            fonts.push(new (0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039)(stream));\n        }\n        return fonts;\n    }\n    constructor(stream){\n        (0, ($parcel$interopDefault($gfJaN$swchelperslib_define_propertyjs)))(this, \"type\", \"DFont\");\n        this.stream = stream;\n        this.header = $d0fe640dc6c78783$var$DFontHeader.decode(this.stream);\n        for (let type of this.header.map.typeList.types){\n            for (let ref of type.refList)if (ref.nameOffset >= 0) {\n                this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n                ref.name = $d0fe640dc6c78783$var$DFontName.decode(this.stream);\n            } else ref.name = null;\n            if (type.name === \"sfnt\") this.sfnt = type;\n        }\n    }\n}\n\n\n\n// Register font formats\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $0a8ef2660a6ce4b6$export$2e2bcd8739ae039));\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $8a0a49baaf5d834d$export$2e2bcd8739ae039));\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $333fb94547d9fb5c$export$2e2bcd8739ae039));\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $e0b2de9958441c02$export$2e2bcd8739ae039));\n(0, $59aa4ed98453e1d4$export$36b2f24e97d43be)((0, $d0fe640dc6c78783$export$2e2bcd8739ae039));\n$parcel$exportWildcard(module.exports, $59aa4ed98453e1d4$exports);\n\n\n//# sourceMappingURL=browser.cjs.map\n"],"sourceRoot":""}